
{"version":3,"file":"bundle.user.js","mappings":"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","sources":["webpack://tampermonkey/webpack/bootstrap","webpack://tampermonkey/webpack/runtime/define property getters","webpack://tampermonkey/webpack/runtime/hasOwnProperty shorthand","webpack://tampermonkey/./src/api.js","webpack://tampermonkey/./src/ui.js","webpack://tampermonkey/./src/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// src/api.js\n\nexport async function getAnswer(prompt) {\n  return new Promise((resolve, reject) => {\n    GM_xmlhttpRequest({\n      method: \"POST\",\n      url: \"http://localhost:3000/api/process\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: JSON.stringify({ prompt }),\n      onload: function (response) {\n        if (response.status === 200) {\n          try {\n            const data = JSON.parse(response.responseText);\n            resolve(data);\n          } catch (e) {\n            reject(\"JSON parse error: \" + e);\n          }\n        } else {\n          reject(\"API failed with status: \" + response.status);\n        }\n      },\n      onerror: function (error) {\n        reject(\"API error: \" + error);\n      },\n    });\n  });\n}\n\nexport async function getHumanScore(answers) {\n  return new Promise((resolve, reject) => {\n    GM_xmlhttpRequest({\n      method: \"POST\",\n      url: \"http://localhost:3000/api/process/human-score\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: JSON.stringify({ answers }),\n      onload: function (response) {\n        if (response.status === 200) {\n          try {\n            const data = JSON.parse(response.responseText);\n            resolve(data);\n          } catch (e) {\n            reject(\"JSON parse error: \" + e);\n          }\n        } else {\n          reject(\"API failed with status: \" + response.status);\n        }\n      },\n      onerror: function (error) {\n        reject(\"API error: \" + error);\n      },\n    });\n  });\n}\n\nexport async function saveDB(question, answer, score) {\n  return new Promise((resolve, reject) => {\n    GM_xmlhttpRequest({\n      method: \"POST\",\n      url: \"http://localhost:3000/api/answer\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      data: JSON.stringify({\n        question,\n        answer,\n        score,\n      }),\n      onload: function (response) {\n        if (response.status === 200) {\n          try {\n            const data = JSON.parse(response.responseText);\n            resolve(data);\n          } catch (e) {\n            reject(\"JSON parse error: \" + e);\n          }\n        } else {\n          reject(\"API failed with status: \" + response.status);\n        }\n      },\n      onerror: function (error) {\n        reject(\"API error: \" + error);\n      },\n    });\n  });\n}\n","import { getCourses, getStageFrame, getIFramePreview } from \"./main\";\r\n\r\nlet exampleQuestions = [];\r\n\r\nexport function displayHumanElement(text, score = null) {\r\n  const stageFrame = document.getElementById(\"stageFrame\");\r\n  if (!stageFrame) return;\r\n\r\n  // Only create style and container if they don't exist\r\n  if (!document.querySelector(\"#custom-human-style\")) {\r\n    const rect = stageFrame.getBoundingClientRect();\r\n    let style = document.createElement(\"style\");\r\n    style.id = \"custom-human-style\";\r\n    style.innerHTML = `\r\n      .human-container {\r\n          position: absolute;\r\n          left: ${rect.right + 20 + window.scrollX}px;\r\n          top: ${rect.bottom - 120 + window.scrollY}px;\r\n          z-index: 1000;\r\n          display: flex;\r\n          flex-direction: column;\r\n          background: #141517;\r\n          padding: 10px;\r\n          border-radius: 12px;\r\n          font-size: 14px;\r\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), \r\n                     inset 0 1px rgba(255, 255, 255, 0.1);\r\n          width: 150px;\r\n          height: 100px;\r\n          text-align: center;\r\n      }\r\n      .human-title {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          gap: 4px;\r\n          color: white;\r\n      }\r\n      .human-circle-container {\r\n          position: relative;\r\n          width: 100px;\r\n          height: 60px;\r\n          margin: 0 auto;\r\n      }\r\n      .human-circle {\r\n          fill: transparent;\r\n          stroke: #006cff;\r\n          stroke-width: 10;\r\n          transition: stroke-dashoffset 1.5s ease-in-out;\r\n      }\r\n      .human-text {\r\n          font-size: 40px;\r\n          font-weight: bold;\r\n          fill: white;\r\n      }\r\n      @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n      }\r\n      .human-loading-spinner {\r\n          animation: spin 1s linear infinite;\r\n          transform-origin: center;\r\n      }`;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  let container = document.querySelector(\".human-container\");\r\n  if (!container) {\r\n    container = document.createElement(\"div\");\r\n    container.className = \"human-container\";\r\n    container.innerHTML = `\r\n      <div class=\"human-title\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-venetian-mask\">\r\n              <path d=\"M2 12a5 5 0 0 0 5 5 8 8 0 0 1 5 2 8 8 0 0 1 5-2 5 5 0 0 0 5-5V7h-5a8 8 0 0 0-5 2 8 8 0 0 0-5-2H2Z\"></path>\r\n              <path d=\"M6 11c1.5 0 3 .5 3 2-2 0-3 0-3-2Z\"></path>\r\n              <path d=\"M18 11c-1.5 0-3 .5-3 2 2 0 3 0 3-2Z\"></path>\r\n          </svg>\r\n          ${text}\r\n      </div>\r\n      <div class=\"human-circle-container\">\r\n          <svg width=\"100\" height=\"60\" viewBox=\"0 0 120 120\" class=\"human-loading-spinner\">\r\n              <circle cx=\"60\" cy=\"60\" r=\"48\" stroke=\"white\" stroke-width=\"8\" fill=\"none\" stroke-dasharray=\"75\" stroke-linecap=\"round\"/>\r\n          </svg>\r\n          <svg width=\"100\" height=\"60\" viewBox=\"0 0 120 120\" style=\"display: none;\" class=\"score-display\">\r\n              <circle class=\"human-circle\" cx=\"60\" cy=\"60\" r=\"48\" stroke-dasharray=\"301.59\" stroke-dashoffset=\"301.59\" transform=\"rotate(-90 60 60)\"/>\r\n              <text x=\"60\" y=\"60\" text-anchor=\"middle\" dominant-baseline=\"middle\" class=\"human-text\">0</text>\r\n          </svg>\r\n      </div>`;\r\n    document.body.appendChild(container);\r\n  }\r\n\r\n  // Add resize event listener to update position\r\n  const updatePosition = () => {\r\n    const rect = stageFrame.getBoundingClientRect();\r\n    container.style.left = `${rect.right + 20 + window.scrollX}px`;\r\n    container.style.top = `${rect.bottom - 100 + window.scrollY}px`;\r\n  };\r\n\r\n  // Add resize and scroll event listeners\r\n  window.addEventListener(\"resize\", updatePosition);\r\n  window.addEventListener(\"scroll\", updatePosition);\r\n\r\n  // Update display and animate when score is provided\r\n  if (score !== null) {\r\n    const loadingSpinner = container.querySelector(\".human-loading-spinner\");\r\n    const scoreDisplay = container.querySelector(\".score-display\");\r\n    const progressCircle = container.querySelector(\".human-circle\");\r\n    const scoreText = container.querySelector(\".human-text\");\r\n\r\n    loadingSpinner.style.display = \"none\";\r\n    scoreDisplay.style.display = \"block\";\r\n    scoreText.textContent = score;\r\n\r\n    // Animate the circle with a smooth transition\r\n    const circumference = 2 * Math.PI * 48; // 2πr where r=48\r\n    const offset = circumference - (score / 100) * circumference;\r\n    progressCircle.style.strokeDasharray = circumference;\r\n    progressCircle.style.strokeDashoffset = circumference;\r\n\r\n    // Trigger reflow to ensure transition works\r\n    progressCircle.getBoundingClientRect();\r\n    progressCircle.style.strokeDashoffset = offset;\r\n  }\r\n}\r\n/**\r\n * Creates and inserts a draggable menu into the DOM.\r\n * @param {Function} onStartCallback - Callback function for auto writing\r\n * @param {Function} onExamCallback - Callback function for exam automation\r\n */\r\nexport function initDraggableMenu(onStartCallback, onExamCallback) {\r\n  try {\r\n    // Check if document is ready\r\n    if (!document.body) {\r\n      console.error(\"Document body not ready\");\r\n      // Wait for DOM to be ready\r\n      document.addEventListener(\"DOMContentLoaded\", () => {\r\n        initDraggableMenu(onStartCallback, onExamCallback);\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Check for existing menu to prevent duplicates\r\n    const existingMenu = document.getElementById(\"autoWritingMenu\");\r\n    if (existingMenu) {\r\n      existingMenu.remove();\r\n    }\r\n\r\n    // 1. CREATE THE MENU CONTAINER\r\n    const menu = document.createElement(\"div\");\r\n    menu.id = \"autoWritingMenu\";\r\n    menu.innerHTML = `\r\n      <div class=\"menu-header\">\r\n        <div class=\"menu-title\">REVOLT | BETA</div>\r\n      </div>\r\n      <div class=\"menu-items\">\r\n      <div class=\"menu-item\" id=\"autoVideoItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"video-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <polygon points=\"23 7 16 12 23 17 23 7\"></polygon>\r\n                  <rect x=\"1\" y=\"5\" width=\"15\" height=\"14\" rx=\"2\" ry=\"2\"></rect>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto Video</span>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div class=\"menu-item\" id=\"autoInstructionItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"instruction-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n                  <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n                  <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\r\n                  <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\r\n                  <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto Instruction</span>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div class=\"menu-item\" id=\"autoAdvanceItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"rocket-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <path d=\"M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z\"></path>\r\n                  <path d=\"M12 15l-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z\"></path>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto Advance</span>\r\n            </div>\r\n          </button>\r\n          <div class=\"menu-item-content\" style=\"display: none;\">\r\n            <div class=\"menu-body\">\r\n            <div class=\"menu-row\">\r\n            <label>Advance Type:</label>\r\n                <div class=\"typing-dropdown\" style=\"width: 100%;\">\r\n                  <button class=\"dropdown-btn\" id=\"autoAdvanceTypeBtn\">Select type</button>\r\n                  <div class=\"dropdown-content\">\r\n                    <div class=\"dropdown-option\" data-value=\"activity\">Activity Advance</div>\r\n                    <div class=\"dropdown-option\" data-value=\"unlocked\">Unlocked Advance</div>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n              </div>\r\n                  </div>\r\n                </div>\r\n        <div class=\"menu-item\" id=\"autoWritingItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"settings-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n                  <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto writing</span>\r\n            </div>\r\n          </button>\r\n          <div class=\"menu-item-content\" style=\"display: none;\">\r\n            <div class=\"menu-body\">\r\n              <div class=\"menu-row\">\r\n                <label>Submit delay:</label>\r\n                <div class=\"input-group\" style=\"width: 100%;\">\r\n                  <div class=\"input-with-unit\">\r\n                    <input type=\"number\" min=\"0\" step=\"1\" value=\"0\" id=\"submitDelay1\">\r\n                    <span class=\"input-unit\">sec</span>\r\n                  </div>\r\n                  <span>-</span>\r\n                  <div class=\"input-with-unit\">\r\n                    <input type=\"number\" min=\"0\" step=\"1\" value=\"0\" id=\"submitDelay2\">\r\n                    <span class=\"input-unit\">sec</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"menu-row\">\r\n                <label>Answer delay:</label>\r\n                <div class=\"typing-dropdown answer-delay-dropdown\" style=\"width: 100% !important;\">\r\n                  <button class=\"dropdown-btn\" id=\"answerDelayBtn\">None</button>\r\n                  <div class=\"dropdown-content\">\r\n                    <div class=\"dropdown-option\" data-value=\"none\">None</div>\r\n                    <div class=\"dropdown-option\" data-value=\"custom\">Custom</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"input-with-unit custom-delay-input\" style=\"display: none; width: 60px;\">\r\n                  <input type=\"number\" min=\"0\" step=\"1\" value=\"0\" id=\"answerDelay\" style=\"width: 60px !important;\">\r\n                  <span class=\"input-unit\">wpm</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"menu-row\">\r\n                <label>Typing Style:</label>\r\n                <div class=\"typing-dropdown\">\r\n                  <button class=\"dropdown-btn\" id=\"typingStyleBtn\">None</button>\r\n                  <div class=\"dropdown-content\">\r\n                    <div class=\"dropdown-option\" data-value=\"default\">None</div>\r\n                    <div class=\"dropdown-option\" data-value=\"level1\">Level 1</div>\r\n                    <div class=\"dropdown-option\" data-value=\"level2\">Level 2</div>\r\n                    <div class=\"dropdown-option\" data-value=\"level3\">Level 3</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"menu-row\">\r\n                <label>Placeholder:</label>\r\n                <div class=\"typing-dropdown\">\r\n                  <button class=\"dropdown-btn\" id=\"placeholderBtn\">None</button>\r\n                  <div class=\"dropdown-content\">\r\n                    <div class=\"dropdown-option\" data-value=\"default\">None</div>\r\n                    <div class=\"dropdown-option\" data-value=\"enabled\">Enabled</div>\r\n                    <div class=\"dropdown-option\" data-value=\"disabled\">Disabled</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"custom-placeholder-input\" style=\"display: none;\">\r\n                <textarea \r\n                  id=\"placeholderText\" \r\n                  placeholder=\"Enter custom placeholder text...\"\r\n                  rows=\"3\"\r\n                >This topic has many sides to consider, each offering unique insights required to understand.</textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"menu-item\" id=\"examUnlockerItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"unlock-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect>\r\n                  <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto Exam</span>\r\n            </div>\r\n          </button>\r\n          <div class=\"menu-item-content\" style=\"display: none;\">\r\n            <div class=\"menu-body\">\r\n              <div class=\"menu-row\">\r\n                <label>Exam Info:</label>\r\n                <div class=\"typing-dropdown\">\r\n                  <button class=\"dropdown-btn\" id=\"examInfoBtn\">Disabled</button>\r\n                  <div class=\"dropdown-content\">\r\n                    <div class=\"dropdown-option\" data-value=\"enabled\">Enabled</div>\r\n                    <div class=\"dropdown-option\" data-value=\"disabled\">Disabled</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"menu-item\" id=\"autoVocabItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"wordbook-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"></path>\r\n                  <path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"></path>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto Vocabulary</span>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Create and append styles first\r\n    const style = document.createElement(\"style\");\r\n    style.id = \"autoWritingMenuStyle\"; // Add ID to prevent duplicate styles\r\n    style.textContent = `\r\n      #autoWritingMenu {\r\n        position: fixed;\r\n        top: 100px;\r\n        left: 100px;\r\n        width: 320px;\r\n        background: #141517;\r\n        border-radius: 12px;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        z-index: 999999;\r\n        cursor: default;\r\n        color: white;\r\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\r\n      }\r\n\r\n      .menu-header {\r\n        background: #222324;\r\n        padding: 15px 20px;\r\n        user-select: none;\r\n        border-radius: 12px 12px 0 0;\r\n        cursor: grab;\r\n      }\r\n\r\n      .menu-title {\r\n        color: white;\r\n        font-size: 24px;\r\n        font-weight: 800;\r\n      }\r\n\r\n      .menu-items {\r\n        padding: 10px;\r\n      }\r\n\r\n      .menu-item {\r\n        margin-bottom: 8px;\r\n      }\r\n\r\n      .menu-item-button {\r\n        width: 100%;\r\n        padding: 10px 15px;\r\n        background: #242526;\r\n        border: none;\r\n        border-radius: 6px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        text-align: left;\r\n        cursor: pointer;\r\n        transition: all 0.3s ease;\r\n        position: relative;\r\n        overflow: hidden;\r\n      }\r\n\r\n      .menu-item-button:hover {\r\n        background: #2a2b2c;\r\n      }\r\n\r\n      .menu-item-button.active {\r\n        background: #006cff;\r\n        animation: pulse 2s infinite;\r\n      }\r\n\r\n      .menu-item-button.writing {\r\n        background: #006cff;\r\n        animation: writing-pulse 2s infinite;\r\n      }\r\n\r\n      .menu-item-button.writing::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: -100%;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: linear-gradient(\r\n          90deg,\r\n          transparent,\r\n          rgba(255, 255, 255, 0.2),\r\n          transparent\r\n        );\r\n        animation: wave 2s linear infinite;\r\n      }\r\n\r\n      @keyframes pulse {\r\n        0% {\r\n          box-shadow: 0 0 0 0 rgba(0, 108, 255, 0.4);\r\n        }\r\n        70% {\r\n          box-shadow: 0 0 0 10px rgba(0, 108, 255, 0);\r\n        }\r\n        100% {\r\n          box-shadow: 0 0 0 0 rgba(0, 108, 255, 0);\r\n        }\r\n      }\r\n\r\n      @keyframes writing-pulse {\r\n        0% {\r\n          box-shadow: 0 0 5px rgba(0, 108, 255, 0.5),\r\n                      0 0 10px rgba(0, 108, 255, 0.3);\r\n        }\r\n        50% {\r\n          box-shadow: 0 0 10px rgba(0, 108, 255, 0.7),\r\n                      0 0 20px rgba(0, 108, 255, 0.5);\r\n        }\r\n        100% {\r\n          box-shadow: 0 0 5px rgba(0, 108, 255, 0.5),\r\n                      0 0 10px rgba(0, 108, 255, 0.3);\r\n        }\r\n      }\r\n\r\n      @keyframes wave {\r\n        0% {\r\n          left: -100%;\r\n        }\r\n        100% {\r\n          left: 100%;\r\n        }\r\n      }\r\n\r\n      .menu-body {\r\n        padding: 15px;\r\n        background: #1a1b1c;\r\n        border-radius: 6px;\r\n        margin-top: 8px;\r\n      }\r\n\r\n      .menu-row {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        margin-bottom: 12px;\r\n        height: 32px;\r\n      }\r\n\r\n      .menu-row label {\r\n        min-width: 100px;\r\n        color: white;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        opacity: 0.9;\r\n      }\r\n\r\n      .input-group {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n      }\r\n\r\n      .input-with-unit {\r\n        position: relative;\r\n        width: 60px;\r\n      }\r\n\r\n      input[type=\"number\"] {\r\n        width: 100%;\r\n        height: 28px;\r\n        padding: 0 25px 0 8px;\r\n        background: #242526;\r\n        border: none;\r\n        border-radius: 4px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        -moz-appearance: textfield;\r\n      }\r\n\r\n      input[type=\"number\"]::-webkit-outer-spin-button,\r\n      input[type=\"number\"]::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n      }\r\n\r\n      .input-unit {\r\n        position: absolute;\r\n        right: 8px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        color: rgba(255, 255, 255, 0.6);\r\n        font-size: 10px;\r\n        pointer-events: none;\r\n      }\r\n\r\n      .typing-dropdown {\r\n        position: relative;\r\n        width: 100%;\r\n      }\r\n\r\n      .dropdown-btn {\r\n        width: 100%;\r\n        height: 28px;\r\n        padding: 0 10px;\r\n        background: #242526;\r\n        border: none;\r\n        border-radius: 4px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        text-align: left;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n      }\r\n\r\n      .dropdown-btn::after {\r\n        content: '▼';\r\n        font-size: 10px;\r\n        opacity: 0.7;\r\n      }\r\n\r\n      .dropdown-content {\r\n        position: absolute;\r\n        top: 100%;\r\n        left: 0;\r\n        width: 100%;\r\n        background: #242526;\r\n        border-radius: 4px;\r\n        z-index: 1;\r\n        margin-top: 4px;\r\n        display: none;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3),\r\n                    0 0 0 1px rgba(255, 255, 255, 0.05);\r\n        border: 1px solid rgba(255, 255, 255, 0.1);\r\n        overflow: hidden;\r\n      }\r\n\r\n      .dropdown-option {\r\n        text-align: left;\r\n        padding: 8px 10px;\r\n        color: white;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease;\r\n        border-bottom: 1px solid rgba(255, 255, 255, 0.05);\r\n      }\r\n\r\n      .dropdown-option:last-child {\r\n        border-bottom: none;\r\n      }\r\n\r\n      .dropdown-option:hover {\r\n        background: #2a2b2c;\r\n        padding-left: 15px;\r\n      }\r\n\r\n      .typing-dropdown.active .dropdown-content {\r\n        display: block;\r\n      }\r\n\r\n      .typing-dropdown.active .dropdown-content1 {\r\n        height: 380px;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3),\r\n                    0 0 0 1px rgba(255, 255, 255, 0.05);\r\n        border: 1px solid rgba(255, 255, 255, 0.1);\r\n      }\r\n\r\n      .custom-delay-input {\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .button-content {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 10px;\r\n        width: 100%;\r\n      }\r\n\r\n      .settings-icon,\r\n      .unlock-icon,\r\n      .rocket-icon,\r\n      .video-icon,\r\n      .instruction-icon {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 24px;\r\n        height: 24px;\r\n        border-radius: 4px;\r\n        transition: all 0.2s ease;\r\n        color: rgba(255, 255, 255, 0.7);\r\n      }\r\n\r\n      .settings-icon:hover,\r\n      .unlock-icon:hover,\r\n      .rocket-icon:hover,\r\n      .video-icon:hover,\r\n      .instruction-icon:hover {\r\n        background: rgba(255, 255, 255, 0.1);\r\n        color: white;\r\n      }\r\n\r\n      .button-text {\r\n        flex: 1;\r\n      }\r\n\r\n      /* Editor Writing Animation */\r\n      .cke_editable.writing-active {\r\n        position: relative;\r\n        border: 1px solid rgba(0, 108, 255, 0.3) !important;\r\n        box-shadow: 0 0 10px rgba(0, 108, 255, 0.2) !important;\r\n      }\r\n\r\n      .cke_editable.writing-active::after {\r\n        content: '';\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 2px;\r\n        background: linear-gradient(90deg, #006cff, transparent);\r\n        animation: writing 2s ease-out infinite;\r\n      }\r\n\r\n      @keyframes writing {\r\n        0% {\r\n          width: 0;\r\n          opacity: 1;\r\n        }\r\n        50% {\r\n          width: 100%;\r\n          opacity: 1;\r\n        }\r\n        100% {\r\n          width: 100%;\r\n          opacity: 0;\r\n        }\r\n      }\r\n\r\n      .custom-placeholder-input {\r\n        margin-top: 8px;\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .custom-placeholder-input textarea {\r\n        width: 100%;\r\n        padding: 8px 12px;\r\n        background: #242526;\r\n        border: 1px solid rgba(255, 255, 255, 0.1);\r\n        border-radius: 4px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        resize: vertical;\r\n        min-height: 80px;\r\n        line-height: 1.5;\r\n      }\r\n\r\n      .custom-placeholder-input textarea:focus {\r\n        outline: none;\r\n        border-color: rgba(0, 108, 255, 0.5);\r\n        box-shadow: 0 0 0 2px rgba(0, 108, 255, 0.2);\r\n      }\r\n\r\n      #examUnlockerItem .menu-item-button.active {\r\n        background: #006cff;\r\n        animation: pulse 2s infinite;\r\n      }\r\n\r\n      #examUnlockerItem .menu-body {\r\n        padding: 15px;\r\n        background: #1a1b1c;\r\n        border-radius: 6px;\r\n        margin-top: 8px;\r\n      }\r\n\r\n      .exam-panel-header {\r\n        cursor: grab;\r\n        user-select: none;\r\n        border-radius: 12px 12px 0 0;\r\n      }\r\n\r\n      .exam-panel-header:active {\r\n        cursor: grabbing;\r\n      }\r\n\r\n      .loading-overlay {\r\n        display: none;\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: rgba(0, 0, 0, 0.7);\r\n        z-index: 1000000;\r\n        opacity: 0;\r\n        transition: opacity 0.3s ease;\r\n      }\r\n\r\n      .loading-overlay.show {\r\n        opacity: 1;\r\n      }\r\n\r\n      .loading-spinner-container {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        text-align: center;\r\n      }\r\n\r\n      .loading-spinner {\r\n        width: 40px;\r\n        height: 40px;\r\n        border: 3px solid rgba(255, 255, 255, 0.1);\r\n        border-radius: 50%;\r\n        border-top-color: #006cff;\r\n        animation: spin 1s ease-in-out infinite;\r\n      }\r\n\r\n      .loading-text {\r\n        color: white;\r\n        margin-top: 16px;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n      }\r\n\r\n      @keyframes spin {\r\n        to { transform: rotate(360deg); }\r\n      }\r\n    `;\r\n\r\n    // Check if styles already exist\r\n    if (!document.getElementById(\"autoWritingMenuStyle\")) {\r\n      document.head.appendChild(style);\r\n    }\r\n\r\n    // Now append the menu\r\n    document.body.appendChild(menu);\r\n\r\n    // 2. ADD EVENT LISTENERS\r\n    const autoWritingItem = document.getElementById(\"autoWritingItem\");\r\n    const autoWritingButton =\r\n      autoWritingItem.querySelector(\".menu-item-button\");\r\n    const settingsIcon = autoWritingItem.querySelector(\".settings-icon\");\r\n    const autoWritingContent =\r\n      autoWritingItem.querySelector(\".menu-item-content\");\r\n\r\n    // Toggle menu content\r\n    settingsIcon.addEventListener(\"click\", () => {\r\n      const isExpanded = autoWritingContent.style.display !== \"none\";\r\n      autoWritingContent.style.display = isExpanded ? \"none\" : \"block\";\r\n      autoWritingButton.style.background = isExpanded ? \"#242526\" : \"#2a2b2c\";\r\n    });\r\n\r\n    // Button click handler (excluding settings icon) - start auto writing\r\n    autoWritingButton.addEventListener(\"click\", (e) => {\r\n      if (e.target.closest(\".settings-icon\")) {\r\n        return;\r\n      }\r\n\r\n      const submitDelay1 = document.querySelector(\"#submitDelay1\");\r\n      const submitDelay2 = document.querySelector(\"#submitDelay2\");\r\n      const answerDelay = document.querySelector(\"#answerDelay\");\r\n      const answerDelayBtn = document.querySelector(\"#answerDelayBtn\");\r\n      const typingStyleBtn = document.querySelector(\"#typingStyleBtn\");\r\n\r\n      // Validate configuration\r\n      if (\r\n        (submitDelay1.value === \"0\" && submitDelay2.value === \"0\") ||\r\n        parseInt(submitDelay1.value) > parseInt(submitDelay2.value)\r\n      ) {\r\n        alert(\"Error at submit delay\");\r\n        return;\r\n      }\r\n\r\n      if (\r\n        answerDelay.value === \"0\" &&\r\n        answerDelayBtn.textContent.trim() === \"Custom\"\r\n      ) {\r\n        alert(\"Error at answer delay\");\r\n        return;\r\n      }\r\n\r\n      // Update button state\r\n      const isActive = !autoWritingButton.classList.contains(\"active\");\r\n      updateAutoWritingState(isActive ? \"active\" : \"idle\");\r\n\r\n      // Collect configuration data\r\n      const config = {\r\n        isActive: autoWritingButton.classList.contains(\"active\"),\r\n        submitDelay: {\r\n          min: parseInt(submitDelay1.value) || 0,\r\n          max: parseInt(submitDelay2.value) || 0,\r\n        },\r\n        answerDelay: parseInt(answerDelay.value) || 0,\r\n        typingStyle: typingStyleBtn.textContent.trim(),\r\n        placeholder: document\r\n          .querySelector(\"#placeholderBtn\")\r\n          .textContent.trim(),\r\n        placeholderText:\r\n          document.querySelector(\"#placeholderBtn\").textContent.trim() ===\r\n          \"Enabled\"\r\n            ? document.querySelector(\"#placeholderText\").value.trim()\r\n            : \"\",\r\n      };\r\n\r\n      // Call the callback with the configuration\r\n      if (typeof onStartCallback === \"function\") {\r\n        onStartCallback(config);\r\n      }\r\n    });\r\n\r\n    // Add dropdown functionality\r\n    const dropdowns = menu.querySelectorAll(\".typing-dropdown\");\r\n    dropdowns.forEach((dropdown) => {\r\n      const btn = dropdown.querySelector(\".dropdown-btn\");\r\n      const options = dropdown.querySelectorAll(\".dropdown-option\");\r\n\r\n      btn.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation();\r\n        dropdowns.forEach((d) => {\r\n          if (d !== dropdown) d.classList.remove(\"active\");\r\n        });\r\n        dropdown.classList.toggle(\"active\");\r\n      });\r\n\r\n      options.forEach((option) => {\r\n        option.addEventListener(\"click\", (e) => {\r\n          e.stopPropagation();\r\n          const selectedValue = option.getAttribute(\"data-value\");\r\n          btn.textContent = option.textContent;\r\n          dropdown.classList.remove(\"active\");\r\n\r\n          if (dropdown.classList.contains(\"answer-delay-dropdown\")) {\r\n            const customDelayInput = menu.querySelector(\".custom-delay-input\");\r\n            if (selectedValue === \"custom\") {\r\n              customDelayInput.style.display = \"block\";\r\n            } else {\r\n              customDelayInput.style.display = \"none\";\r\n              document.querySelector(\"#answerDelay\").value = \"0\";\r\n            }\r\n          }\r\n\r\n          // Add this block to handle placeholder dropdown\r\n          if (btn.id === \"placeholderBtn\") {\r\n            const customPlaceholderInput = menu.querySelector(\r\n              \".custom-placeholder-input\"\r\n            );\r\n            if (option.textContent === \"Enabled\") {\r\n              customPlaceholderInput.style.display = \"block\";\r\n            } else {\r\n              customPlaceholderInput.style.display = \"none\";\r\n            }\r\n          }\r\n\r\n          // Add this block to handle exam info dropdown\r\n          if (btn.id === \"examInfoBtn\") {\r\n            if (option.textContent === \"Enabled\") {\r\n              // Example questions array - replace with actual API data\r\n              displayExamPanel(exampleQuestions);\r\n            } else {\r\n              const panel = document.querySelector(\"#examInfoPanel\");\r\n              if (panel) panel.remove();\r\n            }\r\n\r\n            // Update exam configuration\r\n            const config = {\r\n              isActive: examUnlockerButton.classList.contains(\"active\"),\r\n              examInfo: option.textContent,\r\n            };\r\n\r\n            // Call the callback with the configuration\r\n            if (typeof onExamCallback === \"function\") {\r\n              onExamCallback(config);\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    // Close dropdowns when clicking outside\r\n    document.addEventListener(\"click\", () => {\r\n      dropdowns.forEach((dropdown) => dropdown.classList.remove(\"active\"));\r\n    });\r\n\r\n    // Update the Auto Advance button click handler\r\n    const autoAdvanceItem = document.getElementById(\"autoAdvanceItem\");\r\n    const autoAdvanceButton =\r\n      autoAdvanceItem?.querySelector(\".menu-item-button\");\r\n    const rocketIcon = autoAdvanceItem.querySelector(\".rocket-icon\");\r\n    const autoAdvanceContent =\r\n      autoAdvanceItem.querySelector(\".menu-item-content\");\r\n\r\n    // Toggle menu content when clicking the rocket icon\r\n    rocketIcon.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      const isExpanded = autoAdvanceContent.style.display !== \"none\";\r\n      autoAdvanceContent.style.display = isExpanded ? \"none\" : \"block\";\r\n      autoAdvanceButton.style.background = isExpanded ? \"#242526\" : \"#2a2b2c\";\r\n      // // Toggle dropdown content when clicking the dropdown button\r\n      // const autoAdvanceTypeBtn = document.querySelector(\"#autoAdvanceTypeBtn\");\r\n      // const dropdownContent = autoAdvanceTypeBtn.nextElementSibling;\r\n\r\n      // autoAdvanceTypeBtn.addEventListener(\"click\", (e) => {\r\n      //   e.stopPropagation();\r\n      //   const isActive = dropdownContent.classList.contains(\"active\");\r\n\r\n      //   console.log(\"isActive\", isActive);\r\n\r\n      //   // Close all other dropdowns first\r\n      //   document.querySelectorAll(\".dropdown-content\").forEach((content) => {\r\n      //     content.classList.remove(\"active\");\r\n      //   });\r\n\r\n      //   // Toggle this dropdown\r\n      //   if (isActive) {\r\n      //     dropdownContent.classList.remove(\"active\");\r\n      //   } else {\r\n      //     dropdownContent.classList.add(\"active\");\r\n      //   }\r\n      // });\r\n    });\r\n\r\n    // Handle main button click (excluding rocket icon)\r\n    autoAdvanceButton.addEventListener(\"click\", async (e) => {\r\n      if (e.target.closest(\".rocket-icon\")) {\r\n        return;\r\n      }\r\n\r\n      autoAdvanceButton.classList.add(\"active\");\r\n\r\n      const selectedType = document\r\n        .querySelector(\"#autoAdvanceTypeBtn\")\r\n        .textContent.trim();\r\n\r\n      if (selectedType === \"Select type\") {\r\n        alert(\"Please select an advance type first\");\r\n        return;\r\n      }\r\n\r\n      // Set tamper value advanceClick as true\r\n      GM_setValue(\"advanceClick\", 1);\r\n      GM_setValue(\"advanceType\", selectedType);\r\n\r\n      // Create and show loading overlay\r\n      const loadingOverlay = document.createElement(\"div\");\r\n      loadingOverlay.className = \"loading-overlay\";\r\n      loadingOverlay.innerHTML = `\r\n          <div class=\"loading-spinner-container\">\r\n            <div class=\"loading-spinner\"></div>\r\n          </div>\r\n        `;\r\n      document.body.appendChild(loadingOverlay);\r\n\r\n      // Show loading overlay with animation\r\n      loadingOverlay.style.display = \"block\";\r\n      loadingOverlay.offsetHeight; // Force reflow\r\n      loadingOverlay.classList.add(\"show\");\r\n\r\n      try {\r\n        // Fetch courses\r\n        const courses = await getCourses();\r\n\r\n        // Hide loading overlay\r\n        loadingOverlay.classList.remove(\"show\");\r\n        setTimeout(() => {\r\n          loadingOverlay.remove();\r\n        }, 300);\r\n\r\n        // Create and show modal\r\n        const modal = await createAutoAdvanceModal(courses);\r\n        if (modal.show) {\r\n          modal.show();\r\n        } else {\r\n          modal.classList.add(\"show\");\r\n          modal.style.display = \"block\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading courses:\", error);\r\n\r\n        // Hide loading overlay and show error message\r\n        loadingOverlay.classList.remove(\"show\");\r\n        setTimeout(() => {\r\n          loadingOverlay.remove();\r\n          alert(\"Failed to load courses. Please try again.\");\r\n        }, 300);\r\n      }\r\n    });\r\n\r\n    // Add dropdown functionality for auto advance type\r\n    const autoAdvanceDropdown =\r\n      autoAdvanceItem.querySelector(\".typing-dropdown\");\r\n    const autoAdvanceBtn = autoAdvanceDropdown.querySelector(\".dropdown-btn\");\r\n    const autoAdvanceOptions =\r\n      autoAdvanceDropdown.querySelectorAll(\".dropdown-option\");\r\n\r\n    autoAdvanceBtn.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      // console.log(autoAdvanceDropdown.classList, \"autoAdvanceBtn clicked ? \");\r\n\r\n      // autoAdvanceDropdown.classList.toggle(\"active\");\r\n      // if (autoAdvanceDropdown.classList.contains(\"active\")) {\r\n      //   autoAdvanceDropdown.classList.remove(\"active\");\r\n      // } else {\r\n      //   autoAdvanceDropdown.classList.add(\"active\");\r\n      // }\r\n    });\r\n\r\n    autoAdvanceOptions.forEach((option) => {\r\n      option.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation();\r\n        const selectedValue = option.getAttribute(\"data-value\");\r\n        autoAdvanceBtn.textContent =\r\n          selectedValue === \"activity\"\r\n            ? \"Activity Advance\"\r\n            : \"Unlocked Advance\";\r\n        option.classList.remove(\"active\");\r\n      });\r\n    });\r\n\r\n    // Update the Auto Vocabulary button click handler\r\n    const autoVocabItem = document.getElementById(\"autoVocabItem\");\r\n    const autoVocabButton = autoVocabItem?.querySelector(\".menu-item-button\");\r\n\r\n    let nextWord = true;\r\n    const stageFrame = getStageFrame();\r\n    autoVocabButton.addEventListener(\"click\", async (e) => {\r\n      // Add wave animation effect\r\n      try {\r\n        if (!stageFrame?.contentWindow) {\r\n          alert(\"Content Window not found\");\r\n          return;\r\n        }\r\n        autoVocabButton.classList.add(\"active\", \"writing\");\r\n        while (nextWord) {\r\n          const contentWindow = stageFrame?.contentWindow;\r\n          let { viewModel, API, ActivityKeys, initialData } = contentWindow;\r\n          const word = viewModel?.currentWord();\r\n          const wordText = word?.word();\r\n          console.log(\"Current Word:\", wordText);\r\n          const wordTextbox =\r\n            stageFrame?.contentDocument?.querySelector(\".word-textbox\");\r\n          if (wordTextbox) {\r\n            wordTextbox.value = wordText;\r\n\r\n            const keyupEvent = new Event(\"keyup\");\r\n            wordTextbox.dispatchEvent(keyupEvent);\r\n\r\n            const url =\r\n              API.E2020.addresses.ContentEngineViewersPath +\r\n              \"Vocab/UpdateAttempt?attemptKey=\" +\r\n              ActivityKeys.resultKey +\r\n              \"&completedWordKey=\" +\r\n              word.key +\r\n              \"&enrollmentKey=\" +\r\n              ActivityKeys.enrollmentKey +\r\n              \"&version=\" +\r\n              ActivityKeys.version;\r\n\r\n            const response = await fetch(url, {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n              },\r\n            });\r\n            const result = await response.json();\r\n            console.log(\"Result:\", result);\r\n\r\n            viewModel.currentWord().complete(true);\r\n            console.log(\"Words:\", viewModel.words());\r\n            const currentWordIndex = viewModel.words().indexOf(word);\r\n            nextWord = viewModel.words()[currentWordIndex + 1];\r\n            if (nextWord) {\r\n              console.log(\"Next Word Rank:\", nextWord.rank());\r\n              viewModel.nextAvailableWord(nextWord);\r\n              viewModel.currentWord().nextButton().state(true);\r\n              viewModel.selectWord(nextWord.rank());\r\n            }\r\n\r\n            console.log(\"Complete:\", viewModel.complete(), result.complete);\r\n            if (viewModel.complete() || result.complete) {\r\n              initialData.Complete = true;\r\n\r\n              stageFrame.src =\r\n                API.E2020.addresses.ContentEngineViewersPath +\r\n                \"LTILogin/Complete?enrollmentKey=\" +\r\n                ActivityKeys.enrollmentKey;\r\n            }\r\n          } else {\r\n            console.error(\"Could not find word textbox element\");\r\n          }\r\n        }\r\n      } finally {\r\n        autoVocabButton.classList.remove(\"active\", \"writing\");\r\n      }\r\n    });\r\n\r\n    // Update the Auto Video button click handler\r\n    const autoVideoItem = document.getElementById(\"autoVideoItem\");\r\n    const autoVideoButton = autoVideoItem?.querySelector(\".menu-item-button\");\r\n\r\n    autoVideoButton.addEventListener(\"click\", async (e) => {\r\n      autoVideoButton.classList.add(\"active\", \"writing\");\r\n      const autoVideoInterval = setInterval(async () => {\r\n        try {\r\n          if (!stageFrame?.contentWindow) {\r\n            alert(\"Content Window not found\");\r\n            return;\r\n          }\r\n          const contentWindow = stageFrame?.contentWindow;\r\n          let { API } = contentWindow;\r\n\r\n          // Find the activity title element\r\n          const activityTitleElement =\r\n            document.getElementById(\"activity-title\");\r\n          const activityTitle = activityTitleElement\r\n            ? activityTitleElement.textContent.trim().toLowerCase()\r\n            : null;\r\n\r\n          const videoElement =\r\n            stageFrame.contentDocument.getElementById(\"home_video_js\");\r\n\r\n          let duration = videoElement?.duration || null;\r\n          let currentTime = videoElement?.currentTime || null;\r\n\r\n          const isCompleted = API.Frame.isComplete();\r\n\r\n          const questionsFrame =\r\n            stageFrame?.contentDocument?.getElementById(\"iFramePreview\");\r\n          const isAVideo = questionsFrame?.style.display === \"none\";\r\n\r\n          console.log(\"isAVideo\", isAVideo);\r\n\r\n          if (!isCompleted) {\r\n            if (\r\n              activityTitle &&\r\n              [\r\n                \"instruction\",\r\n                \"warmup\",\r\n                \"summary\",\r\n                \"lecture\",\r\n                \"lablecture\",\r\n                \"directinstruction\",\r\n              ].includes(activityTitle)\r\n            ) {\r\n              if (isAVideo) {\r\n                if (duration - currentTime < 2 && duration != 0) {\r\n                  nextFrame(stageFrame.contentWindow.API);\r\n                  return;\r\n                } else {\r\n                  return;\r\n                }\r\n              }\r\n\r\n              const iframePreview = getIFramePreview();\r\n              // console.log(\"iframePreview\", iframePreview);\r\n              if (iframePreview) {\r\n                const questions =\r\n                  iframePreview.contentDocument?.querySelectorAll(\r\n                    \"div[fstack]\"\r\n                  );\r\n\r\n                console.log(\"Questions:\", questions);\r\n\r\n                questions.forEach((question) => {\r\n                  setTimeout(() => {\r\n                    let clickedAmount = 0;\r\n                    let input = question.querySelectorAll(\"input\");\r\n                    console.log(\"Input:\", input);\r\n                    if (input && input.length > 0) {\r\n                      Array.from(input).forEach((input) =>\r\n                        Math.random() > 0.5 ? input.click() : null\r\n                      ); // Click a random input\r\n                      clickedAmount++;\r\n                    }\r\n\r\n                    let select = question.querySelector(\"select\");\r\n                    // We don't need to do anything here, since edgenuity doesn't require you to select anything in these types of questions.\r\n                    if (select) clickedAmount++;\r\n\r\n                    let ifFW = question.querySelector(\"iframe\");\r\n                    let hintButton =\r\n                      ifFW?.contentDocument?.getElementById(\"onlyButton\");\r\n                    if (hintButton) {\r\n                      setInterval(() => {\r\n                        hintButton.click();\r\n                        clickedAmount++;\r\n                      }, 250);\r\n                    }\r\n\r\n                    const doneButton =\r\n                      question.querySelectorAll(\"div[title='done']\");\r\n                    if (\r\n                      doneButton &&\r\n                      doneButton.length > 0 &&\r\n                      clickedAmount > 0\r\n                    ) {\r\n                      Array.from(doneButton).forEach((button) =>\r\n                        button.click()\r\n                      );\r\n                      nextFrame(stageFrame);\r\n                    }\r\n                  }, 500);\r\n                });\r\n              }\r\n            }\r\n          } else {\r\n            //   console.log(\"Activity already completed\");\r\n            //   // Find the first incomplete frame and mark it as complete\r\n            //   const firstIncompleteIndex = API.FrameChain.framesStatus.findIndex(\r\n            //     (status) => status !== \"complete\"\r\n            //   );\r\n\r\n            //   if (firstIncompleteIndex !== -1) {\r\n            //     API.FrameChain.framesStatus[firstIncompleteIndex] = \"complete\";\r\n            //   }\r\n            //   console.log(\"Next Frame:\", API.FrameChain.nextFrame());\r\n            //   autoVideoButton.classList.remove(\"active\", \"writing\");\r\n            nextFrame(stageFrame);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error:\", error);\r\n          autoVideoButton.classList.remove(\"active\", \"writing\");\r\n        }\r\n      }, 1000);\r\n    });\r\n\r\n    // Make menu draggable\r\n    const header = menu.querySelector(\".menu-header\");\r\n    let isDragging = false;\r\n    let currentX;\r\n    let currentY;\r\n    let initialX;\r\n    let initialY;\r\n    let xOffset = 0;\r\n    let yOffset = 0;\r\n\r\n    header.addEventListener(\"mousedown\", (e) => {\r\n      initialX = e.clientX - xOffset;\r\n      initialY = e.clientY - yOffset;\r\n      isDragging = true;\r\n    });\r\n\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      if (isDragging) {\r\n        e.preventDefault();\r\n        currentX = e.clientX - initialX;\r\n        currentY = e.clientY - initialY;\r\n        xOffset = currentX;\r\n        yOffset = currentY;\r\n        menu.style.transform = `translate(${currentX}px, ${currentY}px)`;\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", () => {\r\n      isDragging = false;\r\n    });\r\n\r\n    // Add event listener for exam unlocker\r\n    const examUnlockerItem = document.getElementById(\"examUnlockerItem\");\r\n    const examUnlockerButton =\r\n      examUnlockerItem.querySelector(\".menu-item-button\");\r\n    const unlockIcon = examUnlockerItem.querySelector(\".unlock-icon\");\r\n    const examContent = examUnlockerItem.querySelector(\".menu-item-content\");\r\n\r\n    // Toggle menu content when clicking the unlock icon\r\n    unlockIcon.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      const isExpanded = examContent.style.display !== \"none\";\r\n      examContent.style.display = isExpanded ? \"none\" : \"block\";\r\n      examUnlockerButton.style.background = isExpanded ? \"#242526\" : \"#2a2b2c\";\r\n    });\r\n\r\n    // Handle main button click (excluding unlock icon)\r\n    examUnlockerButton.addEventListener(\"click\", (e) => {\r\n      if (e.target.closest(\".unlock-icon\")) {\r\n        return;\r\n      }\r\n\r\n      // Update exam configuration\r\n      const config = {\r\n        isActive: examUnlockerButton.classList.contains(\"active\"),\r\n        examInfo: document.querySelector(\"#examInfoBtn\").textContent.trim(),\r\n      };\r\n\r\n      // Call the callback with the configuration\r\n      if (typeof onExamCallback === \"function\") {\r\n        onExamCallback(config);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error initializing draggable menu:\", error);\r\n  }\r\n}\r\n\r\n// Add this new function\r\nexport function displayLessonNumber(number) {\r\n  const lessonTitle = document.getElementById(\"lessonInfo\");\r\n  if (!lessonTitle) return;\r\n\r\n  // Get the width of the lesson title\r\n  const titleWidth = lessonTitle.offsetWidth;\r\n  console.log(\"Title Width\", titleWidth);\r\n\r\n  // Add styles if they don't exist\r\n  if (!document.getElementById(\"lesson-number-style\")) {\r\n    const style = document.createElement(\"style\");\r\n    style.id = \"lesson-number-style\";\r\n    style.textContent = `\r\n      .lesson-number-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-align: center;\r\n        z-index: 999999;\r\n        animation: fadeIn 0.3s ease-out;\r\n        height: 120px;\r\n        width: ${titleWidth}px;\r\n        margin: 0 auto;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n      }\r\n\r\n      .lesson-number {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n        width: 100%;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        padding: 8px 12px;\r\n        background: #141517;\r\n        border: 1px solid rgba(0, 108, 255, 0.1);\r\n        border-radius: 12px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\r\n        box-sizing: border-box;\r\n        height: 80px;\r\n        position: relative;\r\n      }\r\n\r\n      .progress-bar {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: #242526;\r\n        border-radius: 10px;\r\n      }\r\n\r\n      .progress-text {\r\n        margin-top: 8px;\r\n        font-size: 13px;\r\n        opacity: 0.9;\r\n      }\r\n\r\n      @keyframes fadeIn {\r\n        from {\r\n          opacity: 0;\r\n          transform: translateY(10px);\r\n        }\r\n        to {\r\n          opacity: 1;\r\n          transform: translateY(0);\r\n        }\r\n      }\r\n\r\n      .progress-bar::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        height: 10px;\r\n        width: 100%;\r\n        background: #242526;\r\n        border-radius: 10px;\r\n      }\r\n\r\n      .progress-bar::after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 0;\r\n        transform: translateY(-50%);\r\n        height: 10px;\r\n        width: 0%;\r\n        background: #006cff;\r\n        animation: fillBar 1s ease-out forwards;\r\n        border-radius: 10px;\r\n        box-shadow: 0 0 10px rgba(0, 108, 255, 0.3);\r\n      }\r\n\r\n      @keyframes fillBar {\r\n        from {\r\n          width: 0%;\r\n        }\r\n        to {\r\n          width: calc(100% * var(--progress) / 100);\r\n        }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // Create or update the number element\r\n  let container = document.querySelector(\".lesson-number-container\");\r\n  if (!container) {\r\n    container = document.createElement(\"div\");\r\n    container.className = \"lesson-number-container\";\r\n    container.style.width = `${titleWidth}px`; // Set width dynamically\r\n\r\n    const numberElement = document.createElement(\"span\");\r\n    numberElement.className = \"lesson-number\";\r\n\r\n    const progressBar = document.createElement(\"div\");\r\n    progressBar.className = \"progress-bar\";\r\n\r\n    const progressText = document.createElement(\"div\");\r\n    progressText.className = \"progress-text\";\r\n\r\n    numberElement.appendChild(progressBar);\r\n    numberElement.appendChild(progressText);\r\n    container.appendChild(numberElement);\r\n\r\n    document.body.appendChild(container);\r\n  } else {\r\n    // Update container width if lesson title width changes\r\n    container.style.width = `${titleWidth}px`;\r\n  }\r\n\r\n  // Create ResizeObserver to watch lessonInfo element width changes\r\n  const lessonInfo = document.getElementById(\"lessonInfo\");\r\n  if (lessonInfo) {\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      for (const entry of entries) {\r\n        const lessonInfoWidth = entry.contentRect.width;\r\n        container.style.width = `${lessonInfoWidth}px`;\r\n      }\r\n    });\r\n    resizeObserver.observe(lessonInfo);\r\n  }\r\n\r\n  // Update the number with animation\r\n  const numberElement = container.querySelector(\".lesson-number\");\r\n  const progressText = numberElement.querySelector(\".progress-text\");\r\n\r\n  numberElement.style.animation = \"none\";\r\n  numberElement.offsetHeight; // Trigger reflow\r\n  numberElement.style.animation = \"fadeIn 0.3s ease-out\";\r\n\r\n  // Set the progress percentage as a CSS variable\r\n  numberElement.style.setProperty(\"--progress\", `${number}`);\r\n\r\n  // Update progress text\r\n  progressText.textContent = `You are ${number}% completed`;\r\n}\r\n\r\n// Add this function to handle button states\r\nexport function updateAutoWritingState(state) {\r\n  const autoWritingButton = document.querySelector(\r\n    \"#autoWritingItem .menu-item-button\"\r\n  );\r\n  if (!autoWritingButton) return;\r\n\r\n  // Remove all states first\r\n  autoWritingButton.classList.remove(\"active\", \"writing\");\r\n\r\n  switch (state) {\r\n    case \"idle\":\r\n      // Default state, no classes needed\r\n      break;\r\n    case \"active\":\r\n      autoWritingButton.classList.add(\"active\");\r\n      break;\r\n    case \"writing\":\r\n      autoWritingButton.classList.add(\"active\", \"writing\");\r\n      break;\r\n  }\r\n}\r\n\r\n// Update the createTypingAnimation function\r\nexport function createTypingAnimation(editor, text, config, onComplete) {\r\n  // Update button state to writing\r\n  updateAutoWritingState(\"writing\");\r\n\r\n  // Add writing animation class to the editor\r\n  const editorElement = editor.container.querySelector(\".cke_editable\");\r\n  editorElement.classList.add(\"writing-active\");\r\n\r\n  // Original typing animation code...\r\n  const words = text.split(\" \");\r\n  editor.setData(\"\");\r\n\r\n  // When typing is complete\r\n  const originalOnComplete = onComplete;\r\n  onComplete = () => {\r\n    editorElement.classList.remove(\"writing-active\");\r\n    // Keep button in active state but remove writing animation\r\n    updateAutoWritingState(\"active\");\r\n    if (originalOnComplete) {\r\n      originalOnComplete();\r\n    }\r\n  };\r\n\r\n  // Rest of the existing typing animation code...\r\n}\r\n\r\n// Update the displayExamPanel function with working pagination and scrollable content\r\nexport function displayExamPanel(questions = []) {\r\n  console.log(\"Displaying exam panel\");\r\n\r\n  // Remove existing panel if it exists\r\n  const existingPanel = document.querySelector(\"#examInfoPanel\");\r\n  if (existingPanel) {\r\n    existingPanel.remove();\r\n  }\r\n\r\n  // Update the style to include scrollable content\r\n  if (!document.querySelector(\"#exam-panel-style\")) {\r\n    const style = document.createElement(\"style\");\r\n    style.id = \"exam-panel-style\";\r\n    style.textContent = `\r\n      #examInfoPanel {\r\n        position: fixed;\r\n        top: 100px;\r\n        transform: translate(0, 0); /* Initial position */\r\n        width: 300px;\r\n        background: #141517;\r\n        border-radius: 12px;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        color: white;\r\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\r\n        z-index: 999998;\r\n        display: flex;\r\n        flex-direction: column;\r\n        max-height: 80vh;\r\n      }\r\n\r\n      .exam-panel-header {\r\n        background: #222324;\r\n        padding: 15px;\r\n        border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n        flex-shrink: 0;\r\n      }\r\n\r\n      .exam-panel-title {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: white;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n      }\r\n\r\n      .exam-questions-container {\r\n        padding: 15px;\r\n        overflow-y: auto;\r\n        flex-grow: 1;\r\n        height: 400px;\r\n      }\r\n\r\n      /* Scrollbar styling */\r\n      .exam-questions-container::-webkit-scrollbar {\r\n        width: 4px;\r\n      }\r\n\r\n      .exam-questions-container::-webkit-scrollbar-track {\r\n        background: #1a1b1c;\r\n        border-radius: 4px;\r\n      }\r\n\r\n      .exam-questions-container::-webkit-scrollbar-thumb {\r\n        background: #2a2b2c;\r\n        border-radius: 4px;\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .exam-questions-container::-webkit-scrollbar-thumb:hover {\r\n        background: #006cff;\r\n      }\r\n\r\n      .exam-question-card {\r\n        background: #1a1b1c;\r\n        border-radius: 8px;\r\n        padding: 12px;\r\n        margin-bottom: 10px;\r\n        border: 1px solid rgba(255, 255, 255, 0.1);\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .exam-question-card:hover {\r\n        border-color: rgba(0, 108, 255, 0.5);\r\n        box-shadow: 0 0 0 1px rgba(0, 108, 255, 0.2);\r\n        transform: translateX(-4px);\r\n      }\r\n\r\n      .question-id {\r\n        color: #006cff;\r\n        font-weight: 600;\r\n        font-size: 14px;\r\n        margin-bottom: 4px;\r\n      }\r\n\r\n      .question-status {\r\n        font-size: 12px;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        display: inline-block;\r\n        margin-top: 4px;\r\n      }\r\n\r\n      .status-pending {\r\n        background: rgba(255, 170, 0, 0.2);\r\n        color: #ffaa00;\r\n      }\r\n\r\n      .status-completed {\r\n        background: rgba(0, 200, 83, 0.2);\r\n        color: #00c853;\r\n      }\r\n\r\n      .exam-pagination {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 15px;\r\n        border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n        flex-shrink: 0;\r\n      }\r\n\r\n      .page-info {\r\n        font-size: 14px;\r\n        color: rgba(255, 255, 255, 0.7);\r\n      }\r\n\r\n      .page-buttons {\r\n        display: flex;\r\n        gap: 8px;\r\n      }\r\n\r\n      .page-button {\r\n        background: #242526;\r\n        border: none;\r\n        border-radius: 4px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        padding: 6px 12px;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease;\r\n        min-width: 32px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n\r\n      .page-button:hover:not(:disabled) {\r\n        background: #2a2b2c;\r\n        transform: translateY(-1px);\r\n      }\r\n\r\n      .page-button:active:not(:disabled) {\r\n        transform: translateY(0);\r\n      }\r\n\r\n      .page-button.active {\r\n        background: #006cff;\r\n      }\r\n\r\n      .page-button:disabled {\r\n        opacity: 0.5;\r\n        cursor: not-allowed;\r\n      }\r\n\r\n      .question-details {\r\n        font-size: 13px;\r\n        color: rgba(255, 255, 255, 0.7);\r\n        margin-top: 4px;\r\n      }\r\n\r\n      .question-type {\r\n        display: inline-block;\r\n        padding: 2px 6px;\r\n        background: rgba(0, 108, 255, 0.1);\r\n        color: #006cff;\r\n        border-radius: 4px;\r\n        font-size: 11px;\r\n        margin-right: 8px;\r\n      }\r\n\r\n      .time-remaining {\r\n        font-size: 12px;\r\n        color: rgba(255, 255, 255, 0.6);\r\n        margin-top: 4px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 4px;\r\n      }\r\n\r\n      .time-remaining svg {\r\n        color: #006cff;\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // Create the panel\r\n  const panel = document.createElement(\"div\");\r\n  panel.id = \"examInfoPanel\";\r\n\r\n  // Initialize state\r\n  let currentPage = 1;\r\n  const questionsPerPage = 5;\r\n  const totalPages = Math.ceil(questions.length / questionsPerPage);\r\n\r\n  let isDragging = false;\r\n  let startX = 0;\r\n  let startY = 0;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n\r\n  function handleDragStart(e) {\r\n    const header = e.target.closest(\".exam-panel-header\");\r\n    if (!header) return;\r\n\r\n    e.preventDefault();\r\n    isDragging = true;\r\n\r\n    // Get current panel position\r\n    const transform = window.getComputedStyle(panel).transform;\r\n    const matrix = new DOMMatrixReadOnly(transform);\r\n    offsetX = matrix.m41;\r\n    offsetY = matrix.m42;\r\n\r\n    // Get start position\r\n    startX = e.clientX - offsetX;\r\n    startY = e.clientY - offsetY;\r\n\r\n    // Add temporary event listeners\r\n    document.addEventListener(\"mousemove\", handleDrag);\r\n    document.addEventListener(\"mouseup\", handleDragEnd);\r\n  }\r\n\r\n  function handleDrag(e) {\r\n    if (!isDragging) return;\r\n\r\n    e.preventDefault();\r\n\r\n    // Calculate new position\r\n    let newX = e.clientX - startX;\r\n    let newY = e.clientY - startY;\r\n\r\n    // Get viewport and panel dimensions\r\n    const viewportWidth = window.innerWidth;\r\n    const viewportHeight = window.innerHeight;\r\n    const panelRect = panel.getBoundingClientRect();\r\n\r\n    // Constrain to viewport bounds\r\n    newX = Math.min(Math.max(newX, 0), viewportWidth - panelRect.width);\r\n    newY = Math.min(Math.max(newY, 0), viewportHeight - panelRect.height);\r\n\r\n    // Update panel position\r\n    panel.style.transform = `translate(${newX}px, ${newY}px)`;\r\n  }\r\n\r\n  function handleDragEnd() {\r\n    isDragging = false;\r\n    document.removeEventListener(\"mousemove\", handleDrag);\r\n    document.removeEventListener(\"mouseup\", handleDragEnd);\r\n  }\r\n\r\n  // Add main drag event listener\r\n  panel.addEventListener(\"mousedown\", handleDragStart);\r\n\r\n  // Handle window resize to keep panel in bounds\r\n  function handleResize() {\r\n    const rect = panel.getBoundingClientRect();\r\n    const viewportWidth = window.innerWidth;\r\n    const viewportHeight = window.innerHeight;\r\n\r\n    // Get current transform values\r\n    const transform = window.getComputedStyle(panel).transform;\r\n    const matrix = new DOMMatrixReadOnly(transform);\r\n    let currentX = matrix.m41;\r\n    let currentY = matrix.m42;\r\n\r\n    // Adjust position if outside viewport\r\n    if (rect.right > viewportWidth) {\r\n      currentX = viewportWidth - rect.width;\r\n    }\r\n    if (rect.bottom > viewportHeight) {\r\n      currentY = viewportHeight - rect.height;\r\n    }\r\n\r\n    panel.style.transform = `translate(${currentX}px, ${currentY}px)`;\r\n  }\r\n\r\n  window.addEventListener(\"resize\", handleResize);\r\n\r\n  // Add cleanup function to remove event listeners\r\n  panel.cleanup = () => {\r\n    panel.removeEventListener(\"mousedown\", handleDragStart);\r\n    window.removeEventListener(\"resize\", handleResize);\r\n  };\r\n\r\n  function renderPanel() {\r\n    const startIdx = (currentPage - 1) * questionsPerPage;\r\n    const endIdx = startIdx + questionsPerPage;\r\n    const currentQuestions = questions.slice(startIdx, endIdx);\r\n\r\n    // Store the old transform value\r\n    const oldTransform = panel.style.transform;\r\n\r\n    panel.innerHTML = `\r\n      <div class=\"exam-panel-header\">\r\n        <div class=\"exam-panel-title\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect>\r\n            <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\r\n          </svg>\r\n          Exam Questions (${questions.length})\r\n        </div>\r\n      </div>\r\n      <div class=\"exam-questions-container\">\r\n        ${currentQuestions\r\n          .map(\r\n            (q) => `\r\n          <div class=\"exam-question-card\">\r\n            <div class=\"question-id\">${q}</div>\r\n            <div class=\"question-details\">\r\n              <span class=\"question-type\">Assessment Question</span>\r\n            </div>\r\n            <div class=\"question-status status-pending\">\r\n              Pending\r\n            </div>\r\n            <div class=\"time-remaining\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                <polyline points=\"12 6 12 12 16 14\"></polyline>\r\n              </svg>\r\n              Time remaining\r\n            </div>\r\n          </div>\r\n        `\r\n          )\r\n          .join(\"\")}\r\n      </div>\r\n      <div class=\"exam-pagination\">\r\n        <div class=\"page-info\">\r\n          ${totalPages ? `Page ${currentPage} of ${totalPages}` : \"\"}\r\n        </div>\r\n        <div class=\"page-buttons\">\r\n          <button class=\"page-button\" ${\r\n            !totalPages || currentPage === 1 ? \"disabled\" : \"\"\r\n          } id=\"prevPage\">\r\n            ←\r\n          </button>\r\n          <button class=\"page-button\" ${\r\n            !totalPages || currentPage === totalPages ? \"disabled\" : \"\"\r\n          } id=\"nextPage\">\r\n            →\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Restore the transform value\r\n    panel.style.transform = oldTransform;\r\n\r\n    // Add pagination button listeners\r\n    const prevButton = panel.querySelector(\"#prevPage\");\r\n    const nextButton = panel.querySelector(\"#nextPage\");\r\n\r\n    if (prevButton) {\r\n      prevButton.addEventListener(\"click\", () => {\r\n        if (currentPage > 1) {\r\n          currentPage--;\r\n          renderPanel();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (nextButton) {\r\n      nextButton.addEventListener(\"click\", () => {\r\n        if (currentPage < totalPages) {\r\n          currentPage++;\r\n          renderPanel();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Initial render\r\n  renderPanel();\r\n  document.body.appendChild(panel);\r\n\r\n  return panel;\r\n}\r\n\r\nconst setExampleQuestions = (questions) => {\r\n  exampleQuestions = questions;\r\n  // Update the questions array\r\n  exampleQuestions = questions;\r\n\r\n  // Re-render the exam panel if it exists\r\n  const existingPanel = document.querySelector(\"#examInfoPanel\");\r\n  if (existingPanel) {\r\n    displayExamPanel(questions);\r\n  }\r\n};\r\n\r\nexport { setExampleQuestions };\r\n\r\n// Add this function to create and handle the auto advance modal\r\nasync function createAutoAdvanceModal(courses = []) {\r\n  console.log(\"createAutoAdvanceModal\");\r\n  // Remove all elements with id autoAdvanceModal\r\n  const autoAdvanceModals = document.querySelectorAll(\"#autoAdvanceModal\");\r\n  autoAdvanceModals.forEach((modal) => modal.remove());\r\n\r\n  console.log(\"courses\", courses);\r\n  const modalHtml = `\r\n    <div id=\"autoAdvanceModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"container1\">\r\n          <h1 style=\"font-size: 32px; margin-top: 30px;\">Get <span class=\"title\">school</span> done now</h1>\r\n          <p class=\"info1\">Select a class to get started with Revolt</p>\r\n          <div class=\"typing-dropdown\" style=\"margin-top: 10px;\">\r\n            <button class=\"dropdown-btn\" id=\"placeholderBtn\" style=\"height: 40px;\">Select a class</button>\r\n            <div class=\"dropdown-content1\">\r\n              ${courses\r\n                .map(\r\n                  (course) =>\r\n                    `<div class=\"dropdown-option\" data-value=\"${course.id}\">\r\n                      <div style=\"display: flex; flex-direction: column; gap: 4px;\">\r\n                        <div style=\"font-size: 18px; font-weight: 500; color: #fff; margin-bottom: 4px;\">${\r\n                          course.subject\r\n                        }</div>\r\n                        <div style=\"display: flex; flex-direction: row; justify-content: space-between; font-size: 14px; font-weight: 350; color: #fff;\">\r\n                          <div>${course.name}</div>\r\n                          <div>\r\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <circle cx=\"12\" cy=\"12\" r=\"11\" stroke=\"white\" stroke-width=\"2\"/>\r\n                              <path d=\"M10 7L16 12L10 17\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                            </svg>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"progress-bar\" style=\"width: 100%; height: 3px; margin-top: 4px;\">\r\n                          <div style=\"width: ${\r\n                            course.progress\r\n                              ? course.progress.percentComplete\r\n                              : 0\r\n                          }%; height: 100%; background: #006CFF; border-radius: 10px; transition: width 0.3s ease;\"></div>\r\n                        </div>\r\n                        ${\r\n                          course.progress\r\n                            ? `<div style=\"font-size: 12px; color: #9b9d9f;\">You are ${course.progress.percentComplete}% complete and Ahead</div>`\r\n                            : \"\"\r\n                        }\r\n                      </div>\r\n                    </div>`\r\n                )\r\n                .join(\"\")}\r\n            </div>\r\n          </div>\r\n          <p class=\"info\" id=\"cancelModalBtn\" style=\"cursor: pointer;\">Cancel</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  // Update the modal styles to include animation\r\n  const modalStyle = `\r\n    .modal {\r\n      display: none;\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(0, 0, 0, 0.7);\r\n      font-family: Arial, sans-serif;\r\n      opacity: 0;\r\n      transition: opacity 0.5s ease-in-out;\r\n    }\r\n\r\n    .modal.show {\r\n      opacity: 1;\r\n      z-index: 1000000;\r\n    }\r\n\r\n    .modal-content {\r\n      position: absolute;\r\n      top: 30%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%) scale(0.7);\r\n      width: 540px;\r\n      border-radius: 12px;\r\n      background: #12141a;\r\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n      opacity: 0;\r\n      transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n    }\r\n\r\n    .modal.show .modal-content {\r\n      transform: translate(-50%, -50%) scale(1);\r\n      opacity: 1;\r\n    }\r\n\r\n    @keyframes modalPop {\r\n      0% {\r\n        transform: translate(-50%, -50%) scale(0.7);\r\n        opacity: 0;\r\n      }\r\n      100% {\r\n        transform: translate(-50%, -50%) scale(1);\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n\r\n    .container1 {\r\n      text-align: center;\r\n      padding: 30px;\r\n      border-radius: 12px;\r\n      height: 300px;\r\n      transition: height 0.5s ease-in-out;\r\n      margin-bottom: 30px;\r\n      overflow-y: hidden;\r\n      scrollbar-width: none;\r\n    }\r\n\r\n    .h-400 {\r\n      height: 600px !important;\r\n      overflow-y: scroll;\r\n    }\r\n\r\n    .dropdown-content1 {\r\n      position: absolute;\r\n      top: 100%;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 0px;\r\n      background: #242526;\r\n      border-radius: 4px;\r\n      z-index: 1;\r\n      margin-top: 4px;\r\n      overflow-y: scroll;\r\n      scrollbar-width: none;\r\n      transition: height 0.4s ease-in-out;\r\n    }\r\n\r\n    h1 {\r\n      font-size: 24px;\r\n      font-weight: bold;\r\n      color: white;\r\n      margin: 0;\r\n    }\r\n\r\n    .emoji {\r\n      font-size: 24px;\r\n      vertical-align: middle;\r\n    }\r\n\r\n    .dropdown {\r\n      background: #23252b;\r\n      color: white;\r\n      border: none;\r\n      padding: 10px;\r\n      width: 100%;\r\n      border-radius: 6px;\r\n      font-size: 16px;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    .info {\r\n      margin-top: 50px;\r\n      font-size: 14px;\r\n      background: rgba(255, 255, 255, 0.1);\r\n      display: inline-block;\r\n      padding: 6px 12px;\r\n      border-radius: 8px;\r\n      color: white;\r\n    }\r\n\r\n    .info1 {\r\n      display: flex !important;\r\n      justify-content: flex-start;\r\n      margin-top: 40px;\r\n      margin-bottom: 5px !important;\r\n      font-size: 14px;\r\n      color: white;\r\n    }\r\n\r\n    .title {\r\n      margin-bottom: 0 !important;\r\n      color: #006cff;\r\n    }\r\n  `;\r\n\r\n  // Add styles to document\r\n  if (!document.querySelector(\"#autoAdvanceModalStyle\")) {\r\n    const style = document.createElement(\"style\");\r\n    style.id = \"autoAdvanceModalStyle\";\r\n    style.textContent = modalStyle;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // Add modal to document\r\n  document.body.insertAdjacentHTML(\"beforeend\", modalHtml);\r\n\r\n  // Get modal elements\r\n  const modal = document.getElementById(\"autoAdvanceModal\");\r\n  // Add dropdown functionality\r\n  const dropdown = modal.querySelector(\".typing-dropdown\");\r\n  console.log(\"dropdowns\", dropdown);\r\n  const btn = dropdown.querySelector(\".dropdown-btn\");\r\n  const options = dropdown.querySelectorAll(\".dropdown-option\");\r\n  const container1 = modal.querySelector(\".container1\");\r\n\r\n  btn.addEventListener(\"click\", (e) => {\r\n    e.stopPropagation();\r\n    // Increase container1 height to 400px\r\n    container1.classList.toggle(\"h-400\");\r\n    dropdown.classList.toggle(\"active\");\r\n  });\r\n\r\n  options.forEach((option) => {\r\n    option.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      container1.classList.remove(\"h-400\");\r\n      const selectedValue = option.getAttribute(\"data-value\");\r\n\r\n      // Redirect to current path + course id\r\n      const currentPath = window.location.href;\r\n      console.log(\r\n        \"path:\",\r\n        `${currentPath}enrollment/${selectedValue}/coursemap#`\r\n      );\r\n      window.location.href = `${currentPath}enrollment/${selectedValue}/coursemap#`;\r\n      // Show loading spinner overlaid on original content\r\n      const dropdownContent = dropdown.querySelector(\".dropdown-content1\");\r\n      const spinnerHtml = `\r\n        <div style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.7); display: flex; justify-content: center; align-items: center; z-index: 100;\">\r\n          <div class=\"loading-spinner\" style=\"width: 30px; height: 30px; border: 3px solid rgba(255,255,255,0.1); border-radius: 50%; border-top-color: #006cff; animation: spin 1s ease-in-out infinite;\"></div>\r\n        </div>\r\n      `;\r\n      dropdownContent.style.position = \"relative\";\r\n      dropdownContent.insertAdjacentHTML(\"beforeend\", spinnerHtml);\r\n    });\r\n  });\r\n\r\n  // Close modal when clicking outside\r\n  window.addEventListener(\"click\", (e) => {\r\n    const modalContent = modal.querySelector(\".modal-content\");\r\n    if (\r\n      !document.getElementById(\"autoAdvanceItem\").contains(e.target) &&\r\n      e.target !== modalContent\r\n    ) {\r\n      hideModal();\r\n    }\r\n  });\r\n\r\n  const cancelModalBtn = document.getElementById(\"cancelModalBtn\");\r\n  cancelModalBtn.addEventListener(\"click\", () => {\r\n    hideModal();\r\n  });\r\n\r\n  modal.addEventListener(\"click\", (e) => {\r\n    e.stopPropagation();\r\n    console.log(\"modal clicked\");\r\n    dropdown.classList.remove(\"active\");\r\n    container1.classList.remove(\"h-400\");\r\n    if (!modal.querySelector(\".modal-content\").contains(e.target)) {\r\n      hideModal();\r\n    }\r\n  });\r\n\r\n  // Show modal with animation\r\n  function showModal() {\r\n    modal.style.display = \"block\";\r\n    // Trigger reflow\r\n    modal.offsetHeight;\r\n    modal.classList.add(\"show\");\r\n  }\r\n\r\n  // Hide modal with animation\r\n  function hideModal() {\r\n    modal.classList.remove(\"show\");\r\n    setTimeout(() => {\r\n      modal.style.display = \"none\";\r\n    }, 300); // Match the transition duration\r\n  }\r\n\r\n  // Update the display logic when opening the modal\r\n  return {\r\n    show: showModal,\r\n    hide: hideModal,\r\n    element: modal,\r\n  };\r\n}\r\n\r\n// Function to handle redirection to current activity\r\nfunction redirectToCurrentActivity() {\r\n  // Check if we're on the student.edgenuity.com domain\r\n  console.log(\"Checking for current activity tile...\");\r\n\r\n  // Set up a function to check for the element\r\n  const checkForCurrentActivity = () => {\r\n    // Find the element with the current activity status\r\n    const currentActivityElement = document.querySelector(\r\n      \".ActivityTile-status-current\"\r\n    );\r\n\r\n    if (currentActivityElement) {\r\n      // Find the closest parent that has an href (likely an <a> tag)\r\n      let parent = currentActivityElement;\r\n      while (parent && !parent.href) {\r\n        parent = parent.parentElement;\r\n      }\r\n\r\n      // If we found an element with href, redirect to it\r\n      if (parent && parent.href) {\r\n        console.log(\"Found current activity, redirecting to:\", parent.href);\r\n        // Set tamper value advanceClick as false\r\n        window.location.href = parent.href;\r\n        console.log(\"Redirecting to:\", parent.href);\r\n      } else {\r\n        console.log(\"Current activity found but no href attribute available\");\r\n      }\r\n      return true; // Element found\r\n    } else {\r\n      console.log(\"No current activity tile found yet, waiting...\");\r\n      return false; // Element not found\r\n    }\r\n  };\r\n\r\n  // Try immediately first\r\n  if (!checkForCurrentActivity()) {\r\n    // If not found, set up an interval to keep checking\r\n    const intervalId = setInterval(() => {\r\n      if (checkForCurrentActivity()) {\r\n        clearInterval(intervalId); // Stop checking once found\r\n      }\r\n    }, 1000); // Check every second\r\n\r\n    // Stop checking after 30 seconds to prevent infinite loops\r\n    setTimeout(() => {\r\n      clearInterval(intervalId);\r\n      console.log(\"Gave up waiting for current activity element\");\r\n    }, 30000);\r\n  }\r\n}\r\n\r\nlet checkForStageFrameInterval;\r\nfunction validateFunction() {\r\n  console.log(\"Checking for current activity tile...\");\r\n\r\n  // Try immediately first\r\n  if (!checkForStageFrame()) {\r\n    // If not found, set up an interval to keep checking\r\n    checkForStageFrameInterval = setInterval(() => {\r\n      console.log(\"checkforstageframe called\");\r\n      checkForStageFrame();\r\n    }, 1000); // Check every second\r\n    console.log(\r\n      \"checkForStageFrameInterval ##############\",\r\n      checkForStageFrameInterval\r\n    );\r\n  }\r\n}\r\n\r\nlet currentFrame = null;\r\nlet videoCheckInterval = null;\r\n\r\nfunction checkForStageFrame() {\r\n  const stageFrame = getStageFrame();\r\n\r\n  if (stageFrame && JSON.stringify(stageFrame) !== \"{}\") {\r\n    console.log(\"Stage frame found, proceeding with validation\");\r\n    return processStageFrame(stageFrame);\r\n  } else {\r\n    console.log(\"Stage frame not found yet, waiting...\");\r\n    return false; // stageFrame not found\r\n  }\r\n}\r\n\r\nfunction processStageFrame(stageFrame) {\r\n  const contentWindow = stageFrame?.contentWindow;\r\n  const autoAdvanceItem = document.getElementById(\"autoAdvanceItem\");\r\n  const autoAdvanceButton = autoAdvanceItem?.querySelector(\".menu-item-button\");\r\n\r\n  let { API } = contentWindow;\r\n  if (\r\n    !API ||\r\n    API?.FrameChain?.currentFrame === currentFrame ||\r\n    (API.FrameChain.currentFrame === 1 && !API?.Video?.wrapper)\r\n  ) {\r\n    console.log(\"API is not available\");\r\n    return false;\r\n  }\r\n  // console.log(\"Current frame Updated\", API?.FrameChain?.currentFrame);\r\n  // currentFrame = API?.FrameChain?.currentFrame;\r\n  console.log(\"checkForStageFrameInterval\", checkForStageFrameInterval);\r\n  clearInterval(checkForStageFrameInterval);\r\n  clearInterval(videoCheckInterval);\r\n  // autoAdvanceButton.classList.add(\"active\", \"writing\");\r\n  // const isCompleted = API.Frame.isComplete();\r\n\r\n  // // Log API information for debugging\r\n  // logAPIInfo(API);\r\n\r\n  // // Determine if content is a video or not\r\n  // const isAVideo = checkIfVideo(API);\r\n  // console.log(\"isAVideo\", isAVideo);\r\n\r\n  // if (isAVideo) {\r\n  //   handleVideoContent(stageFrame, isCompleted, API, autoAdvanceButton);\r\n  // } else {\r\n  //   handleNonVideoContent(stageFrame, isCompleted, API, autoAdvanceButton);\r\n  // }\r\n\r\n  try {\r\n    // Find the activity title element\r\n    const activityTitleElement = document.getElementById(\"activity-title\");\r\n    const activityTitle = activityTitleElement\r\n      ? activityTitleElement.textContent.trim().toLowerCase()\r\n      : null;\r\n\r\n    autoAdvanceButton.classList.add(\"active\", \"writing\");\r\n\r\n    const videoElement =\r\n      stageFrame.contentDocument.getElementById(\"home_video_js\");\r\n\r\n    let duration = videoElement?.duration || null;\r\n    let currentTime = videoElement?.currentTime || null;\r\n\r\n    const isCompleted = API.Frame.isComplete();\r\n\r\n    const questionsFrame =\r\n      stageFrame?.contentDocument?.getElementById(\"iFramePreview\");\r\n    const isAVideo = questionsFrame?.style.display === \"none\";\r\n\r\n    console.log(\"isAVideo\", isAVideo);\r\n\r\n    if (!isCompleted) {\r\n      if (isAVideo) {\r\n        console.log(\"Video is playing\");\r\n        if (videoCheckInterval) {\r\n          clearInterval(videoCheckInterval);\r\n        }\r\n        videoCheckInterval = setInterval(() => {\r\n          currentTime = videoElement?.currentTime || 0;\r\n          console.log(\"currentTime\", currentTime);\r\n          if (duration - currentTime < 2 && duration != 0) {\r\n            clearInterval(videoCheckInterval);\r\n            nextFrame(API);\r\n            setTimeout(() => {\r\n              checkForStageFrame();\r\n              return;\r\n            }, 5000);\r\n          } else {\r\n            return;\r\n          }\r\n        }, 1000);\r\n        return;\r\n      } else if (activityTitle === \"instruction\") {\r\n        console.log(\"Instruction is playing\");\r\n        const iframePreview = getIFramePreview();\r\n        // console.log(\"iframePreview\", iframePreview);\r\n        if (iframePreview) {\r\n          const questions =\r\n            iframePreview.contentDocument?.querySelectorAll(\"div[fstack]\");\r\n\r\n          console.log(\"Questions:\", questions);\r\n\r\n          questions.forEach((question) => {\r\n            setTimeout(() => {\r\n              let clickedAmount = 0;\r\n              let input = question.querySelectorAll(\"input\");\r\n              console.log(\"Input:\", input);\r\n              if (input && input.length > 0) {\r\n                Array.from(input).forEach((input) =>\r\n                  Math.random() > 0.5 ? input.click() : null\r\n                ); // Click a random input\r\n                clickedAmount++;\r\n              }\r\n\r\n              let textArea = question.querySelectorAll(\"textarea\");\r\n              console.log(\"textArea:\", textArea);\r\n              if (textArea && textArea.length > 0) {\r\n                Array.from(textArea).forEach((textArea) =>\r\n                  Math.random() > 0.5 ? textArea.click() : null\r\n                ); // Click a random input\r\n                clickedAmount++;\r\n              }\r\n\r\n              let select = question.querySelector(\"select\");\r\n              console.log(\"select\", select);\r\n              // We don't need to do anything here, since edgenuity doesn't require you to select anything in these types of questions.\r\n              if (select) clickedAmount++;\r\n\r\n              let ifFW = question.querySelector(\"iframe\");\r\n              let hintButton =\r\n                ifFW?.contentDocument?.getElementById(\"onlyButton\");\r\n              if (hintButton) {\r\n                setInterval(() => {\r\n                  hintButton.click();\r\n                  clickedAmount++;\r\n                }, 250);\r\n              }\r\n\r\n              const doneButton = question.querySelectorAll(\"div[title='done']\");\r\n              console.log(\"doneButton\", doneButton);\r\n              console.log(\"clickedAmount\", clickedAmount);\r\n              if (doneButton && doneButton.length > 0 && clickedAmount > 0) {\r\n                Array.from(doneButton).forEach((button) => button.click());\r\n                nextFrame(API);\r\n                setTimeout(() => {\r\n                  // checkForStageFrame();\r\n                  validateFunction();\r\n                  return;\r\n                }, 5000);\r\n              }\r\n            }, 500);\r\n          });\r\n        }\r\n        nextFrame(API);\r\n        setTimeout(() => {\r\n          checkForStageFrame();\r\n          return;\r\n        }, 5000);\r\n      } else {\r\n        console.log(\"Instruction is not playing\");\r\n      }\r\n    } else {\r\n      //   console.log(\"Activity already completed\");\r\n      //   // Find the first incomplete frame and mark it as complete\r\n      //   const firstIncompleteIndex = API.FrameChain.framesStatus.findIndex(\r\n      //     (status) => status !== \"complete\"\r\n      //   );\r\n\r\n      //   if (firstIncompleteIndex !== -1) {\r\n      //     API.FrameChain.framesStatus[firstIncompleteIndex] = \"complete\";\r\n      //   }\r\n      //   console.log(\"Next Frame:\", API.FrameChain.nextFrame());\r\n      //   autoVideoButton.classList.remove(\"active\", \"writing\");\r\n      nextFrame(API);\r\n      setTimeout(() => {\r\n        checkForStageFrame();\r\n        return;\r\n      }, 5000);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    autoAdvanceButton.classList.remove(\"active\", \"writing\");\r\n  }\r\n}\r\n\r\nfunction nextFrame(API) {\r\n  // Check if all frames except the current one are complete\r\n  if (API?.FrameChain?.framesStatus) {\r\n    // Check if all frames except the current one are complete\r\n    const currentPosition = API.FrameChain.currentPosition;\r\n    const allOtherFramesComplete = API.FrameChain.framesStatus.every(\r\n      (status, index) => index === currentPosition || status === \"complete\"\r\n    );\r\n\r\n    console.log(\"Frame statuses:\", API.FrameChain.framesStatus);\r\n    console.log(\"All other frames complete:\", allOtherFramesComplete);\r\n\r\n    if (!allOtherFramesComplete) {\r\n      console.log(\r\n        \"************* Not all frames are complete. Some frames may need attention. *************\"\r\n      );\r\n    } else {\r\n      console.log(\r\n        \"************* All frames are complete. Proceeding to next frame. *************\"\r\n      );\r\n      const advanceType = GM_getValue(\"advanceType\");\r\n      if (advanceType === \"Unlocked Advance\") {\r\n        const backUrl = GM_getValue(\"backUrl\");\r\n        console.log(\"backUrl\", backUrl);\r\n        GM_setValue(\"advanceClick\", 1);\r\n        window.location.href = backUrl;\r\n      } else {\r\n        console.log(\"All frames except current are complete.\");\r\n        let buttonCheckInterval;\r\n        try {\r\n          // Set up a function to check the button status\r\n          const checkAndClickNextButton = () => {\r\n            const nextActivityButton = document.querySelector(\r\n              'a.footnav.goRight[data-bind*=\"getNextActivity\"]'\r\n            );\r\n\r\n            // Check if the Next Activity button is disabled\r\n            const isDisabled =\r\n              nextActivityButton &&\r\n              nextActivityButton.classList.contains(\"disabled\");\r\n\r\n            console.log(\"Next Activity button disabled:\", isDisabled);\r\n\r\n            // Only proceed if the button exists and is not disabled\r\n            if (nextActivityButton && !isDisabled) {\r\n              console.log(\r\n                \"############# Found Next Activity button, clicking it ##############\"\r\n              );\r\n              nextActivityButton.click();\r\n              setTimeout(() => {\r\n                checkForStageFrame();\r\n                return;\r\n              }, 3000);\r\n\r\n              // Clear the interval once we've clicked the button\r\n              clearInterval(buttonCheckInterval);\r\n            } else if (!nextActivityButton) {\r\n              console.log(\"Next Activity button not found\");\r\n            } else {\r\n              console.log(\"Next Activity button is disabled, waiting...\");\r\n            }\r\n          };\r\n\r\n          // Check for the button every 500ms\r\n          buttonCheckInterval = setInterval(checkAndClickNextButton, 500);\r\n\r\n          // Clear the interval after 30 seconds to prevent it from running indefinitely\r\n          setTimeout(() => {\r\n            clearInterval(buttonCheckInterval);\r\n            console.log(\r\n              \"Stopped checking for Next Activity button after timeout\"\r\n            );\r\n          }, 30000);\r\n        } catch (error) {\r\n          console.error(\r\n            \"Error finding or clicking Next Activity button:\",\r\n            error\r\n          );\r\n        }\r\n      }\r\n    }\r\n    API.FrameChain.nextFrame();\r\n  }\r\n}\r\n\r\n// Wait for DOM to be fully loaded before checking for the current activity\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  console.log(\"DOM fully loaded, executing redirect to current activity\");\r\n  if (window.location.hostname === \"student.edgenuity.com\") {\r\n    if (GM_getValue(\"advanceClick\") === 1) {\r\n      GM_setValue(\"advanceClick\", 2);\r\n      const selectedType = GM_getValue(\"advanceType\");\r\n      if (selectedType === \"Unlocked Advance\") {\r\n        console.log(\r\n          \"Unlocked Advance\",\r\n          window.location.href.split(\"coursemap\")[0] + \"coursemap\"\r\n        );\r\n        GM_setValue(\r\n          \"backUrl\",\r\n          window.location.href.split(\"coursemap\")[0] + \"coursemap\"\r\n        );\r\n      }\r\n      redirectToCurrentActivity();\r\n    }\r\n  } else if (\r\n    window.location.hostname.match(/^r\\d+\\.core\\.learn\\.edgenuity\\.com$/)\r\n  ) {\r\n    if (GM_getValue(\"advanceClick\") === 2) {\r\n      GM_setValue(\"advanceClick\", 0);\r\n      validateFunction();\r\n    }\r\n  }\r\n});\r\n","// src/main.js\n\nimport { getAnswer, getHumanScore, saveDB } from \"./api.js\";\nimport {\n  displayHumanElement,\n  initDraggableMenu,\n  displayLessonNumber,\n  updateAutoWritingState,\n  setExampleQuestions,\n} from \"./ui.js\";\n\n(function () {\n  \"use strict\";\n\n  let stop = false,\n    interval,\n    config = {};\n\n  function submitWriting(submitBtn, questions, answers, scores) {\n    submitBtn.click();\n    console.log(\"Clicked!!!!\");\n\n    setTimeout(async () => {\n      const gradeBar = document.getElementById(\"lessonInfo\");\n      const value = gradeBar.querySelectorAll('thspan[data-rwthpgen=\"1\"]');\n      console.log(\"Length:\", value.length, value);\n      if (value.length === 4) {\n        const number = value[2];\n        console.log(\"gradeBar:\", gradeBar, number);\n        if (number.textContent.trim() === \"100\") {\n          console.log(\"Answers:\", answers);\n          console.log(\"Scores:\", scores);\n\n          if (scores) {\n            if (typeof scores === \"number\") {\n              if (scores >= 90) {\n                await saveDB(questions, answers, scores);\n              }\n            } else {\n              for (let i = 0; i < scores.length; i++) {\n                if (scores[i] >= 90) {\n                  await saveDB(questions[i], answers[i], scores[i]);\n                }\n              }\n            }\n          }\n        }\n      }\n    }, 15000);\n  }\n\n  // Helper functions for humanized typing\n  function createTypingMistake(word, typingStyle) {\n    const mistakeTypes = {\n      swap: (w) => {\n        if (w.length < 2) return w;\n        const i = Math.floor(Math.random() * (w.length - 1));\n        return w.slice(0, i) + w[i + 1] + w[i] + w.slice(i + 2);\n      },\n      typo: (w) => {\n        const nearby = {\n          a: \"sq\",\n          b: \"vn\",\n          c: \"xv\",\n          d: \"sf\",\n          e: \"wr\",\n          f: \"dg\",\n          g: \"fh\",\n          h: \"gj\",\n          i: \"uo\",\n          j: \"hk\",\n          k: \"jl\",\n          l: \"k\",\n          m: \"n\",\n          n: \"bm\",\n          o: \"ip\",\n          p: \"o\",\n          q: \"a\",\n          r: \"et\",\n          s: \"ad\",\n          t: \"ry\",\n          u: \"yi\",\n          v: \"bc\",\n          w: \"e\",\n          x: \"c\",\n          y: \"tu\",\n          z: \"\",\n        };\n        if (w.length < 1) return w;\n        const i = Math.floor(Math.random() * w.length);\n        const char = w[i].toLowerCase();\n        const typoChar = nearby[char]\n          ? nearby[char][Math.floor(Math.random() * nearby[char].length)]\n          : char;\n        return w.slice(0, i) + typoChar + w.slice(i + 1);\n      },\n      shuffle: (w) =>\n        w\n          .split(\"\")\n          .sort(() => Math.random() - 0.5)\n          .join(\"\"),\n    };\n\n    const mistakeType =\n      typingStyle === \"Level 1\"\n        ? \"swap\"\n        : typingStyle === \"Level 2\"\n        ? \"typo\"\n        : \"shuffle\";\n    console.log(\"Mistake Type:\", mistakeType);\n    return mistakeTypes[mistakeType](word);\n  }\n\n  async function createTypingAnimation(editor, text, config, onComplete) {\n    // Update state to writing when typing starts\n    updateAutoWritingState(\"writing\");\n\n    const words = text.split(\" \");\n    let currentIndex = 0;\n    editor.setData(\"\");\n\n    const msPerWord = (60 * 1000) / (config.answerDelay || 30); // Default to 30 WPM if not set\n    const typingStyle = config.typingStyle;\n    const placeholderEnabled = config.placeholder === \"Enabled\";\n    const placeholderText =\n      config.placeholderText ||\n      \"This topic has many sides to consider, each offering unique insights required to understand.\";\n\n    // Skip placeholder if this is a placeholder typing call\n    const isPlaceholderCall = text === placeholderText;\n\n    const typeText = async (textToType, isPlaceholder = false) => {\n      return new Promise((resolve) => {\n        let wordIndex = 0;\n        const words = textToType.split(\" \");\n\n        const typeWord = () => {\n          if (wordIndex < words.length) {\n            let word = words[wordIndex];\n            let letterIndex = 0;\n            const letters = word.split(\"\");\n            let mistakeMode = false;\n            let mistakeText = \"\";\n            let backspacing = false;\n\n            const typeLetter = () => {\n              if (backspacing) {\n                if (mistakeText.length > 0) {\n                  mistakeText = mistakeText.slice(0, -1);\n                  let baseText =\n                    wordIndex === 0\n                      ? \"\"\n                      : words.slice(0, wordIndex).join(\" \") + \" \";\n                  editor.setData(baseText + mistakeText);\n                  setTimeout(typeLetter, msPerWord / word.length);\n                } else {\n                  backspacing = false;\n                  mistakeMode = false;\n                  letterIndex = 0;\n                  setTimeout(typeLetter, msPerWord / word.length);\n                }\n                return;\n              }\n\n              // Only make typing mistakes for actual answer, not placeholder\n              if (!isPlaceholder && !mistakeMode && letterIndex === 0) {\n                const mistakeChance =\n                  {\n                    \"Level 1\": 0.1,\n                    \"Level 2\": 0.25,\n                    \"Level 3\": 0.4,\n                  }[typingStyle] || 0;\n\n                mistakeMode = Math.random() < mistakeChance;\n                if (mistakeMode) {\n                  mistakeText = createTypingMistake(word);\n                }\n              }\n\n              if (\n                letterIndex <\n                (mistakeMode ? mistakeText.length : letters.length)\n              ) {\n                let baseText =\n                  wordIndex === 0\n                    ? \"\"\n                    : words.slice(0, wordIndex).join(\" \") + \" \";\n                let currentWord = mistakeMode\n                  ? mistakeText.slice(0, letterIndex + 1)\n                  : letters.slice(0, letterIndex + 1).join(\"\");\n\n                editor.setData(baseText + currentWord);\n                letterIndex++;\n\n                if (mistakeMode && letterIndex === mistakeText.length) {\n                  backspacing = true;\n                  setTimeout(typeLetter, msPerWord / 2);\n                  return;\n                }\n\n                setTimeout(typeLetter, msPerWord / word.length);\n              } else {\n                let completeText =\n                  words.slice(0, wordIndex).join(\" \") +\n                  (wordIndex > 0 ? \" \" : \"\") +\n                  (mistakeMode ? mistakeText : word);\n\n                editor.setData(completeText);\n                wordIndex++;\n                setTimeout(typeWord, msPerWord);\n              }\n            };\n\n            typeLetter();\n          } else {\n            resolve();\n          }\n        };\n\n        typeWord();\n      });\n    };\n\n    const deletePlaceholder = async () => {\n      return new Promise((resolve) => {\n        let text = editor.getData();\n        const deleteChar = () => {\n          if (text.length > 0) {\n            text = text.slice(0, -1);\n            editor.setData(text);\n            setTimeout(deleteChar, msPerWord / 10); // Faster deletion\n          } else {\n            resolve();\n          }\n        };\n        deleteChar();\n      });\n    };\n\n    const startTyping = async () => {\n      // Only handle placeholder if this is not a placeholder typing call\n      if (placeholderEnabled && !isPlaceholderCall) {\n        await typeText(placeholderText, true);\n        await new Promise((resolve) => setTimeout(resolve, 2000));\n        await deletePlaceholder();\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      }\n\n      // Type the main text\n      await typeText(text, isPlaceholderCall);\n\n      if (onComplete) onComplete();\n    };\n\n    // Start the typing process\n    setTimeout(() => {\n      startTyping();\n    }, 2000);\n  }\n\n  async function activateAutomaticWriting() {\n    console.log(\"Get started!!!~~~~~~~~~~~!!!\");\n\n    try {\n      if (initialization) {\n        const lms_base_url = initialization?.InitialLaunchData?.LMSAPIBasePath;\n        const prefix = lms_base_url.split(\"//\")[1].split(\".\")[0];\n        console.log(\"lms_base_url:\", prefix);\n\n        const session_user_id = initialization?.InitialLaunchData?.UserID;\n        console.log(\"Session User ID:\", session_user_id);\n\n        const cookie_user_id = initialization?.pk;\n        console.log(\"Cookie User ID:\", cookie_user_id);\n\n        // Get course name from the span element\n        const courseName = initialization?.InitialLaunchData?.CourseName;\n        console.log(\"Course name:\", courseName);\n\n        displayLessonNumber(initialization?.InitialActivityData?.Progress);\n\n        // Get next activity data\n        // Add click event listener to Next Activity button\n        const nextActivityButton = document.querySelector(\"a.footnav.goRight\");\n        if (nextActivityButton) {\n          nextActivityButton.addEventListener(\"click\", async () => {\n            console.log(\"Next Activity Button clicked!!!!\");\n            try {\n              console.log(\"Fetching next activity data...\");\n\n              const activityId =\n                initialization?.InitialActivityData?.ActivityOrder;\n              console.log(\"Activity ID:\", activityId);\n              const ContextID = initialization?.InitialLaunchData?.ContextID;\n              console.log(\"Context ID:\", ContextID);\n\n              const nextActivityResponse = await fetch(\n                `https://${prefix}.core.learn.edgenuity.com/lmsapi/req/navigation/getnextactivity?UserID=${session_user_id}&StudentBuildID=${ContextID}&ActivityOrder=${activityId}&IsSSLimited=False&AllowPretestsAndQuizzes=False`,\n                {\n                  method: \"GET\",\n                  credentials: \"include\",\n                  headers: {\n                    Accept: \"application/json\",\n                  },\n                }\n              );\n\n              if (!nextActivityResponse.ok) {\n                throw new Error(\n                  `HTTP error! status: ${nextActivityResponse.status}`\n                );\n              }\n\n              const nextActivityData = await nextActivityResponse.json();\n              const { IsRestrictedActivity } = nextActivityData?.Navigation;\n              console.log(\"Is Restricted:\", IsRestrictedActivity);\n\n              if (IsRestrictedActivity) {\n                // Add brilliant shadow border if activity is restricted\n                let waitForContainer;\n                const intervalFunc = () => {\n                  const stageFrame = getStageFrame();\n                  const overlayContainers =\n                    stageFrame?.contentWindow.document.querySelectorAll(\n                      \".overlay-attempt\"\n                    );\n                  const overlayContainer = Array.from(overlayContainers).find(\n                    (container) =>\n                      container.querySelector(\n                        \".overlay-attempt-button.overlay-attempt-button-lock\"\n                      )\n                  );\n                  if (overlayContainer) {\n                    overlayContainer.style.cursor = \"pointer\";\n                    overlayContainer.style.border =\n                      \"2px solid rgba(255, 215, 0, 0.7)\";\n                    overlayContainer.style.transition = \"all 0.3s ease\";\n\n                    overlayContainer.addEventListener(\"mouseenter\", () => {\n                      overlayContainer.style.boxShadow =\n                        \"0 0 20px 10px rgba(255, 215, 0, 0.7)\";\n                    });\n\n                    overlayContainer.addEventListener(\"mouseleave\", () => {\n                      overlayContainer.style.boxShadow = \"none\";\n                    });\n\n                    overlayContainer.addEventListener(\"click\", () => {\n                      overlayContainer.style.transform = \"scale(0.95)\";\n                      overlayContainer.style.boxShadow =\n                        \"0 0 30px 15px rgba(255, 215, 0, 0.9)\";\n                      setTimeout(() => {\n                        overlayContainer.style.transform = \"scale(1)\";\n                        overlayContainer.style.boxShadow = \"none\";\n                      }, 200);\n                    });\n                    overlayContainer.onclick = async () => {\n                      console.log(\n                        \"Initial Activity Order:\",\n                        initialization?.InitialActivityData?.ActivityOrder\n                      );\n\n                      // window.parent.Namespace.global().playerView.startActivity(\n                      //   initialization?.InitialActivityData?.ActivityOrder,\n                      //   function (warning) {\n                      //     if (warning == \"NOATTEMPT\")\n                      //       window.parent.Namespace.global()\n                      //         .playerView.stageView()\n                      //         .loadUrl(\n                      //           window.parent.Namespace.global().services.overlay\n                      //             .basepath +\n                      //             \"?errormessage=\" +\n                      //             encodeURIComponent(\n                      //               \"You do not have any retakes available for this Assessment.\"\n                      //             )\n                      //         );\n                      //   }\n                      // );\n\n                      const loadQuestion = async (\n                        id,\n                        parsedAnswers,\n                        ActivityKeys\n                      ) => {\n                        const parser = new DOMParser();\n                        let learningObjectKey = ActivityKeys.learningObjectKey;\n                        let resultKey = ActivityKeys.resultKey;\n                        let enrollmentKey = ActivityKeys.enrollmentKey;\n                        let sessionKey = ActivityKeys.sessionKey;\n\n                        return fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/ContentViewers/AssessmentViewer/LoadQuestion`,\n                          {\n                            headers: {\n                              \"content-type\":\n                                \"application/x-www-form-urlencoded; charset=UTF-8\",\n                            },\n                            body: `learningObjectKey=${learningObjectKey}&resultKey=${resultKey}&enrollmentKey=${enrollmentKey}&questionKey=${id}&sessionKey=${sessionKey}`,\n                            method: \"POST\",\n                          }\n                        )\n                          .then((res) => res.json())\n                          .then((res) => {\n                            const html = parser.parseFromString(\n                              res.html,\n                              \"text/html\"\n                            );\n\n                            let inputSelector =\n                              \".Practice_Question_Body .answer-choice input\";\n                            let selectSelector =\n                              \".Practice_Question_Body select option\";\n                            let inputTextSelector = \"input[type='text']\";\n\n                            let inputs = Array.from(\n                              html.querySelectorAll(inputSelector)\n                            ).map((li) => [li.name, li.value]);\n                            console.log(\"Inputs:\", inputs);\n                            let selects = Array.from(\n                              html.querySelectorAll(selectSelector)\n                            )\n                              .map((option) => {\n                                if (option.hasAttribute(\"value\")) {\n                                  return [\n                                    option.parentElement.name,\n                                    option.value,\n                                  ];\n                                }\n                              })\n                              .filter(Boolean);\n                            let inputTexts = Array.from(\n                              html.querySelectorAll(inputTextSelector)\n                            ).map((input) => [input.name, \"FILL_WITH_TEXT\"]);\n                            // console.log(\"YO BITH\", inputs, selects, inputTexts);\n\n                            let answers = inputs\n                              .concat(selects)\n                              .concat(inputTexts);\n                            let correctAnswers = parsedAnswers.filter((x) =>\n                              x.question_id.includes(id)\n                            );\n\n                            return changeQuestionAnswer(\n                              answers,\n                              id,\n                              correctAnswers,\n                              ActivityKeys\n                            );\n                          });\n                      };\n\n                      const changeQuestionAnswer = async (\n                        answers,\n                        id,\n                        correctAnswers,\n                        ActivityKeys\n                      ) => {\n                        // console.log(answers, id, correctAnswers);\n\n                        let answerToChange = [];\n                        answers.find((answer) => {\n                          correctAnswers.forEach((correctAnswer) => {\n                            if (correctAnswer.question_id.includes(answer[1])) {\n                              answerToChange.push([answer[0], answer[1]]);\n                            } else if (\n                              answer[1] == \"on\" &&\n                              correctAnswer.question_id == answer[0]\n                            ) {\n                              answerToChange.push([answer[0], answer[1]]);\n                            } else if (answer[1] == \"FILL_WITH_TEXT\") {\n                              answerToChange.push([\n                                answer[0],\n                                correctAnswer.optional_data\n                                  .trim()\n                                  .replace(/\"/g, \"\"),\n                              ]);\n                            }\n                          });\n                        });\n\n                        return fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/ContentViewers/AssessmentViewer/ChangeQuestionAnswer`,\n                          {\n                            headers: {\n                              \"content-type\":\n                                \"application/x-www-form-urlencoded; charset=UTF-8\",\n                            },\n                            body: `learningObjectKey=${\n                              ActivityKeys.learningObjectKey\n                            }&resultKey=${\n                              ActivityKeys.resultKey\n                            }&enrollmentKey=${\n                              ActivityKeys.enrollmentKey\n                            }&sessionKey=${\n                              ActivityKeys.sessionKey\n                            }&language=0&questionKey=${id}${answerToChange\n                              .map((answer) => `&${answer[0]}=${answer[1]}`)\n                              .join(\"\")}`,\n                            method: \"POST\",\n                          }\n                        )\n                          .then((res) => res.json())\n                          .then((res) => {\n                            // console.log(res);\n                          });\n                      };\n\n                      try {\n                        const ltiLaunchResponse = await fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/Player/LTILaunch`,\n                          {\n                            headers: {\n                              \"content-type\":\n                                \"application/x-www-form-urlencoded\",\n                            },\n                            body: Object.keys(initialization.InitialLaunchData)\n                              .map(\n                                (key) =>\n                                  `${key}=${encodeURIComponent(\n                                    initialization.InitialLaunchData[key]\n                                  )}`\n                              )\n                              .join(\"&\"),\n                            method: \"POST\",\n                          }\n                        );\n\n                        const ltiLaunchHtml = await ltiLaunchResponse.text();\n                        const parser = new DOMParser();\n                        const html = parser.parseFromString(\n                          ltiLaunchHtml,\n                          \"text/html\"\n                        );\n                        const form = html.querySelector(\"form\");\n                        const formData = new FormData(form);\n                        const data = Object.fromEntries(formData);\n                        console.log(\"Data:\", data);\n\n                        const ltiLoginResponse = await fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/contentviewers/ltilogin`,\n                          {\n                            headers: {\n                              \"content-type\":\n                                \"application/x-www-form-urlencoded\",\n                            },\n                            body: Object.keys(data)\n                              .map(\n                                (key) =>\n                                  `${key}=${encodeURIComponent(data[key])}`\n                              )\n                              .join(\"&\"),\n                            method: \"POST\",\n                          }\n                        );\n\n                        const ltiLoginHtml = await ltiLoginResponse.text();\n                        const loginHtml = parser.parseFromString(\n                          ltiLoginHtml,\n                          \"text/html\"\n                        );\n                        const launchData =\n                          loginHtml.getElementById(\"launchdata\").value;\n                        console.log(\n                          \"Launch Data:\",\n                          `${launchData.substring(0, 10)}...`\n                        );\n\n                        const activityResponse = await fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/ContentViewers/AssessmentViewer/Activity`,\n                          {\n                            headers: {\n                              \"content-type\":\n                                \"application/x-www-form-urlencoded\",\n                            },\n                            body: `launchdata=${launchData}`,\n                            method: \"POST\",\n                          }\n                        );\n\n                        const activityHtml = await activityResponse.text();\n                        const parsedHtml = parser.parseFromString(\n                          activityHtml,\n                          \"text/html\"\n                        );\n\n                        const ids = Array.from(\n                          parsedHtml.querySelectorAll(\".question-buttons ol li\")\n                        )\n                          .slice(1, -1)\n                          .map((li) => li.id);\n\n                        console.log(\"Ids:\", ids);\n                        localStorage.setItem(\"ids\", JSON.stringify(ids));\n                        setExampleQuestions(ids);\n                        let parsedAnswers = [];\n                        // const keyFromGM = GM_getValue(\"user_key\", null);\n                        // console.log(\"Key From GM:\", keyFromGM);\n                        // const userId = getUserID() || \"null\";\n                        // console.log(\"User ID:\", userId);\n                        // const dbAnswers = await retrieveAnswersFromDB(\n                        //   ids,\n                        //   keyFromGM,\n                        //   userId\n                        // );\n                        // parsedAnswers = JSON.parse(dbAnswers.responseText);\n\n                        // parsedAnswers = parsedAnswers.map((x) => {\n                        //   if (x.question_id.startsWith(\"nq:\")) {\n                        //     x.question_id = x.question_id.slice(3);\n                        //   }\n                        //   return x;\n                        // });\n\n                        const ActivityKeys = {};\n                        parsedHtml\n                          .querySelectorAll(\"script\")\n                          .forEach((script) => {\n                            const scriptContent = script.textContent;\n                            if (scriptContent.includes(\"ActivityKeys\")) {\n                              const keys = scriptContent.match(\n                                /this\\.[a-zA-Z]+Key = \"(.*?)\";/g\n                              );\n                              keys.forEach((key) => {\n                                const keyName =\n                                  key.match(/this\\.([a-zA-Z]+Key)/)[1];\n                                const keyValue = key.match(/\"([^\"]+)\"/)[1];\n                                ActivityKeys[keyName] = keyValue;\n                              });\n                            }\n                          });\n\n                        console.log(\"Activity Keys:\", ActivityKeys);\n\n                        await Promise.all(\n                          ids.map((id) =>\n                            loadQuestion(id, parsedAnswers, ActivityKeys)\n                          )\n                        );\n\n                        await fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/contentengineapi/api/assessment/SubmitAssessmentSimpleResponse?learningObjectKey=${ActivityKeys.learningObjectKey}&resultKey=${ActivityKeys.resultKey}&enrollmentKey=${ActivityKeys.enrollmentKey}&sessionKey=${ActivityKeys.sessionKey}&autoSubmitted=false&UpdateLastTime=true`\n                        );\n\n                        // window.location.reload();\n                      } catch (error) {\n                        console.error(\"Error in overlay click handler:\", error);\n                      }\n                    };\n                    clearInterval(waitForContainer);\n                  }\n                };\n\n                waitForContainer = setInterval(intervalFunc, 3000);\n              }\n\n              // Check if eNotes button exists and activity type starts with 'A'\n              const eNotesBtn = document.getElementById(\"aEnotes\");\n              if (\n                nextActivityData.NextObjectType?.startsWith(\"A\") &&\n                eNotesBtn\n              ) {\n                eNotesBtn.click();\n              }\n            } catch (error) {\n              console.error(\"Error fetching next activity data:\", error);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    initDraggableMenu((conf) => {\n      console.log(\"Config:\", conf);\n      config = conf;\n    });\n\n    const stageFrame = getStageFrame();\n    if (!stageFrame) return;\n\n    interval = setInterval(async () => {\n      if (stop) {\n        console.log(\"Stopping script because pastContent is detected.\");\n        clearInterval(interval);\n        return;\n      }\n\n      const examTitle = document.getElementById(\"activity-title\")?.innerText;\n      if (\n        !examTitle ||\n        document.getElementById(\"activity-status\")?.innerText === \"Complete\"\n      ) {\n        const journalText = stageFrame?.contentWindow.document\n          .getElementById(\"journal-ckeditor\")\n          ?.innerText?.trim();\n        const linkText = stageFrame?.contentWindow.document\n          .querySelector(\".OnlineContent-textArea-div\")\n          ?.innerText?.trim();\n\n        let pastContent = journalText || linkText;\n        console.log(\"Completed!!!!!!!\", pastContent);\n        if (pastContent) {\n          stop = true;\n          const scores = 77;\n          displayHumanElement(\"Human Score\", scores);\n          clearInterval(interval); // Stop execution\n        }\n        return;\n      }\n\n      if (!config.isActive) {\n        console.log(\"Start button not clicked yet.\");\n        return;\n      }\n\n      if (!stageFrame.contentWindow?.CKEDITOR) {\n        console.log(\"CKEditor not displayed!!!!!\");\n        return;\n      }\n\n      const links = stageFrame.contentDocument?.querySelectorAll(\n        \"#contentViewer #OnlineContent-Links .weblink\"\n      );\n      console.log(\"Links:\", links);\n\n      if (!links?.length) {\n        clearInterval(interval);\n        const text =\n          stageFrame.contentWindow.document.getElementById(\"journal-prompt\") ||\n          stageFrame.contentWindow.document.querySelector(\n            \".text-box-container\"\n          );\n        const editor =\n          stageFrame.contentWindow.CKEDITOR.instances[\"Answer\"] ||\n          stageFrame.contentWindow.CKEDITOR.instances[\"essay-Content\"];\n\n        try {\n          displayHumanElement(\"Human Score\");\n\n          // Create a promise that resolves after placeholder typing or immediately if disabled\n          const placeholderPromise =\n            config.placeholder === \"Enabled\"\n              ? new Promise((resolve) => {\n                  const placeholderText =\n                    \"This topic has many sides to consider, each offering unique insights required to understand.\";\n                  editor.setData(\"\"); // Clear any existing content\n                  createTypingAnimation(\n                    editor,\n                    placeholderText,\n                    { ...config, typingStyle: \"None\" },\n                    () => {\n                      // Then backspace it character by character\n                      let text = placeholderText;\n                      const backspaceInterval = setInterval(() => {\n                        if (text.length > 0) {\n                          text = text.slice(0, -1);\n                          editor.setData(text);\n                        } else {\n                          clearInterval(backspaceInterval);\n                          resolve();\n                        }\n                      }, 50); // Backspace every 50ms\n                    }\n                  );\n                })\n              : Promise.resolve();\n\n          // Wait for both placeholder typing and 5-second delay\n          const [res, _] = await Promise.all([\n            getAnswer(text?.innerText),\n            placeholderPromise,\n          ]);\n          console.log(res);\n          const answer = res.humanizedText;\n          console.log(\"Journal Answer:\", answer);\n\n          const response = await getHumanScore(answer);\n          const scores = response.humanScore;\n          console.log(\"Journal scores:\", scores);\n          displayHumanElement(\"Human Score\", scores);\n\n          createTypingAnimation(\n            editor,\n            answer,\n            {\n              ...config,\n              placeholder: \"Disabled\",\n            },\n            () => {\n              const submitBtn =\n                stageFrame.contentWindow.document.getElementById(\n                  \"SubmitButton\"\n                ) ||\n                stageFrame.contentWindow.document.querySelector(\n                  \".uibtn.uibtn-blue.uibtn-med.uibtn-alt\"\n                );\n              submitBtn.disabled = false;\n              submitWriting(submitBtn, text?.innerText, answer, scores);\n            }\n          );\n        } catch (error) {\n          console.error(\"Error:\", error);\n        }\n      } else {\n        console.log(\"Links length:\", links.length);\n        clearInterval(interval);\n        let answered = 0;\n        const needToAnswer = Object.keys(\n          stageFrame.contentWindow.CKEDITOR.instances\n        ).length;\n        console.log(\"needToAnswer:\", needToAnswer);\n\n        Object.keys(stageFrame.contentWindow.CKEDITOR.instances).forEach(\n          async (key) => {\n            const editor = stageFrame.contentWindow.CKEDITOR.instances[key];\n            const question = stageFrame.contentDocument\n              .getElementById(editor.name)\n              ?.parentElement?.querySelector(\"p\")?.innerText;\n            console.log(\"Question:\", question);\n\n            try {\n              // Create a promise for placeholder typing\n              const placeholderPromise =\n                config.placeholder === \"Enabled\"\n                  ? new Promise((resolve) => {\n                      const placeholderText =\n                        \"This topic has many sides to consider, each offering unique insights required to understand.\";\n                      editor.setData(\"\"); // Clear any existing content\n\n                      // First type the placeholder text\n                      createTypingAnimation(\n                        editor,\n                        placeholderText,\n                        { ...config, typingStyle: \"None\" },\n                        () => {\n                          // Then backspace it character by character\n                          let text = placeholderText;\n                          const backspaceInterval = setInterval(() => {\n                            if (text.length > 0) {\n                              text = text.slice(0, -1);\n                              editor.setData(text);\n                            } else {\n                              clearInterval(backspaceInterval);\n                              resolve();\n                            }\n                          }, 50); // Backspace every 50ms\n                        }\n                      );\n                    })\n                  : Promise.resolve();\n\n              let siteNumber = question\n                ?.match(/\\( *Site *[0-9]+ *\\)/g)\n                ?.join(\"\");\n              siteNumber = siteNumber?.replace(/\\( *Site *([0-9]+) *\\)/, \"$1\");\n\n              let answers = [],\n                questions = [];\n\n              const endpoint = siteNumber\n                ? links[parseInt(siteNumber) - 1]?.getAttribute(\"href\")\n                : links[0]?.getAttribute(\"href\");\n\n              const response = await fetch(endpoint);\n              const aRes = await response.text();\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(aRes, \"text/html\");\n\n              doc.querySelector(\"footer\")?.remove();\n\n              const extractedText = [\"h1\", \"h2\", \"p\", \"li\"].reduce(\n                (acc, tag) => {\n                  Array.from(doc.getElementsByTagName(tag)).forEach(\n                    (element) => {\n                      acc += element.textContent?.trim() + \" \";\n                    }\n                  );\n                  return acc.trim();\n                },\n                \"\"\n              );\n\n              const examTitle =\n                document.getElementById(\"activity-title\")?.innerText;\n              if (\n                examTitle === \"Online Content\" &&\n                GM_getValue(\"settings\") &&\n                GM_getValue(\"settings\")[\"auto-writing-use\"] ===\n                  \"Keywords (100% Accuracy)\"\n              ) {\n                editor.setData(extractedText);\n                answered++;\n              } else {\n                displayHumanElement(\"Human Score\");\n\n                //   const answer = `The High Renaissance – my most favored period in art history. It's just the coolest thing, isn't it? The years from 15th to 17th century Italy Florence, Rome and Venice were home to some of the most iconic artists and works we see among us that inspires us till the date.\n                // The High Renaissance – my most favored period in art history. It's just the coolest thing, isn't it? The years from 15th to 17th century Italy Florence, Rome and Venice were home to some of the most iconic artists and works we see among us that inspires us till the date.\n                // The High Renaissance – my most favored period in art history. It's just the coolest thing, isn't it? The years from 15th to 17th century Italy Florence, Rome and Venice were home to some of the most iconic artists and works we see among us that inspires us till the date.\n                // `;\n\n                // Wait for both placeholder typing and 5-second delay\n                const [res, _] = await Promise.all([\n                  getAnswer(extractedText),\n                  placeholderPromise,\n                ]);\n\n                const answer = res.humanizedText;\n                console.log(\"Online Content Answer:\", answer);\n\n                const response = await getHumanScore(answer);\n                const scores = response.humanScore;\n                console.log(\"Online Content scores:\", scores);\n                displayHumanElement(\"Human Score\", scores);\n                answers.push(answer);\n                questions.push(question);\n\n                if (!config.isActive) {\n                  editor.setData(answer);\n                  answered++;\n                } else {\n                  createTypingAnimation(editor, answer, config, () => {\n                    answered++;\n                    if (answered === needToAnswer) {\n                      const submitBtn =\n                        stageFrame.contentWindow.document.getElementById(\n                          \"SubmitQuestionsButton\"\n                        );\n                      submitBtn.disabled = false;\n                      submitWriting(submitBtn, questions, answers, scores);\n                    }\n                  });\n                }\n              }\n            } catch (error) {\n              console.error(\"Error processing answer:\", error);\n            }\n          }\n        );\n      }\n    }, 1000);\n  }\n\n  activateAutomaticWriting();\n})();\n\nfunction getUserIdFromCookie() {\n  try {\n    const cookies = document.cookie.split(\";\");\n    const tokenCookie = cookies.find((cookie) =>\n      cookie.trim().startsWith(\"TokenData=\")\n    );\n\n    if (!tokenCookie) {\n      console.log(\"Token cookie not found\");\n      return null;\n    }\n\n    const tokenData = JSON.parse(decodeURIComponent(tokenCookie.split(\"=\")[1]));\n\n    if (!tokenData || !tokenData.UserId) {\n      console.log(\"User ID not found in token data\");\n      return null;\n    }\n\n    return tokenData.UserId;\n  } catch (error) {\n    console.error(\"Error getting user ID from cookie:\", error);\n    return null;\n  }\n}\n\nexport async function getCourses() {\n  const UserId = getUserIdFromCookie();\n  console.log(\"User ID:\", UserId);\n  if (!UserId) {\n    console.error(\"No user ID available\");\n    return;\n  }\n\n  try {\n    const response = await fetch(\n      `https://r22.core.learn.edgenuity.com/lmsapi/sle/api/enrollments/user/${UserId}`,\n      {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching courses:\", error);\n    return null;\n  }\n}\n\nexport function getStageFrame() {\n  return document.getElementById(\"stageFrame\")\n    ? document.getElementById(\"stageFrame\")\n    : null;\n}\n\nexport function getIFramePreview() {\n  const stageFrame = getStageFrame();\n  if (!stageFrame) return;\n  return stageFrame.contentDocument?.getElementById(\"iFramePreview\")\n    ? stageFrame.contentDocument?.getElementById(\"iFramePreview\")\n    : null;\n}\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","async","getAnswer","prompt","Promise","resolve","reject","GM_xmlhttpRequest","method","url","headers","data","JSON","stringify","onload","response","status","parse","responseText","e","onerror","error","getHumanScore","answers","saveDB","question","answer","score","checkForStageFrameInterval","exampleQuestions","displayHumanElement","text","stageFrame","document","getElementById","querySelector","rect","getBoundingClientRect","style","createElement","id","innerHTML","right","window","scrollX","bottom","scrollY","head","appendChild","container","className","body","updatePosition","left","top","addEventListener","loadingSpinner","scoreDisplay","progressCircle","scoreText","display","textContent","circumference","Math","PI","offset","strokeDasharray","strokeDashoffset","initDraggableMenu","onStartCallback","onExamCallback","console","existingMenu","remove","menu","autoWritingItem","autoWritingButton","settingsIcon","autoWritingContent","isExpanded","background","target","closest","submitDelay1","submitDelay2","answerDelay","answerDelayBtn","typingStyleBtn","value","parseInt","alert","trim","updateAutoWritingState","classList","contains","config","isActive","submitDelay","min","max","typingStyle","placeholder","placeholderText","dropdowns","querySelectorAll","forEach","dropdown","btn","options","stopPropagation","d","toggle","option","selectedValue","getAttribute","customDelayInput","customPlaceholderInput","displayExamPanel","panel","examUnlockerButton","examInfo","autoAdvanceItem","autoAdvanceButton","rocketIcon","autoAdvanceContent","add","selectedType","GM_setValue","loadingOverlay","offsetHeight","courses","getCourses","setTimeout","modal","log","modalHtml","map","course","subject","name","progress","percentComplete","join","insertAdjacentHTML","container1","hideModal","currentPath","location","href","dropdownContent","position","modalContent","show","hide","element","createAutoAdvanceModal","autoAdvanceDropdown","autoAdvanceBtn","autoAdvanceOptions","autoVocabItem","autoVocabButton","nextWord","getStageFrame","contentWindow","viewModel","API","ActivityKeys","initialData","word","currentWord","wordText","wordTextbox","contentDocument","keyupEvent","Event","dispatchEvent","E2020","addresses","ContentEngineViewersPath","resultKey","enrollmentKey","version","fetch","result","json","complete","words","currentWordIndex","indexOf","rank","nextAvailableWord","nextButton","state","selectWord","Complete","src","autoVideoItem","autoVideoButton","setInterval","activityTitleElement","activityTitle","toLowerCase","videoElement","duration","currentTime","isCompleted","Frame","isComplete","questionsFrame","isAVideo","nextFrame","includes","iframePreview","getIFramePreview","questions","clickedAmount","input","length","Array","from","random","click","ifFW","hintButton","doneButton","button","header","currentX","currentY","initialX","initialY","isDragging","xOffset","yOffset","clientX","clientY","preventDefault","transform","examUnlockerItem","unlockIcon","examContent","existingPanel","currentPage","totalPages","ceil","startX","startY","offsetX","offsetY","handleDragStart","getComputedStyle","matrix","DOMMatrixReadOnly","m41","m42","handleDrag","handleDragEnd","newX","newY","viewportWidth","innerWidth","viewportHeight","innerHeight","panelRect","width","height","removeEventListener","handleResize","cleanup","renderPanel","startIdx","endIdx","currentQuestions","slice","oldTransform","q","prevButton","validateFunction","checkForStageFrame","currentFrame","videoCheckInterval","FrameChain","Video","wrapper","clearInterval","textArea","select","processStageFrame","framesStatus","currentPosition","allOtherFramesComplete","every","index","GM_getValue","backUrl","buttonCheckInterval","nextActivityButton","isDisabled","UserId","tokenCookie","cookie","split","find","startsWith","tokenData","decodeURIComponent","getUserIdFromCookie","credentials","Accept","ok","Error","hostname","checkForCurrentActivity","currentActivityElement","parent","parentElement","intervalId","redirectToCurrentActivity","match","interval","stop","submitWriting","submitBtn","scores","gradeBar","number","i","createTypingAnimation","editor","onComplete","setData","msPerWord","placeholderEnabled","isPlaceholderCall","typeText","textToType","isPlaceholder","wordIndex","typeWord","letterIndex","letters","mistakeMode","mistakeText","backspacing","typeLetter","baseText","mistakeChance","mistakeTypes","swap","w","floor","typo","nearby","a","b","c","f","g","h","j","k","l","m","n","p","r","s","t","u","v","x","y","z","char","typoChar","shuffle","sort","mistakeType","createTypingMistake","completeText","getData","deleteChar","deletePlaceholder","startTyping","initialization","lms_base_url","InitialLaunchData","LMSAPIBasePath","prefix","session_user_id","UserID","cookie_user_id","pk","courseName","CourseName","lessonTitle","titleWidth","offsetWidth","numberElement","progressBar","progressText","lessonInfo","ResizeObserver","entries","entry","lessonInfoWidth","contentRect","observe","animation","setProperty","displayLessonNumber","InitialActivityData","Progress","activityId","ActivityOrder","ContextID","nextActivityResponse","nextActivityData","IsRestrictedActivity","Navigation","waitForContainer","intervalFunc","overlayContainers","overlayContainer","cursor","border","transition","boxShadow","onclick","ltiLaunchResponse","keys","encodeURIComponent","ltiLaunchHtml","parser","DOMParser","form","parseFromString","formData","FormData","fromEntries","ltiLoginResponse","ltiLoginHtml","launchData","substring","activityResponse","activityHtml","parsedHtml","ids","li","localStorage","setItem","parsedAnswers","script","scriptContent","keyName","keyValue","all","learningObjectKey","sessionKey","then","res","html","inputs","selects","hasAttribute","filter","Boolean","inputTexts","concat","correctAnswers","question_id","answerToChange","correctAnswer","push","optional_data","replace","changeQuestionAnswer","loadQuestion","eNotesBtn","NextObjectType","err","message","conf","examTitle","innerText","journalText","linkText","pastContent","CKEDITOR","links","answered","needToAnswer","instances","placeholderPromise","backspaceInterval","siteNumber","endpoint","aRes","doc","extractedText","reduce","acc","tag","getElementsByTagName","_","humanizedText","humanScore","disabled","activateAutomaticWriting"],"sourceRoot":""}
=======
{"version":3,"file":"bundle.user.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,UAAU;AACV;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;AACH;;;;;;;;;;;;;;;;;;;ACxFA;;AAE4D;AAO3C;;AAEjB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,+CAAM;AAC5B;AACA,cAAc;AACd,8BAA8B,mBAAmB;AACjD;AACA,wBAAwB,+CAAM;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI,8DAAsB;;AAE1B;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD,YAAY;AACZ;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,QAAQ,2DAAmB;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B,OAAO,yEAAyE,gBAAgB,kBAAkB,UAAU,iBAAiB,WAAW;AACnL;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;;AAEA;AACA;AACA,yCAAyC,4BAA4B;AACrE;AACA;;AAEA;AACA,sBAAsB,uBAAuB;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA,oEAAoE;AACpE,6BAA6B;AAC7B,uDAAuD,kBAAkB,aAAa,UAAU,iBAAiB,cAAc,eAAe,GAAG,cAAc,WAAW;AAC1K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B,yBAAyB;;AAEzB;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA,oEAAoE;AACpE,6BAA6B;AAC7B;AACA;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA,6BAA6B;AAC7B;AACA,6BAA6B,0BAA0B,GAAG,EAAE;AAC5D,mDAAmD,UAAU,GAAG,UAAU;AAC1E,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;AACA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,qCAAqC,IAAI,GAAG;AAC5C;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,qCAAqC,IAAI,GAAG,8BAA8B;AAC1E;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,4BAA4B;AACzD;;AAEA;AACA,qCAAqC,OAAO;AAC5C;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,gDAAgD,WAAW;AAC3D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,2DAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,2BAA2B;;AAE3B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qCAAqC,OAAO,6GAA6G,+BAA+B,aAAa,uBAAuB,iBAAiB,2BAA2B,cAAc,wBAAwB;AAC9S;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA,WAAW;AACX;AACA;AACA,MAAM;AACN;AACA;;AAEA,IAAI,yDAAiB;AACrB;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU,2DAAmB;AAC7B,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,UAAU,2DAAmB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,sBAAsB,gCAAgC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;AACA,YAAY,kDAAS;AACrB;AACA;AACA;AACA;AACA;;AAEA,iCAAiC,sDAAa;AAC9C;AACA;AACA,UAAU,2DAAmB;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA,0BAA0B,gCAAgC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,2BAA2B,OAAO;AAClC;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,gBAAgB,2DAAmB;;AAEnC;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,kDAAS;AAC3B;AACA;;AAEA;AACA;;AAEA,uCAAuC,sDAAa;AACpD;AACA;AACA,gBAAgB,2DAAmB;AACnC;AACA;;AAEA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8EAA8E,OAAO;AACrF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,6CAA6C,gBAAgB;AAC7D;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACz/BqE;AACrE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iCAAiC;AACnD,iBAAiB,mCAAmC;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,iBAAiB;AACjB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA,kFAAkF;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iCAAiC;AAC/D,6BAA6B,mCAAmC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA,4DAA4D;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iGAAiG;AACjG;AACA;AACA;AACA;AACA;AACA;AACA,sFAAsF,YAAY;AAClG,iHAAiH;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvaAAa;AACbcAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,UAAU;AACV,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA,8BAA8B,iDAAU;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,oDAAa;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4CAA4C;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD;AACnD,eAAe;AACf,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,oCAAoC,uDAAgB;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,iBAAiB;AACjB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,SAAS,MAAM,SAAS;AACpE;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,WAAW;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,WAAW,KAAK;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,+BAA+B,WAAW;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,gBAAgB;AACnD;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,mDAAmD,OAAO;AAC1D;AACA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,KAAK,MAAM,KAAK;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,SAAS,MAAM,SAAS;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,iBAAiB;AAC7C;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qBAAqB,aAAa,KAAK,WAAW;AAC9D;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,iBAAiB;AACvD;AACA,+DAA+D;AAC/D,iFAAiF;AACjF;AACA,gBAAgB;AAChB;AACA;AACA,gEAAgE,UAAU;AAC1E,iDAAiD,wBAAwB,SAAS;AAClF,qDAAqD,kBAAkB,aAAa,mBAAmB;AACvG;AACA,yBAAyB;AACzB,mDAAmD,qBAAqB,gCAAgC,iBAAiB,kBAAkB,YAAY;AACvJ,iCAAiC,YAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,aAAa,gBAAgB;AACnG;AACA;AACA;AACA;AACA,2BAA2B,GAAG,cAAc,qBAAqB,qBAAqB,4BAA4B;AAClH;AACA;AACA;AACA,4DAA4D,eAAe,YAAY,gCAAgC;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACraAAa,cAAc;AAClD;AACA,gCAAgC,YAAY,aAAa,cAAc;AACvE;AACA;AACA;AACA,wCAAwC,QAAQ,SAAS,UAAU,WAAW,6BAA6B,eAAe,yBAAyB,qBAAqB,aAAa;AACrL,2DAA2D,cAAc,yCAAyC,oBAAoB,2BAA2B,wCAAwC;AACzM;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,QAAQ;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,mBAAmB;AACnB,MAAM;AACN;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA,KAAK,SAAS;AACd;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,SAAS;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,oDAAa;AAClC;AACA,sDAAsD;AACtD;AACA;AACA,IAAI;AACJ;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,MAAM;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ;AACA;AACA,SAAS;AACT;AACA,QAAQ;AACR;AACA,8BAA8B,uDAAgB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,QAAQ;AACR;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,cAAc;AACd;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;UC1iFD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack://tampermonkey/./src/api.js","webpack://tampermonkey/./src/main.js","webpack://tampermonkey/./src/ui.js","webpack://tampermonkey/webpack/bootstrap","webpack://tampermonkey/webpack/runtime/define property getters","webpack://tampermonkey/webpack/runtime/hasOwnProperty shorthand","webpack://tampermonkey/webpack/runtime/make namespace object","webpack://tampermonkey/webpack/before-startup","webpack://tampermonkey/webpack/startup","webpack://tampermonkey/webpack/after-startup"],"sourcesContent":["// src/api.js\r\n\r\nexport async function getAnswer(prompt) {\r\n  return new Promise((resolve, reject) => {\r\n    GM_xmlhttpRequest({\r\n      method: \"POST\",\r\n      url: \"http://localhost:3000/api/process\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: JSON.stringify({ prompt }),\r\n      onload: function (response) {\r\n        if (response.status === 200) {\r\n          try {\r\n            const data = JSON.parse(response.responseText);\r\n            resolve(data);\r\n          } catch (e) {\r\n            reject(\"JSON parse error: \" + e);\r\n          }\r\n        } else {\r\n          reject(\"API failed with status: \" + response.status);\r\n        }\r\n      },\r\n      onerror: function (error) {\r\n        reject(\"API error: \" + error);\r\n      },\r\n    });\r\n  });\r\n}\r\n\r\nexport async function getHumanScore(answers) {\r\n  return new Promise((resolve, reject) => {\r\n    GM_xmlhttpRequest({\r\n      method: \"POST\",\r\n      url: \"http://localhost:3000/api/process/human-score\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: JSON.stringify({ answers }),\r\n      onload: function (response) {\r\n        if (response.status === 200) {\r\n          try {\r\n            const data = JSON.parse(response.responseText);\r\n            resolve(data);\r\n          } catch (e) {\r\n            reject(\"JSON parse error: \" + e);\r\n          }\r\n        } else {\r\n          reject(\"API failed with status: \" + response.status);\r\n        }\r\n      },\r\n      onerror: function (error) {\r\n        reject(\"API error: \" + error);\r\n      },\r\n    });\r\n  });\r\n}\r\n\r\nexport async function saveDB(question, answer, score) {\r\n  return new Promise((resolve, reject) => {\r\n    GM_xmlhttpRequest({\r\n      method: \"POST\",\r\n      url: \"http://localhost:3000/api/answer\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      data: JSON.stringify({\r\n        question,\r\n        answer,\r\n        score,\r\n      }),\r\n      onload: function (response) {\r\n        if (response.status === 200) {\r\n          try {\r\n            const data = JSON.parse(response.responseText);\r\n            resolve(data);\r\n          } catch (e) {\r\n            reject(\"JSON parse error: \" + e);\r\n          }\r\n        } else {\r\n          reject(\"API failed with status: \" + response.status);\r\n        }\r\n      },\r\n      onerror: function (error) {\r\n        reject(\"API error: \" + error);\r\n      },\r\n    });\r\n  });\r\n}\r\n","// src/main.js\n\nimport { getAnswer, getHumanScore, saveDB } from \"./api.js\";\nimport {\n  displayHumanElement,\n  initDraggableMenu,\n  displayLessonNumber,\n  updateAutoWritingState,\n  setExampleQuestions,\n} from \"./ui.js\";\n\n(function () {\n  \"use strict\";\n\n  let stop = false,\n    interval,\n    config = {};\n\n  function submitWriting(submitBtn, questions, answers, scores) {\n    submitBtn.click();\n    console.log(\"Clicked!!!!\");\n\n    setTimeout(async () => {\n      const gradeBar = document.getElementById(\"lessonInfo\");\n      const value = gradeBar.querySelectorAll('thspan[data-rwthpgen=\"1\"]');\n      console.log(\"Length:\", value.length, value);\n      if (value.length === 4) {\n        const number = value[2];\n        console.log(\"gradeBar:\", gradeBar, number);\n        if (number.textContent.trim() === \"100\") {\n          console.log(\"Answers:\", answers);\n          console.log(\"Scores:\", scores);\n\n          if (scores) {\n            if (typeof scores === \"number\") {\n              if (scores >= 90) {\n                await saveDB(questions, answers, scores);\n              }\n            } else {\n              for (let i = 0; i < scores.length; i++) {\n                if (scores[i] >= 90) {\n                  await saveDB(questions[i], answers[i], scores[i]);\n                }\n              }\n            }\n          }\n        }\n      }\n    }, 15000);\n  }\n\n  // Helper functions for humanized typing\n  function createTypingMistake(word, typingStyle) {\n    const mistakeTypes = {\n      swap: (w) => {\n        if (w.length < 2) return w;\n        const i = Math.floor(Math.random() * (w.length - 1));\n        return w.slice(0, i) + w[i + 1] + w[i] + w.slice(i + 2);\n      },\n      typo: (w) => {\n        const nearby = {\n          a: \"sq\",\n          b: \"vn\",\n          c: \"xv\",\n          d: \"sf\",\n          e: \"wr\",\n          f: \"dg\",\n          g: \"fh\",\n          h: \"gj\",\n          i: \"uo\",\n          j: \"hk\",\n          k: \"jl\",\n          l: \"k\",\n          m: \"n\",\n          n: \"bm\",\n          o: \"ip\",\n          p: \"o\",\n          q: \"a\",\n          r: \"et\",\n          s: \"ad\",\n          t: \"ry\",\n          u: \"yi\",\n          v: \"bc\",\n          w: \"e\",\n          x: \"c\",\n          y: \"tu\",\n          z: \"\",\n        };\n        if (w.length < 1) return w;\n        const i = Math.floor(Math.random() * w.length);\n        const char = w[i].toLowerCase();\n        const typoChar = nearby[char]\n          ? nearby[char][Math.floor(Math.random() * nearby[char].length)]\n          : char;\n        return w.slice(0, i) + typoChar + w.slice(i + 1);\n      },\n      shuffle: (w) =>\n        w\n          .split(\"\")\n          .sort(() => Math.random() - 0.5)\n          .join(\"\"),\n    };\n\n    const mistakeType =\n      typingStyle === \"Level 1\"\n        ? \"swap\"\n        : typingStyle === \"Level 2\"\n        ? \"typo\"\n        : \"shuffle\";\n    console.log(\"Mistake Type:\", mistakeType);\n    return mistakeTypes[mistakeType](word);\n  }\n\n  async function createTypingAnimation(editor, text, config, onComplete) {\n    // Update state to writing when typing starts\n    updateAutoWritingState(\"writing\");\n\n    const words = text.split(\" \");\n    let currentIndex = 0;\n    editor.setData(\"\");\n\n    const msPerWord = (60 * 1000) / (config.answerDelay || 30); // Default to 30 WPM if not set\n    const typingStyle = config.typingStyle;\n    const placeholderEnabled = config.placeholder === \"Enabled\";\n    const placeholderText =\n      config.placeholderText ||\n      \"This topic has many sides to consider, each offering unique insights required to understand.\";\n\n    // Skip placeholder if this is a placeholder typing call\n    const isPlaceholderCall = text === placeholderText;\n\n    const typeText = async (textToType, isPlaceholder = false) => {\n      return new Promise((resolve) => {\n        let wordIndex = 0;\n        const words = textToType.split(\" \");\n\n        const typeWord = () => {\n          if (wordIndex < words.length) {\n            let word = words[wordIndex];\n            let letterIndex = 0;\n            const letters = word.split(\"\");\n            let mistakeMode = false;\n            let mistakeText = \"\";\n            let backspacing = false;\n\n            const typeLetter = () => {\n              if (backspacing) {\n                if (mistakeText.length > 0) {\n                  mistakeText = mistakeText.slice(0, -1);\n                  let baseText =\n                    wordIndex === 0\n                      ? \"\"\n                      : words.slice(0, wordIndex).join(\" \") + \" \";\n                  editor.setData(baseText + mistakeText);\n                  setTimeout(typeLetter, msPerWord / word.length);\n                } else {\n                  backspacing = false;\n                  mistakeMode = false;\n                  letterIndex = 0;\n                  setTimeout(typeLetter, msPerWord / word.length);\n                }\n                return;\n              }\n\n              // Only make typing mistakes for actual answer, not placeholder\n              if (!isPlaceholder && !mistakeMode && letterIndex === 0) {\n                const mistakeChance =\n                  {\n                    \"Level 1\": 0.1,\n                    \"Level 2\": 0.25,\n                    \"Level 3\": 0.4,\n                  }[typingStyle] || 0;\n\n                mistakeMode = Math.random() < mistakeChance;\n                if (mistakeMode) {\n                  mistakeText = createTypingMistake(word);\n                }\n              }\n\n              if (\n                letterIndex <\n                (mistakeMode ? mistakeText.length : letters.length)\n              ) {\n                let baseText =\n                  wordIndex === 0\n                    ? \"\"\n                    : words.slice(0, wordIndex).join(\" \") + \" \";\n                let currentWord = mistakeMode\n                  ? mistakeText.slice(0, letterIndex + 1)\n                  : letters.slice(0, letterIndex + 1).join(\"\");\n\n                editor.setData(baseText + currentWord);\n                letterIndex++;\n\n                if (mistakeMode && letterIndex === mistakeText.length) {\n                  backspacing = true;\n                  setTimeout(typeLetter, msPerWord / 2);\n                  return;\n                }\n\n                setTimeout(typeLetter, msPerWord / word.length);\n              } else {\n                let completeText =\n                  words.slice(0, wordIndex).join(\" \") +\n                  (wordIndex > 0 ? \" \" : \"\") +\n                  (mistakeMode ? mistakeText : word);\n\n                editor.setData(completeText);\n                wordIndex++;\n                setTimeout(typeWord, msPerWord);\n              }\n            };\n\n            typeLetter();\n          } else {\n            resolve();\n          }\n        };\n\n        typeWord();\n      });\n    };\n\n    const deletePlaceholder = async () => {\n      return new Promise((resolve) => {\n        let text = editor.getData();\n        const deleteChar = () => {\n          if (text.length > 0) {\n            text = text.slice(0, -1);\n            editor.setData(text);\n            setTimeout(deleteChar, msPerWord / 10); // Faster deletion\n          } else {\n            resolve();\n          }\n        };\n        deleteChar();\n      });\n    };\n\n    const startTyping = async () => {\n      // Only handle placeholder if this is not a placeholder typing call\n      if (placeholderEnabled && !isPlaceholderCall) {\n        await typeText(placeholderText, true);\n        await new Promise((resolve) => setTimeout(resolve, 2000));\n        await deletePlaceholder();\n        await new Promise((resolve) => setTimeout(resolve, 1000));\n      }\n\n      // Type the main text\n      await typeText(text, isPlaceholderCall);\n\n      if (onComplete) onComplete();\n    };\n\n    // Start the typing process\n    setTimeout(() => {\n      startTyping();\n    }, 2000);\n  }\n\n  async function activateAutomaticWriting() {\n    console.log(\"Get started!!!~~~~~~~~~~~!!!\");\n\n    try {\n      if (initialization) {\n        const lms_base_url = initialization?.InitialLaunchData?.LMSAPIBasePath;\n        const prefix = lms_base_url.split(\"//\")[1].split(\".\")[0];\n        console.log(\"lms_base_url:\", prefix);\n\n        const session_user_id = initialization?.InitialLaunchData?.UserID;\n        console.log(\"Session User ID:\", session_user_id);\n\n        const cookie_user_id = initialization?.pk;\n        console.log(\"Cookie User ID:\", cookie_user_id);\n\n        // Get course name from the span element\n        const courseName = initialization?.InitialLaunchData?.CourseName;\n        console.log(\"Course name:\", courseName);\n\n        displayLessonNumber(initialization?.InitialActivityData?.Progress);\n\n        // Get next activity data\n        // Add click event listener to Next Activity button\n        const nextActivityButton = document.querySelector(\"a.footnav.goRight\");\n        if (nextActivityButton) {\n          nextActivityButton.addEventListener(\"click\", async () => {\n            console.log(\"Next Activity Button clicked!!!!\");\n            try {\n              console.log(\"Fetching next activity data...\");\n\n              const activityId =\n                initialization?.InitialActivityData?.ActivityOrder;\n              console.log(\"Activity ID:\", activityId);\n              const ContextID = initialization?.InitialLaunchData?.ContextID;\n              console.log(\"Context ID:\", ContextID);\n\n              const nextActivityResponse = await fetch(\n                `https://${prefix}.core.learn.edgenuity.com/lmsapi/req/navigation/getnextactivity?UserID=${session_user_id}&StudentBuildID=${ContextID}&ActivityOrder=${activityId}&IsSSLimited=False&AllowPretestsAndQuizzes=False`,\n                {\n                  method: \"GET\",\n                  credentials: \"include\",\n                  headers: {\n                    Accept: \"application/json\",\n                  },\n                }\n              );\n\n              if (!nextActivityResponse.ok) {\n                throw new Error(\n                  `HTTP error! status: ${nextActivityResponse.status}`\n                );\n              }\n\n              const nextActivityData = await nextActivityResponse.json();\n              const { IsRestrictedActivity } = nextActivityData?.Navigation;\n              console.log(\"Is Restricted:\", IsRestrictedActivity);\n\n              if (IsRestrictedActivity) {\n                // Add brilliant shadow border if activity is restricted\n                let waitForContainer;\n                const intervalFunc = () => {\n                  const stageFrame = getStageFrame();\n                  const overlayContainers =\n                    stageFrame?.contentWindow.document.querySelectorAll(\n                      \".overlay-attempt\"\n                    );\n                  const overlayContainer = Array.from(overlayContainers).find(\n                    (container) =>\n                      container.querySelector(\n                        \".overlay-attempt-button.overlay-attempt-button-lock\"\n                      )\n                  );\n                  if (overlayContainer) {\n                    overlayContainer.style.cursor = \"pointer\";\n                    overlayContainer.style.border =\n                      \"2px solid rgba(255, 215, 0, 0.7)\";\n                    overlayContainer.style.transition = \"all 0.3s ease\";\n\n                    overlayContainer.addEventListener(\"mouseenter\", () => {\n                      overlayContainer.style.boxShadow =\n                        \"0 0 20px 10px rgba(255, 215, 0, 0.7)\";\n                    });\n\n                    overlayContainer.addEventListener(\"mouseleave\", () => {\n                      overlayContainer.style.boxShadow = \"none\";\n                    });\n\n                    overlayContainer.addEventListener(\"click\", () => {\n                      overlayContainer.style.transform = \"scale(0.95)\";\n                      overlayContainer.style.boxShadow =\n                        \"0 0 30px 15px rgba(255, 215, 0, 0.9)\";\n                      setTimeout(() => {\n                        overlayContainer.style.transform = \"scale(1)\";\n                        overlayContainer.style.boxShadow = \"none\";\n                      }, 200);\n                    });\n                    overlayContainer.onclick = async () => {\n                      console.log(\n                        \"Initial Activity Order:\",\n                        initialization?.InitialActivityData?.ActivityOrder\n                      );\n\n                      // window.parent.Namespace.global().playerView.startActivity(\n                      //   initialization?.InitialActivityData?.ActivityOrder,\n                      //   function (warning) {\n                      //     if (warning == \"NOATTEMPT\")\n                      //       window.parent.Namespace.global()\n                      //         .playerView.stageView()\n                      //         .loadUrl(\n                      //           window.parent.Namespace.global().services.overlay\n                      //             .basepath +\n                      //             \"?errormessage=\" +\n                      //             encodeURIComponent(\n                      //               \"You do not have any retakes available for this Assessment.\"\n                      //             )\n                      //         );\n                      //   }\n                      // );\n\n                      const loadQuestion = async (\n                        id,\n                        parsedAnswers,\n                        ActivityKeys\n                      ) => {\n                        const parser = new DOMParser();\n                        let learningObjectKey = ActivityKeys.learningObjectKey;\n                        let resultKey = ActivityKeys.resultKey;\n                        let enrollmentKey = ActivityKeys.enrollmentKey;\n                        let sessionKey = ActivityKeys.sessionKey;\n\n                        return fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/ContentViewers/AssessmentViewer/LoadQuestion`,\n                          {\n                            headers: {\n                              \"content-type\":\n                                \"application/x-www-form-urlencoded; charset=UTF-8\",\n                            },\n                            body: `learningObjectKey=${learningObjectKey}&resultKey=${resultKey}&enrollmentKey=${enrollmentKey}&questionKey=${id}&sessionKey=${sessionKey}`,\n                            method: \"POST\",\n                          }\n                        )\n                          .then((res) => res.json())\n                          .then((res) => {\n                            const html = parser.parseFromString(\n                              res.html,\n                              \"text/html\"\n                            );\n\n                            let inputSelector =\n                              \".Practice_Question_Body .answer-choice input\";\n                            let selectSelector =\n                              \".Practice_Question_Body select option\";\n                            let inputTextSelector = \"input[type='text']\";\n\n                            let inputs = Array.from(\n                              html.querySelectorAll(inputSelector)\n                            ).map((li) => [li.name, li.value]);\n                            console.log(\"Inputs:\", inputs);\n                            let selects = Array.from(\n                              html.querySelectorAll(selectSelector)\n                            )\n                              .map((option) => {\n                                if (option.hasAttribute(\"value\")) {\n                                  return [\n                                    option.parentElement.name,\n                                    option.value,\n                                  ];\n                                }\n                              })\n                              .filter(Boolean);\n                            let inputTexts = Array.from(\n                              html.querySelectorAll(inputTextSelector)\n                            ).map((input) => [input.name, \"FILL_WITH_TEXT\"]);\n                            // console.log(\"YO BITH\", inputs, selects, inputTexts);\n\n                            let answers = inputs\n                              .concat(selects)\n                              .concat(inputTexts);\n                            let correctAnswers = parsedAnswers.filter((x) =>\n                              x.question_id.includes(id)\n                            );\n\n                            return changeQuestionAnswer(\n                              answers,\n                              id,\n                              correctAnswers,\n                              ActivityKeys\n                            );\n                          });\n                      };\n\n                      const changeQuestionAnswer = async (\n                        answers,\n                        id,\n                        correctAnswers,\n                        ActivityKeys\n                      ) => {\n                        // console.log(answers, id, correctAnswers);\n\n                        let answerToChange = [];\n                        answers.find((answer) => {\n                          correctAnswers.forEach((correctAnswer) => {\n                            if (correctAnswer.question_id.includes(answer[1])) {\n                              answerToChange.push([answer[0], answer[1]]);\n                            } else if (\n                              answer[1] == \"on\" &&\n                              correctAnswer.question_id == answer[0]\n                            ) {\n                              answerToChange.push([answer[0], answer[1]]);\n                            } else if (answer[1] == \"FILL_WITH_TEXT\") {\n                              answerToChange.push([\n                                answer[0],\n                                correctAnswer.optional_data\n                                  .trim()\n                                  .replace(/\"/g, \"\"),\n                              ]);\n                            }\n                          });\n                        });\n\n                        return fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/ContentViewers/AssessmentViewer/ChangeQuestionAnswer`,\n                          {\n                            headers: {\n                              \"content-type\":\n                                \"application/x-www-form-urlencoded; charset=UTF-8\",\n                            },\n                            body: `learningObjectKey=${\n                              ActivityKeys.learningObjectKey\n                            }&resultKey=${\n                              ActivityKeys.resultKey\n                            }&enrollmentKey=${\n                              ActivityKeys.enrollmentKey\n                            }&sessionKey=${\n                              ActivityKeys.sessionKey\n                            }&language=0&questionKey=${id}${answerToChange\n                              .map((answer) => `&${answer[0]}=${answer[1]}`)\n                              .join(\"\")}`,\n                            method: \"POST\",\n                          }\n                        )\n                          .then((res) => res.json())\n                          .then((res) => {\n                            // console.log(res);\n                          });\n                      };\n\n                      try {\n                        const ltiLaunchResponse = await fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/Player/LTILaunch`,\n                          {\n                            headers: {\n                              \"content-type\":\n                                \"application/x-www-form-urlencoded\",\n                            },\n                            body: Object.keys(initialization.InitialLaunchData)\n                              .map(\n                                (key) =>\n                                  `${key}=${encodeURIComponent(\n                                    initialization.InitialLaunchData[key]\n                                  )}`\n                              )\n                              .join(\"&\"),\n                            method: \"POST\",\n                          }\n                        );\n\n                        const ltiLaunchHtml = await ltiLaunchResponse.text();\n                        const parser = new DOMParser();\n                        const html = parser.parseFromString(\n                          ltiLaunchHtml,\n                          \"text/html\"\n                        );\n                        const form = html.querySelector(\"form\");\n                        const formData = new FormData(form);\n                        const data = Object.fromEntries(formData);\n                        console.log(\"Data:\", data);\n\n                        const ltiLoginResponse = await fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/contentviewers/ltilogin`,\n                          {\n                            headers: {\n                              \"content-type\":\n                                \"application/x-www-form-urlencoded\",\n                            },\n                            body: Object.keys(data)\n                              .map(\n                                (key) =>\n                                  `${key}=${encodeURIComponent(data[key])}`\n                              )\n                              .join(\"&\"),\n                            method: \"POST\",\n                          }\n                        );\n\n                        const ltiLoginHtml = await ltiLoginResponse.text();\n                        const loginHtml = parser.parseFromString(\n                          ltiLoginHtml,\n                          \"text/html\"\n                        );\n                        const launchData =\n                          loginHtml.getElementById(\"launchdata\").value;\n                        console.log(\n                          \"Launch Data:\",\n                          `${launchData.substring(0, 10)}...`\n                        );\n\n                        const activityResponse = await fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/ContentViewers/AssessmentViewer/Activity`,\n                          {\n                            headers: {\n                              \"content-type\":\n                                \"application/x-www-form-urlencoded\",\n                            },\n                            body: `launchdata=${launchData}`,\n                            method: \"POST\",\n                          }\n                        );\n\n                        const activityHtml = await activityResponse.text();\n                        const parsedHtml = parser.parseFromString(\n                          activityHtml,\n                          \"text/html\"\n                        );\n\n                        const ids = Array.from(\n                          parsedHtml.querySelectorAll(\".question-buttons ol li\")\n                        )\n                          .slice(1, -1)\n                          .map((li) => li.id);\n\n                        console.log(\"Ids:\", ids);\n                        localStorage.setItem(\"ids\", JSON.stringify(ids));\n                        setExampleQuestions(ids);\n                        let parsedAnswers = [];\n                        // const keyFromGM = GM_getValue(\"user_key\", null);\n                        // console.log(\"Key From GM:\", keyFromGM);\n                        // const userId = getUserID() || \"null\";\n                        // console.log(\"User ID:\", userId);\n                        // const dbAnswers = await retrieveAnswersFromDB(\n                        //   ids,\n                        //   keyFromGM,\n                        //   userId\n                        // );\n                        // parsedAnswers = JSON.parse(dbAnswers.responseText);\n\n                        // parsedAnswers = parsedAnswers.map((x) => {\n                        //   if (x.question_id.startsWith(\"nq:\")) {\n                        //     x.question_id = x.question_id.slice(3);\n                        //   }\n                        //   return x;\n                        // });\n\n                        const ActivityKeys = {};\n                        parsedHtml\n                          .querySelectorAll(\"script\")\n                          .forEach((script) => {\n                            const scriptContent = script.textContent;\n                            if (scriptContent.includes(\"ActivityKeys\")) {\n                              const keys = scriptContent.match(\n                                /this\\.[a-zA-Z]+Key = \"(.*?)\";/g\n                              );\n                              keys.forEach((key) => {\n                                const keyName =\n                                  key.match(/this\\.([a-zA-Z]+Key)/)[1];\n                                const keyValue = key.match(/\"([^\"]+)\"/)[1];\n                                ActivityKeys[keyName] = keyValue;\n                              });\n                            }\n                          });\n\n                        console.log(\"Activity Keys:\", ActivityKeys);\n\n                        await Promise.all(\n                          ids.map((id) =>\n                            loadQuestion(id, parsedAnswers, ActivityKeys)\n                          )\n                        );\n\n                        await fetch(\n                          `https://${prefix}.core.learn.edgenuity.com/contentengineapi/api/assessment/SubmitAssessmentSimpleResponse?learningObjectKey=${ActivityKeys.learningObjectKey}&resultKey=${ActivityKeys.resultKey}&enrollmentKey=${ActivityKeys.enrollmentKey}&sessionKey=${ActivityKeys.sessionKey}&autoSubmitted=false&UpdateLastTime=true`\n                        );\n\n                        // window.location.reload();\n                      } catch (error) {\n                        console.error(\"Error in overlay click handler:\", error);\n                      }\n                    };\n                    clearInterval(waitForContainer);\n                  }\n                };\n\n                waitForContainer = setInterval(intervalFunc, 3000);\n              }\n\n              // Check if eNotes button exists and activity type starts with 'A'\n              const eNotesBtn = document.getElementById(\"aEnotes\");\n              if (\n                nextActivityData.NextObjectType?.startsWith(\"A\") &&\n                eNotesBtn\n              ) {\n                eNotesBtn.click();\n              }\n            } catch (error) {\n              console.error(\"Error fetching next activity data:\", error);\n            }\n          });\n        }\n      }\n    } catch (err) {\n      console.log(err.message);\n    }\n\n    initDraggableMenu((conf) => {\n      console.log(\"Config:\", conf);\n      config = conf;\n    });\n\n    const stageFrame = getStageFrame();\n    if (!stageFrame) return;\n\n    interval = setInterval(async () => {\n      if (stop) {\n        console.log(\"Stopping script because pastContent is detected.\");\n        clearInterval(interval);\n        return;\n      }\n\n      const examTitle = document.getElementById(\"activity-title\")?.innerText;\n      if (\n        !examTitle ||\n        document.getElementById(\"activity-status\")?.innerText === \"Complete\"\n      ) {\n        const journalText = stageFrame?.contentWindow.document\n          .getElementById(\"journal-ckeditor\")\n          ?.innerText?.trim();\n        const linkText = stageFrame?.contentWindow.document\n          .querySelector(\".OnlineContent-textArea-div\")\n          ?.innerText?.trim();\n\n        let pastContent = journalText || linkText;\n        console.log(\"Completed!!!!!!!\", pastContent);\n        if (pastContent) {\n          stop = true;\n          const scores = 77;\n          displayHumanElement(\"Human Score\", scores);\n          clearInterval(interval); // Stop execution\n        }\n        return;\n      }\n\n      if (!config.isActive) {\n        console.log(\"Start button not clicked yet.\");\n        return;\n      }\n\n      if (!stageFrame.contentWindow?.CKEDITOR) {\n        console.log(\"CKEditor not displayed!!!!!\");\n        return;\n      }\n\n      const links = stageFrame.contentDocument?.querySelectorAll(\n        \"#contentViewer #OnlineContent-Links .weblink\"\n      );\n      console.log(\"Links:\", links);\n\n      if (!links?.length) {\n        clearInterval(interval);\n        const text =\n          stageFrame.contentWindow.document.getElementById(\"journal-prompt\") ||\n          stageFrame.contentWindow.document.querySelector(\n            \".text-box-container\"\n          );\n        const editor =\n          stageFrame.contentWindow.CKEDITOR.instances[\"Answer\"] ||\n          stageFrame.contentWindow.CKEDITOR.instances[\"essay-Content\"];\n\n        try {\n          displayHumanElement(\"Human Score\");\n\n          // Create a promise that resolves after placeholder typing or immediately if disabled\n          const placeholderPromise =\n            config.placeholder === \"Enabled\"\n              ? new Promise((resolve) => {\n                  const placeholderText =\n                    \"This topic has many sides to consider, each offering unique insights required to understand.\";\n                  editor.setData(\"\"); // Clear any existing content\n                  createTypingAnimation(\n                    editor,\n                    placeholderText,\n                    { ...config, typingStyle: \"None\" },\n                    () => {\n                      // Then backspace it character by character\n                      let text = placeholderText;\n                      const backspaceInterval = setInterval(() => {\n                        if (text.length > 0) {\n                          text = text.slice(0, -1);\n                          editor.setData(text);\n                        } else {\n                          clearInterval(backspaceInterval);\n                          resolve();\n                        }\n                      }, 50); // Backspace every 50ms\n                    }\n                  );\n                })\n              : Promise.resolve();\n\n          // Wait for both placeholder typing and 5-second delay\n          const [res, _] = await Promise.all([\n            getAnswer(text?.innerText),\n            placeholderPromise,\n          ]);\n          console.log(res);\n          const answer = res.humanizedText;\n          console.log(\"Journal Answer:\", answer);\n\n          const response = await getHumanScore(answer);\n          const scores = response.humanScore;\n          console.log(\"Journal scores:\", scores);\n          displayHumanElement(\"Human Score\", scores);\n\n          createTypingAnimation(\n            editor,\n            answer,\n            {\n              ...config,\n              placeholder: \"Disabled\",\n            },\n            () => {\n              const submitBtn =\n                stageFrame.contentWindow.document.getElementById(\n                  \"SubmitButton\"\n                ) ||\n                stageFrame.contentWindow.document.querySelector(\n                  \".uibtn.uibtn-blue.uibtn-med.uibtn-alt\"\n                );\n              submitBtn.disabled = false;\n              submitWriting(submitBtn, text?.innerText, answer, scores);\n            }\n          );\n        } catch (error) {\n          console.error(\"Error:\", error);\n        }\n      } else {\n        console.log(\"Links length:\", links.length);\n        clearInterval(interval);\n        let answered = 0;\n        const needToAnswer = Object.keys(\n          stageFrame.contentWindow.CKEDITOR.instances\n        ).length;\n        console.log(\"needToAnswer:\", needToAnswer);\n\n        Object.keys(stageFrame.contentWindow.CKEDITOR.instances).forEach(\n          async (key) => {\n            const editor = stageFrame.contentWindow.CKEDITOR.instances[key];\n            const question = stageFrame.contentDocument\n              .getElementById(editor.name)\n              ?.parentElement?.querySelector(\"p\")?.innerText;\n            console.log(\"Question:\", question);\n\n            try {\n              // Create a promise for placeholder typing\n              const placeholderPromise =\n                config.placeholder === \"Enabled\"\n                  ? new Promise((resolve) => {\n                      const placeholderText =\n                        \"This topic has many sides to consider, each offering unique insights required to understand.\";\n                      editor.setData(\"\"); // Clear any existing content\n\n                      // First type the placeholder text\n                      createTypingAnimation(\n                        editor,\n                        placeholderText,\n                        { ...config, typingStyle: \"None\" },\n                        () => {\n                          // Then backspace it character by character\n                          let text = placeholderText;\n                          const backspaceInterval = setInterval(() => {\n                            if (text.length > 0) {\n                              text = text.slice(0, -1);\n                              editor.setData(text);\n                            } else {\n                              clearInterval(backspaceInterval);\n                              resolve();\n                            }\n                          }, 50); // Backspace every 50ms\n                        }\n                      );\n                    })\n                  : Promise.resolve();\n\n              let siteNumber = question\n                ?.match(/\\( *Site *[0-9]+ *\\)/g)\n                ?.join(\"\");\n              siteNumber = siteNumber?.replace(/\\( *Site *([0-9]+) *\\)/, \"$1\");\n\n              let answers = [],\n                questions = [];\n\n              const endpoint = siteNumber\n                ? links[parseInt(siteNumber) - 1]?.getAttribute(\"href\")\n                : links[0]?.getAttribute(\"href\");\n\n              const response = await fetch(endpoint);\n              const aRes = await response.text();\n              const parser = new DOMParser();\n              const doc = parser.parseFromString(aRes, \"text/html\");\n\n              doc.querySelector(\"footer\")?.remove();\n\n              const extractedText = [\"h1\", \"h2\", \"p\", \"li\"].reduce(\n                (acc, tag) => {\n                  Array.from(doc.getElementsByTagName(tag)).forEach(\n                    (element) => {\n                      acc += element.textContent?.trim() + \" \";\n                    }\n                  );\n                  return acc.trim();\n                },\n                \"\"\n              );\n\n              const examTitle =\n                document.getElementById(\"activity-title\")?.innerText;\n              if (\n                examTitle === \"Online Content\" &&\n                GM_getValue(\"settings\") &&\n                GM_getValue(\"settings\")[\"auto-writing-use\"] ===\n                  \"Keywords (100% Accuracy)\"\n              ) {\n                editor.setData(extractedText);\n                answered++;\n              } else {\n                displayHumanElement(\"Human Score\");\n\n                //   const answer = `The High Renaissance – my most favored period in art history. It's just the coolest thing, isn't it? The years from 15th to 17th century Italy Florence, Rome and Venice were home to some of the most iconic artists and works we see among us that inspires us till the date.\n                // The High Renaissance – my most favored period in art history. It's just the coolest thing, isn't it? The years from 15th to 17th century Italy Florence, Rome and Venice were home to some of the most iconic artists and works we see among us that inspires us till the date.\n                // The High Renaissance – my most favored period in art history. It's just the coolest thing, isn't it? The years from 15th to 17th century Italy Florence, Rome and Venice were home to some of the most iconic artists and works we see among us that inspires us till the date.\n                // `;\n\n                // Wait for both placeholder typing and 5-second delay\n                const [res, _] = await Promise.all([\n                  getAnswer(extractedText),\n                  placeholderPromise,\n                ]);\n\n                const answer = res.humanizedText;\n                console.log(\"Online Content Answer:\", answer);\n\n                const response = await getHumanScore(answer);\n                const scores = response.humanScore;\n                console.log(\"Online Content scores:\", scores);\n                displayHumanElement(\"Human Score\", scores);\n                answers.push(answer);\n                questions.push(question);\n\n                if (!config.isActive) {\n                  editor.setData(answer);\n                  answered++;\n                } else {\n                  createTypingAnimation(editor, answer, config, () => {\n                    answered++;\n                    if (answered === needToAnswer) {\n                      const submitBtn =\n                        stageFrame.contentWindow.document.getElementById(\n                          \"SubmitQuestionsButton\"\n                        );\n                      submitBtn.disabled = false;\n                      submitWriting(submitBtn, questions, answers, scores);\n                    }\n                  });\n                }\n              }\n            } catch (error) {\n              console.error(\"Error processing answer:\", error);\n            }\n          }\n        );\n      }\n    }, 1000);\n  }\n\n  activateAutomaticWriting();\n})();\n\nfunction getUserIdFromCookie() {\n  try {\n    const cookies = document.cookie.split(\";\");\n    const tokenCookie = cookies.find((cookie) =>\n      cookie.trim().startsWith(\"TokenData=\")\n    );\n\n    if (!tokenCookie) {\n      console.log(\"Token cookie not found\");\n      return null;\n    }\n\n    const tokenData = JSON.parse(decodeURIComponent(tokenCookie.split(\"=\")[1]));\n\n    if (!tokenData || !tokenData.UserId) {\n      console.log(\"User ID not found in token data\");\n      return null;\n    }\n\n    return tokenData.UserId;\n  } catch (error) {\n    console.error(\"Error getting user ID from cookie:\", error);\n    return null;\n  }\n}\n\nexport async function getCourses() {\n  const UserId = getUserIdFromCookie();\n  console.log(\"User ID:\", UserId);\n  if (!UserId) {\n    console.error(\"No user ID available\");\n    return;\n  }\n\n  try {\n    const response = await fetch(\n      `https://r22.core.learn.edgenuity.com/lmsapi/sle/api/enrollments/user/${UserId}`,\n      {\n        method: \"GET\",\n        credentials: \"include\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Error fetching courses:\", error);\n    return null;\n  }\n}\n\nexport function getStageFrame() {\n  return document.getElementById(\"stageFrame\")\n    ? document.getElementById(\"stageFrame\")\n    : null;\n}\n\nexport function getIFramePreview() {\n  const stageFrame = getStageFrame();\n  if (!stageFrame) return;\n  return stageFrame.contentDocument?.getElementById(\"iFramePreview\")\n    ? stageFrame.contentDocument?.getElementById(\"iFramePreview\")\n    : null;\n}\n","import { getCourses, getStageFrame, getIFramePreview } from \"./main\";\r\n\r\nlet exampleQuestions = [];\r\n\r\nexport function displayHumanElement(text, score = null) {\r\n  const stageFrame = document.getElementById(\"stageFrame\");\r\n  if (!stageFrame) return;\r\n\r\n  // Only create style and container if they don't exist\r\n  if (!document.querySelector(\"#custom-human-style\")) {\r\n    const rect = stageFrame.getBoundingClientRect();\r\n    let style = document.createElement(\"style\");\r\n    style.id = \"custom-human-style\";\r\n    style.innerHTML = `\r\n      .human-container {\r\n          position: absolute;\r\n          left: ${rect.right + 20 + window.scrollX}px;\r\n          top: ${rect.bottom - 120 + window.scrollY}px;\r\n          z-index: 1000;\r\n          display: flex;\r\n          flex-direction: column;\r\n          background: #141517;\r\n          padding: 10px;\r\n          border-radius: 12px;\r\n          font-size: 14px;\r\n          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), \r\n                     inset 0 1px rgba(255, 255, 255, 0.1);\r\n          width: 150px;\r\n          height: 100px;\r\n          text-align: center;\r\n      }\r\n      .human-title {\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: center;\r\n          gap: 4px;\r\n          color: white;\r\n      }\r\n      .human-circle-container {\r\n          position: relative;\r\n          width: 100px;\r\n          height: 60px;\r\n          margin: 0 auto;\r\n      }\r\n      .human-circle {\r\n          fill: transparent;\r\n          stroke: #006cff;\r\n          stroke-width: 10;\r\n          transition: stroke-dashoffset 1.5s ease-in-out;\r\n      }\r\n      .human-text {\r\n          font-size: 40px;\r\n          font-weight: bold;\r\n          fill: white;\r\n      }\r\n      @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n      }\r\n      .human-loading-spinner {\r\n          animation: spin 1s linear infinite;\r\n          transform-origin: center;\r\n      }`;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  let container = document.querySelector(\".human-container\");\r\n  if (!container) {\r\n    container = document.createElement(\"div\");\r\n    container.className = \"human-container\";\r\n    container.innerHTML = `\r\n      <div class=\"human-title\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-venetian-mask\">\r\n              <path d=\"M2 12a5 5 0 0 0 5 5 8 8 0 0 1 5 2 8 8 0 0 1 5-2 5 5 0 0 0 5-5V7h-5a8 8 0 0 0-5 2 8 8 0 0 0-5-2H2Z\"></path>\r\n              <path d=\"M6 11c1.5 0 3 .5 3 2-2 0-3 0-3-2Z\"></path>\r\n              <path d=\"M18 11c-1.5 0-3 .5-3 2 2 0 3 0 3-2Z\"></path>\r\n          </svg>\r\n          ${text}\r\n      </div>\r\n      <div class=\"human-circle-container\">\r\n          <svg width=\"100\" height=\"60\" viewBox=\"0 0 120 120\" class=\"human-loading-spinner\">\r\n              <circle cx=\"60\" cy=\"60\" r=\"48\" stroke=\"white\" stroke-width=\"8\" fill=\"none\" stroke-dasharray=\"75\" stroke-linecap=\"round\"/>\r\n          </svg>\r\n          <svg width=\"100\" height=\"60\" viewBox=\"0 0 120 120\" style=\"display: none;\" class=\"score-display\">\r\n              <circle class=\"human-circle\" cx=\"60\" cy=\"60\" r=\"48\" stroke-dasharray=\"301.59\" stroke-dashoffset=\"301.59\" transform=\"rotate(-90 60 60)\"/>\r\n              <text x=\"60\" y=\"60\" text-anchor=\"middle\" dominant-baseline=\"middle\" class=\"human-text\">0</text>\r\n          </svg>\r\n      </div>`;\r\n    document.body.appendChild(container);\r\n  }\r\n\r\n  // Add resize event listener to update position\r\n  const updatePosition = () => {\r\n    const rect = stageFrame.getBoundingClientRect();\r\n    container.style.left = `${rect.right + 20 + window.scrollX}px`;\r\n    container.style.top = `${rect.bottom - 100 + window.scrollY}px`;\r\n  };\r\n\r\n  // Add resize and scroll event listeners\r\n  window.addEventListener(\"resize\", updatePosition);\r\n  window.addEventListener(\"scroll\", updatePosition);\r\n\r\n  // Update display and animate when score is provided\r\n  if (score !== null) {\r\n    const loadingSpinner = container.querySelector(\".human-loading-spinner\");\r\n    const scoreDisplay = container.querySelector(\".score-display\");\r\n    const progressCircle = container.querySelector(\".human-circle\");\r\n    const scoreText = container.querySelector(\".human-text\");\r\n\r\n    loadingSpinner.style.display = \"none\";\r\n    scoreDisplay.style.display = \"block\";\r\n    scoreText.textContent = score;\r\n\r\n    // Animate the circle with a smooth transition\r\n    const circumference = 2 * Math.PI * 48; // 2πr where r=48\r\n    const offset = circumference - (score / 100) * circumference;\r\n    progressCircle.style.strokeDasharray = circumference;\r\n    progressCircle.style.strokeDashoffset = circumference;\r\n\r\n    // Trigger reflow to ensure transition works\r\n    progressCircle.getBoundingClientRect();\r\n    progressCircle.style.strokeDashoffset = offset;\r\n  }\r\n}\r\n/**\r\n * Creates and inserts a draggable menu into the DOM.\r\n * @param {Function} onStartCallback - Callback function for auto writing\r\n * @param {Function} onExamCallback - Callback function for exam automation\r\n */\r\nexport function initDraggableMenu(onStartCallback, onExamCallback) {\r\n  try {\r\n    // Check if document is ready\r\n    if (!document.body) {\r\n      console.error(\"Document body not ready\");\r\n      // Wait for DOM to be ready\r\n      document.addEventListener(\"DOMContentLoaded\", () => {\r\n        initDraggableMenu(onStartCallback, onExamCallback);\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Check for existing menu to prevent duplicates\r\n    const existingMenu = document.getElementById(\"autoWritingMenu\");\r\n    if (existingMenu) {\r\n      existingMenu.remove();\r\n    }\r\n\r\n    // 1. CREATE THE MENU CONTAINER\r\n    const menu = document.createElement(\"div\");\r\n    menu.id = \"autoWritingMenu\";\r\n    menu.innerHTML = `\r\n      <div class=\"menu-header\">\r\n        <div class=\"menu-title\">REVOLT | BETA</div>\r\n      </div>\r\n      <div class=\"menu-items\">\r\n      <div class=\"menu-item\" id=\"autoVideoItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"video-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <polygon points=\"23 7 16 12 23 17 23 7\"></polygon>\r\n                  <rect x=\"1\" y=\"5\" width=\"15\" height=\"14\" rx=\"2\" ry=\"2\"></rect>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto Video</span>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div class=\"menu-item\" id=\"autoInstructionItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"instruction-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\r\n                  <polyline points=\"14 2 14 8 20 8\"></polyline>\r\n                  <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\r\n                  <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\r\n                  <polyline points=\"10 9 9 9 8 9\"></polyline>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto Instruction</span>\r\n            </div>\r\n          </button>\r\n        </div>\r\n        <div class=\"menu-item\" id=\"autoAdvanceItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"rocket-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <path d=\"M4.5 16.5c-1.5 1.26-2 5-2 5s3.74-.5 5-2c.71-.84.7-2.13-.09-2.91a2.18 2.18 0 0 0-2.91-.09z\"></path>\r\n                  <path d=\"M12 15l-3-3a22 22 0 0 1 2-3.95A12.88 12.88 0 0 1 22 2c0 2.72-.78 7.5-6 11a22.35 22.35 0 0 1-4 2z\"></path>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto Advance</span>\r\n            </div>\r\n          </button>\r\n          <div class=\"menu-item-content\" style=\"display: none;\">\r\n            <div class=\"menu-body\">\r\n            <div class=\"menu-row\">\r\n            <label>Advance Type:</label>\r\n                <div class=\"typing-dropdown\" style=\"width: 100%;\">\r\n                  <button class=\"dropdown-btn\" id=\"autoAdvanceTypeBtn\">Select type</button>\r\n                  <div class=\"dropdown-content\">\r\n                    <div class=\"dropdown-option\" data-value=\"activity\">Activity Advance</div>\r\n                    <div class=\"dropdown-option\" data-value=\"unlocked\">Unlocked Advance</div>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n              </div>\r\n                  </div>\r\n                </div>\r\n        <div class=\"menu-item\" id=\"autoWritingItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"settings-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <circle cx=\"12\" cy=\"12\" r=\"3\"></circle>\r\n                  <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\"></path>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto writing</span>\r\n            </div>\r\n          </button>\r\n          <div class=\"menu-item-content\" style=\"display: none;\">\r\n            <div class=\"menu-body\">\r\n              <div class=\"menu-row\">\r\n                <label>Submit delay:</label>\r\n                <div class=\"input-group\" style=\"width: 100%;\">\r\n                  <div class=\"input-with-unit\">\r\n                    <input type=\"number\" min=\"0\" step=\"1\" value=\"0\" id=\"submitDelay1\">\r\n                    <span class=\"input-unit\">sec</span>\r\n                  </div>\r\n                  <span>-</span>\r\n                  <div class=\"input-with-unit\">\r\n                    <input type=\"number\" min=\"0\" step=\"1\" value=\"0\" id=\"submitDelay2\">\r\n                    <span class=\"input-unit\">sec</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"menu-row\">\r\n                <label>Answer delay:</label>\r\n                <div class=\"typing-dropdown answer-delay-dropdown\" style=\"width: 100% !important;\">\r\n                  <button class=\"dropdown-btn\" id=\"answerDelayBtn\">None</button>\r\n                  <div class=\"dropdown-content\">\r\n                    <div class=\"dropdown-option\" data-value=\"none\">None</div>\r\n                    <div class=\"dropdown-option\" data-value=\"custom\">Custom</div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"input-with-unit custom-delay-input\" style=\"display: none; width: 60px;\">\r\n                  <input type=\"number\" min=\"0\" step=\"1\" value=\"0\" id=\"answerDelay\" style=\"width: 60px !important;\">\r\n                  <span class=\"input-unit\">wpm</span>\r\n                </div>\r\n              </div>\r\n              <div class=\"menu-row\">\r\n                <label>Typing Style:</label>\r\n                <div class=\"typing-dropdown\">\r\n                  <button class=\"dropdown-btn\" id=\"typingStyleBtn\">None</button>\r\n                  <div class=\"dropdown-content\">\r\n                    <div class=\"dropdown-option\" data-value=\"default\">None</div>\r\n                    <div class=\"dropdown-option\" data-value=\"level1\">Level 1</div>\r\n                    <div class=\"dropdown-option\" data-value=\"level2\">Level 2</div>\r\n                    <div class=\"dropdown-option\" data-value=\"level3\">Level 3</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"menu-row\">\r\n                <label>Placeholder:</label>\r\n                <div class=\"typing-dropdown\">\r\n                  <button class=\"dropdown-btn\" id=\"placeholderBtn\">None</button>\r\n                  <div class=\"dropdown-content\">\r\n                    <div class=\"dropdown-option\" data-value=\"default\">None</div>\r\n                    <div class=\"dropdown-option\" data-value=\"enabled\">Enabled</div>\r\n                    <div class=\"dropdown-option\" data-value=\"disabled\">Disabled</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"custom-placeholder-input\" style=\"display: none;\">\r\n                <textarea \r\n                  id=\"placeholderText\" \r\n                  placeholder=\"Enter custom placeholder text...\"\r\n                  rows=\"3\"\r\n                >This topic has many sides to consider, each offering unique insights required to understand.</textarea>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"menu-item\" id=\"examUnlockerItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"unlock-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect>\r\n                  <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto Exam</span>\r\n            </div>\r\n          </button>\r\n          <div class=\"menu-item-content\" style=\"display: none;\">\r\n            <div class=\"menu-body\">\r\n              <div class=\"menu-row\">\r\n                <label>Exam Info:</label>\r\n                <div class=\"typing-dropdown\">\r\n                  <button class=\"dropdown-btn\" id=\"examInfoBtn\">Disabled</button>\r\n                  <div class=\"dropdown-content\">\r\n                    <div class=\"dropdown-option\" data-value=\"enabled\">Enabled</div>\r\n                    <div class=\"dropdown-option\" data-value=\"disabled\">Disabled</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"menu-item\" id=\"autoVocabItem\">\r\n          <button class=\"menu-item-button\">\r\n            <div class=\"button-content\">\r\n              <div class=\"wordbook-icon\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                  <path d=\"M4 19.5A2.5 2.5 0 0 1 6.5 17H20\"></path>\r\n                  <path d=\"M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z\"></path>\r\n                </svg>\r\n              </div>\r\n              <span class=\"button-text\">Auto Vocabulary</span>\r\n            </div>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Create and append styles first\r\n    const style = document.createElement(\"style\");\r\n    style.id = \"autoWritingMenuStyle\"; // Add ID to prevent duplicate styles\r\n    style.textContent = `\r\n      #autoWritingMenu {\r\n        position: fixed;\r\n        top: 100px;\r\n        left: 100px;\r\n        width: 320px;\r\n        background: #141517;\r\n        border-radius: 12px;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        z-index: 999999;\r\n        cursor: default;\r\n        color: white;\r\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\r\n      }\r\n\r\n      .menu-header {\r\n        background: #222324;\r\n        padding: 15px 20px;\r\n        user-select: none;\r\n        border-radius: 12px 12px 0 0;\r\n        cursor: grab;\r\n      }\r\n\r\n      .menu-title {\r\n        color: white;\r\n        font-size: 24px;\r\n        font-weight: 800;\r\n      }\r\n\r\n      .menu-items {\r\n        padding: 10px;\r\n      }\r\n\r\n      .menu-item {\r\n        margin-bottom: 8px;\r\n      }\r\n\r\n      .menu-item-button {\r\n        width: 100%;\r\n        padding: 10px 15px;\r\n        background: #242526;\r\n        border: none;\r\n        border-radius: 6px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        text-align: left;\r\n        cursor: pointer;\r\n        transition: all 0.3s ease;\r\n        position: relative;\r\n        overflow: hidden;\r\n      }\r\n\r\n      .menu-item-button:hover {\r\n        background: #2a2b2c;\r\n      }\r\n\r\n      .menu-item-button.active {\r\n        background: #006cff;\r\n        animation: pulse 2s infinite;\r\n      }\r\n\r\n      .menu-item-button.writing {\r\n        background: #006cff;\r\n        animation: writing-pulse 2s infinite;\r\n      }\r\n\r\n      .menu-item-button.writing::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: -100%;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: linear-gradient(\r\n          90deg,\r\n          transparent,\r\n          rgba(255, 255, 255, 0.2),\r\n          transparent\r\n        );\r\n        animation: wave 2s linear infinite;\r\n      }\r\n\r\n      @keyframes pulse {\r\n        0% {\r\n          box-shadow: 0 0 0 0 rgba(0, 108, 255, 0.4);\r\n        }\r\n        70% {\r\n          box-shadow: 0 0 0 10px rgba(0, 108, 255, 0);\r\n        }\r\n        100% {\r\n          box-shadow: 0 0 0 0 rgba(0, 108, 255, 0);\r\n        }\r\n      }\r\n\r\n      @keyframes writing-pulse {\r\n        0% {\r\n          box-shadow: 0 0 5px rgba(0, 108, 255, 0.5),\r\n                      0 0 10px rgba(0, 108, 255, 0.3);\r\n        }\r\n        50% {\r\n          box-shadow: 0 0 10px rgba(0, 108, 255, 0.7),\r\n                      0 0 20px rgba(0, 108, 255, 0.5);\r\n        }\r\n        100% {\r\n          box-shadow: 0 0 5px rgba(0, 108, 255, 0.5),\r\n                      0 0 10px rgba(0, 108, 255, 0.3);\r\n        }\r\n      }\r\n\r\n      @keyframes wave {\r\n        0% {\r\n          left: -100%;\r\n        }\r\n        100% {\r\n          left: 100%;\r\n        }\r\n      }\r\n\r\n      .menu-body {\r\n        padding: 15px;\r\n        background: #1a1b1c;\r\n        border-radius: 6px;\r\n        margin-top: 8px;\r\n      }\r\n\r\n      .menu-row {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n        margin-bottom: 12px;\r\n        height: 32px;\r\n      }\r\n\r\n      .menu-row label {\r\n        min-width: 100px;\r\n        color: white;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        opacity: 0.9;\r\n      }\r\n\r\n      .input-group {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n      }\r\n\r\n      .input-with-unit {\r\n        position: relative;\r\n        width: 60px;\r\n      }\r\n\r\n      input[type=\"number\"] {\r\n        width: 100%;\r\n        height: 28px;\r\n        padding: 0 25px 0 8px;\r\n        background: #242526;\r\n        border: none;\r\n        border-radius: 4px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        -moz-appearance: textfield;\r\n      }\r\n\r\n      input[type=\"number\"]::-webkit-outer-spin-button,\r\n      input[type=\"number\"]::-webkit-inner-spin-button {\r\n        -webkit-appearance: none;\r\n        margin: 0;\r\n      }\r\n\r\n      .input-unit {\r\n        position: absolute;\r\n        right: 8px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n        color: rgba(255, 255, 255, 0.6);\r\n        font-size: 10px;\r\n        pointer-events: none;\r\n      }\r\n\r\n      .typing-dropdown {\r\n        position: relative;\r\n        width: 100%;\r\n      }\r\n\r\n      .dropdown-btn {\r\n        width: 100%;\r\n        height: 28px;\r\n        padding: 0 10px;\r\n        background: #242526;\r\n        border: none;\r\n        border-radius: 4px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        text-align: left;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n      }\r\n\r\n      .dropdown-btn::after {\r\n        content: '▼';\r\n        font-size: 10px;\r\n        opacity: 0.7;\r\n      }\r\n\r\n      .dropdown-content {\r\n        position: absolute;\r\n        top: 100%;\r\n        left: 0;\r\n        width: 100%;\r\n        background: #242526;\r\n        border-radius: 4px;\r\n        z-index: 1;\r\n        margin-top: 4px;\r\n        display: none;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3),\r\n                    0 0 0 1px rgba(255, 255, 255, 0.05);\r\n        border: 1px solid rgba(255, 255, 255, 0.1);\r\n        overflow: hidden;\r\n      }\r\n\r\n      .dropdown-option {\r\n        text-align: left;\r\n        padding: 8px 10px;\r\n        color: white;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease;\r\n        border-bottom: 1px solid rgba(255, 255, 255, 0.05);\r\n      }\r\n\r\n      .dropdown-option:last-child {\r\n        border-bottom: none;\r\n      }\r\n\r\n      .dropdown-option:hover {\r\n        background: #2a2b2c;\r\n        padding-left: 15px;\r\n      }\r\n\r\n      .typing-dropdown.active .dropdown-content {\r\n        display: block;\r\n      }\r\n\r\n      .typing-dropdown.active .dropdown-content1 {\r\n        height: 380px;\r\n        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3),\r\n                    0 0 0 1px rgba(255, 255, 255, 0.05);\r\n        border: 1px solid rgba(255, 255, 255, 0.1);\r\n      }\r\n\r\n      .custom-delay-input {\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .button-content {\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 10px;\r\n        width: 100%;\r\n      }\r\n\r\n      .settings-icon,\r\n      .unlock-icon,\r\n      .rocket-icon,\r\n      .video-icon,\r\n      .instruction-icon {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 24px;\r\n        height: 24px;\r\n        border-radius: 4px;\r\n        transition: all 0.2s ease;\r\n        color: rgba(255, 255, 255, 0.7);\r\n      }\r\n\r\n      .settings-icon:hover,\r\n      .unlock-icon:hover,\r\n      .rocket-icon:hover,\r\n      .video-icon:hover,\r\n      .instruction-icon:hover {\r\n        background: rgba(255, 255, 255, 0.1);\r\n        color: white;\r\n      }\r\n\r\n      .button-text {\r\n        flex: 1;\r\n      }\r\n\r\n      /* Editor Writing Animation */\r\n      .cke_editable.writing-active {\r\n        position: relative;\r\n        border: 1px solid rgba(0, 108, 255, 0.3) !important;\r\n        box-shadow: 0 0 10px rgba(0, 108, 255, 0.2) !important;\r\n      }\r\n\r\n      .cke_editable.writing-active::after {\r\n        content: '';\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 2px;\r\n        background: linear-gradient(90deg, #006cff, transparent);\r\n        animation: writing 2s ease-out infinite;\r\n      }\r\n\r\n      @keyframes writing {\r\n        0% {\r\n          width: 0;\r\n          opacity: 1;\r\n        }\r\n        50% {\r\n          width: 100%;\r\n          opacity: 1;\r\n        }\r\n        100% {\r\n          width: 100%;\r\n          opacity: 0;\r\n        }\r\n      }\r\n\r\n      .custom-placeholder-input {\r\n        margin-top: 8px;\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .custom-placeholder-input textarea {\r\n        width: 100%;\r\n        padding: 8px 12px;\r\n        background: #242526;\r\n        border: 1px solid rgba(255, 255, 255, 0.1);\r\n        border-radius: 4px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        resize: vertical;\r\n        min-height: 80px;\r\n        line-height: 1.5;\r\n      }\r\n\r\n      .custom-placeholder-input textarea:focus {\r\n        outline: none;\r\n        border-color: rgba(0, 108, 255, 0.5);\r\n        box-shadow: 0 0 0 2px rgba(0, 108, 255, 0.2);\r\n      }\r\n\r\n      #examUnlockerItem .menu-item-button.active {\r\n        background: #006cff;\r\n        animation: pulse 2s infinite;\r\n      }\r\n\r\n      #examUnlockerItem .menu-body {\r\n        padding: 15px;\r\n        background: #1a1b1c;\r\n        border-radius: 6px;\r\n        margin-top: 8px;\r\n      }\r\n\r\n      .exam-panel-header {\r\n        cursor: grab;\r\n        user-select: none;\r\n        border-radius: 12px 12px 0 0;\r\n      }\r\n\r\n      .exam-panel-header:active {\r\n        cursor: grabbing;\r\n      }\r\n\r\n      .loading-overlay {\r\n        display: none;\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: rgba(0, 0, 0, 0.7);\r\n        z-index: 1000000;\r\n        opacity: 0;\r\n        transition: opacity 0.3s ease;\r\n      }\r\n\r\n      .loading-overlay.show {\r\n        opacity: 1;\r\n      }\r\n\r\n      .loading-spinner-container {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        text-align: center;\r\n      }\r\n\r\n      .loading-spinner {\r\n        width: 40px;\r\n        height: 40px;\r\n        border: 3px solid rgba(255, 255, 255, 0.1);\r\n        border-radius: 50%;\r\n        border-top-color: #006cff;\r\n        animation: spin 1s ease-in-out infinite;\r\n      }\r\n\r\n      .loading-text {\r\n        color: white;\r\n        margin-top: 16px;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 14px;\r\n        font-weight: 500;\r\n      }\r\n\r\n      @keyframes spin {\r\n        to { transform: rotate(360deg); }\r\n      }\r\n    `;\r\n\r\n    // Check if styles already exist\r\n    if (!document.getElementById(\"autoWritingMenuStyle\")) {\r\n      document.head.appendChild(style);\r\n    }\r\n\r\n    // Now append the menu\r\n    document.body.appendChild(menu);\r\n\r\n    // 2. ADD EVENT LISTENERS\r\n    const autoWritingItem = document.getElementById(\"autoWritingItem\");\r\n    const autoWritingButton =\r\n      autoWritingItem.querySelector(\".menu-item-button\");\r\n    const settingsIcon = autoWritingItem.querySelector(\".settings-icon\");\r\n    const autoWritingContent =\r\n      autoWritingItem.querySelector(\".menu-item-content\");\r\n\r\n    // Toggle menu content\r\n    settingsIcon.addEventListener(\"click\", () => {\r\n      const isExpanded = autoWritingContent.style.display !== \"none\";\r\n      autoWritingContent.style.display = isExpanded ? \"none\" : \"block\";\r\n      autoWritingButton.style.background = isExpanded ? \"#242526\" : \"#2a2b2c\";\r\n    });\r\n\r\n    // Button click handler (excluding settings icon) - start auto writing\r\n    autoWritingButton.addEventListener(\"click\", (e) => {\r\n      if (e.target.closest(\".settings-icon\")) {\r\n        return;\r\n      }\r\n\r\n      const submitDelay1 = document.querySelector(\"#submitDelay1\");\r\n      const submitDelay2 = document.querySelector(\"#submitDelay2\");\r\n      const answerDelay = document.querySelector(\"#answerDelay\");\r\n      const answerDelayBtn = document.querySelector(\"#answerDelayBtn\");\r\n      const typingStyleBtn = document.querySelector(\"#typingStyleBtn\");\r\n\r\n      // Validate configuration\r\n      if (\r\n        (submitDelay1.value === \"0\" && submitDelay2.value === \"0\") ||\r\n        parseInt(submitDelay1.value) > parseInt(submitDelay2.value)\r\n      ) {\r\n        alert(\"Error at submit delay\");\r\n        return;\r\n      }\r\n\r\n      if (\r\n        answerDelay.value === \"0\" &&\r\n        answerDelayBtn.textContent.trim() === \"Custom\"\r\n      ) {\r\n        alert(\"Error at answer delay\");\r\n        return;\r\n      }\r\n\r\n      // Update button state\r\n      const isActive = !autoWritingButton.classList.contains(\"active\");\r\n      updateAutoWritingState(isActive ? \"active\" : \"idle\");\r\n\r\n      // Collect configuration data\r\n      const config = {\r\n        isActive: autoWritingButton.classList.contains(\"active\"),\r\n        submitDelay: {\r\n          min: parseInt(submitDelay1.value) || 0,\r\n          max: parseInt(submitDelay2.value) || 0,\r\n        },\r\n        answerDelay: parseInt(answerDelay.value) || 0,\r\n        typingStyle: typingStyleBtn.textContent.trim(),\r\n        placeholder: document\r\n          .querySelector(\"#placeholderBtn\")\r\n          .textContent.trim(),\r\n        placeholderText:\r\n          document.querySelector(\"#placeholderBtn\").textContent.trim() ===\r\n          \"Enabled\"\r\n            ? document.querySelector(\"#placeholderText\").value.trim()\r\n            : \"\",\r\n      };\r\n\r\n      // Call the callback with the configuration\r\n      if (typeof onStartCallback === \"function\") {\r\n        onStartCallback(config);\r\n      }\r\n    });\r\n\r\n    // Add dropdown functionality\r\n    const dropdowns = menu.querySelectorAll(\".typing-dropdown\");\r\n    dropdowns.forEach((dropdown) => {\r\n      const btn = dropdown.querySelector(\".dropdown-btn\");\r\n      const options = dropdown.querySelectorAll(\".dropdown-option\");\r\n\r\n      btn.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation();\r\n        dropdowns.forEach((d) => {\r\n          if (d !== dropdown) d.classList.remove(\"active\");\r\n        });\r\n        dropdown.classList.toggle(\"active\");\r\n      });\r\n\r\n      options.forEach((option) => {\r\n        option.addEventListener(\"click\", (e) => {\r\n          e.stopPropagation();\r\n          const selectedValue = option.getAttribute(\"data-value\");\r\n          btn.textContent = option.textContent;\r\n          dropdown.classList.remove(\"active\");\r\n\r\n          if (dropdown.classList.contains(\"answer-delay-dropdown\")) {\r\n            const customDelayInput = menu.querySelector(\".custom-delay-input\");\r\n            if (selectedValue === \"custom\") {\r\n              customDelayInput.style.display = \"block\";\r\n            } else {\r\n              customDelayInput.style.display = \"none\";\r\n              document.querySelector(\"#answerDelay\").value = \"0\";\r\n            }\r\n          }\r\n\r\n          // Add this block to handle placeholder dropdown\r\n          if (btn.id === \"placeholderBtn\") {\r\n            const customPlaceholderInput = menu.querySelector(\r\n              \".custom-placeholder-input\"\r\n            );\r\n            if (option.textContent === \"Enabled\") {\r\n              customPlaceholderInput.style.display = \"block\";\r\n            } else {\r\n              customPlaceholderInput.style.display = \"none\";\r\n            }\r\n          }\r\n\r\n          // Add this block to handle exam info dropdown\r\n          if (btn.id === \"examInfoBtn\") {\r\n            if (option.textContent === \"Enabled\") {\r\n              // Example questions array - replace with actual API data\r\n              displayExamPanel(exampleQuestions);\r\n            } else {\r\n              const panel = document.querySelector(\"#examInfoPanel\");\r\n              if (panel) panel.remove();\r\n            }\r\n\r\n            // Update exam configuration\r\n            const config = {\r\n              isActive: examUnlockerButton.classList.contains(\"active\"),\r\n              examInfo: option.textContent,\r\n            };\r\n\r\n            // Call the callback with the configuration\r\n            if (typeof onExamCallback === \"function\") {\r\n              onExamCallback(config);\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    // Close dropdowns when clicking outside\r\n    document.addEventListener(\"click\", () => {\r\n      dropdowns.forEach((dropdown) => dropdown.classList.remove(\"active\"));\r\n    });\r\n\r\n    // Update the Auto Advance button click handler\r\n    const autoAdvanceItem = document.getElementById(\"autoAdvanceItem\");\r\n    const autoAdvanceButton =\r\n      autoAdvanceItem?.querySelector(\".menu-item-button\");\r\n    const rocketIcon = autoAdvanceItem.querySelector(\".rocket-icon\");\r\n    const autoAdvanceContent =\r\n      autoAdvanceItem.querySelector(\".menu-item-content\");\r\n\r\n    // Toggle menu content when clicking the rocket icon\r\n    rocketIcon.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      const isExpanded = autoAdvanceContent.style.display !== \"none\";\r\n      autoAdvanceContent.style.display = isExpanded ? \"none\" : \"block\";\r\n      autoAdvanceButton.style.background = isExpanded ? \"#242526\" : \"#2a2b2c\";\r\n      // // Toggle dropdown content when clicking the dropdown button\r\n      // const autoAdvanceTypeBtn = document.querySelector(\"#autoAdvanceTypeBtn\");\r\n      // const dropdownContent = autoAdvanceTypeBtn.nextElementSibling;\r\n\r\n      // autoAdvanceTypeBtn.addEventListener(\"click\", (e) => {\r\n      //   e.stopPropagation();\r\n      //   const isActive = dropdownContent.classList.contains(\"active\");\r\n\r\n      //   console.log(\"isActive\", isActive);\r\n\r\n      //   // Close all other dropdowns first\r\n      //   document.querySelectorAll(\".dropdown-content\").forEach((content) => {\r\n      //     content.classList.remove(\"active\");\r\n      //   });\r\n\r\n      //   // Toggle this dropdown\r\n      //   if (isActive) {\r\n      //     dropdownContent.classList.remove(\"active\");\r\n      //   } else {\r\n      //     dropdownContent.classList.add(\"active\");\r\n      //   }\r\n      // });\r\n    });\r\n\r\n    // Handle main button click (excluding rocket icon)\r\n    autoAdvanceButton.addEventListener(\"click\", async (e) => {\r\n      if (e.target.closest(\".rocket-icon\")) {\r\n        return;\r\n      }\r\n\r\n      autoAdvanceButton.classList.add(\"active\");\r\n\r\n      const selectedType = document\r\n        .querySelector(\"#autoAdvanceTypeBtn\")\r\n        .textContent.trim();\r\n\r\n      if (selectedType === \"Select type\") {\r\n        alert(\"Please select an advance type first\");\r\n        return;\r\n      }\r\n\r\n      // Set tamper value advanceClick as true\r\n      GM_setValue(\"advanceClick\", 1);\r\n      GM_setValue(\"advanceType\", selectedType);\r\n\r\n      // Create and show loading overlay\r\n      const loadingOverlay = document.createElement(\"div\");\r\n      loadingOverlay.className = \"loading-overlay\";\r\n      loadingOverlay.innerHTML = `\r\n          <div class=\"loading-spinner-container\">\r\n            <div class=\"loading-spinner\"></div>\r\n          </div>\r\n        `;\r\n      document.body.appendChild(loadingOverlay);\r\n\r\n      // Show loading overlay with animation\r\n      loadingOverlay.style.display = \"block\";\r\n      loadingOverlay.offsetHeight; // Force reflow\r\n      loadingOverlay.classList.add(\"show\");\r\n\r\n      try {\r\n        // Fetch courses\r\n        const courses = await getCourses();\r\n\r\n        // Hide loading overlay\r\n        loadingOverlay.classList.remove(\"show\");\r\n        setTimeout(() => {\r\n          loadingOverlay.remove();\r\n        }, 300);\r\n\r\n        // Create and show modal\r\n        const modal = await createAutoAdvanceModal(courses);\r\n        if (modal.show) {\r\n          modal.show();\r\n        } else {\r\n          modal.classList.add(\"show\");\r\n          modal.style.display = \"block\";\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error loading courses:\", error);\r\n\r\n        // Hide loading overlay and show error message\r\n        loadingOverlay.classList.remove(\"show\");\r\n        setTimeout(() => {\r\n          loadingOverlay.remove();\r\n          alert(\"Failed to load courses. Please try again.\");\r\n        }, 300);\r\n      }\r\n    });\r\n\r\n    // Add dropdown functionality for auto advance type\r\n    const autoAdvanceDropdown =\r\n      autoAdvanceItem.querySelector(\".typing-dropdown\");\r\n    const autoAdvanceBtn = autoAdvanceDropdown.querySelector(\".dropdown-btn\");\r\n    const autoAdvanceOptions =\r\n      autoAdvanceDropdown.querySelectorAll(\".dropdown-option\");\r\n\r\n    autoAdvanceBtn.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      // console.log(autoAdvanceDropdown.classList, \"autoAdvanceBtn clicked ? \");\r\n\r\n      // autoAdvanceDropdown.classList.toggle(\"active\");\r\n      // if (autoAdvanceDropdown.classList.contains(\"active\")) {\r\n      //   autoAdvanceDropdown.classList.remove(\"active\");\r\n      // } else {\r\n      //   autoAdvanceDropdown.classList.add(\"active\");\r\n      // }\r\n    });\r\n\r\n    autoAdvanceOptions.forEach((option) => {\r\n      option.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation();\r\n        const selectedValue = option.getAttribute(\"data-value\");\r\n        autoAdvanceBtn.textContent =\r\n          selectedValue === \"activity\"\r\n            ? \"Activity Advance\"\r\n            : \"Unlocked Advance\";\r\n        option.classList.remove(\"active\");\r\n      });\r\n    });\r\n\r\n    // Update the Auto Vocabulary button click handler\r\n    const autoVocabItem = document.getElementById(\"autoVocabItem\");\r\n    const autoVocabButton = autoVocabItem?.querySelector(\".menu-item-button\");\r\n\r\n    let nextWord = true;\r\n    const stageFrame = getStageFrame();\r\n    autoVocabButton.addEventListener(\"click\", async (e) => {\r\n      // Add wave animation effect\r\n      try {\r\n        if (!stageFrame?.contentWindow) {\r\n          alert(\"Content Window not found\");\r\n          return;\r\n        }\r\n        autoVocabButton.classList.add(\"active\", \"writing\");\r\n        while (nextWord) {\r\n          const contentWindow = stageFrame?.contentWindow;\r\n          let { viewModel, API, ActivityKeys, initialData } = contentWindow;\r\n          const word = viewModel?.currentWord();\r\n          const wordText = word?.word();\r\n          console.log(\"Current Word:\", wordText);\r\n          const wordTextbox =\r\n            stageFrame?.contentDocument?.querySelector(\".word-textbox\");\r\n          if (wordTextbox) {\r\n            wordTextbox.value = wordText;\r\n\r\n            const keyupEvent = new Event(\"keyup\");\r\n            wordTextbox.dispatchEvent(keyupEvent);\r\n\r\n            const url =\r\n              API.E2020.addresses.ContentEngineViewersPath +\r\n              \"Vocab/UpdateAttempt?attemptKey=\" +\r\n              ActivityKeys.resultKey +\r\n              \"&completedWordKey=\" +\r\n              word.key +\r\n              \"&enrollmentKey=\" +\r\n              ActivityKeys.enrollmentKey +\r\n              \"&version=\" +\r\n              ActivityKeys.version;\r\n\r\n            const response = await fetch(url, {\r\n              method: \"POST\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json; charset=utf-8\",\r\n              },\r\n            });\r\n            const result = await response.json();\r\n            console.log(\"Result:\", result);\r\n\r\n            viewModel.currentWord().complete(true);\r\n            console.log(\"Words:\", viewModel.words());\r\n            const currentWordIndex = viewModel.words().indexOf(word);\r\n            nextWord = viewModel.words()[currentWordIndex + 1];\r\n            if (nextWord) {\r\n              console.log(\"Next Word Rank:\", nextWord.rank());\r\n              viewModel.nextAvailableWord(nextWord);\r\n              viewModel.currentWord().nextButton().state(true);\r\n              viewModel.selectWord(nextWord.rank());\r\n            }\r\n\r\n            console.log(\"Complete:\", viewModel.complete(), result.complete);\r\n            if (viewModel.complete() || result.complete) {\r\n              initialData.Complete = true;\r\n\r\n              stageFrame.src =\r\n                API.E2020.addresses.ContentEngineViewersPath +\r\n                \"LTILogin/Complete?enrollmentKey=\" +\r\n                ActivityKeys.enrollmentKey;\r\n            }\r\n          } else {\r\n            console.error(\"Could not find word textbox element\");\r\n          }\r\n        }\r\n      } finally {\r\n        autoVocabButton.classList.remove(\"active\", \"writing\");\r\n      }\r\n    });\r\n\r\n    // Update the Auto Video button click handler\r\n    const autoVideoItem = document.getElementById(\"autoVideoItem\");\r\n    const autoVideoButton = autoVideoItem?.querySelector(\".menu-item-button\");\r\n\r\n    autoVideoButton.addEventListener(\"click\", async (e) => {\r\n      autoVideoButton.classList.add(\"active\", \"writing\");\r\n      const autoVideoInterval = setInterval(async () => {\r\n        try {\r\n          if (!stageFrame?.contentWindow) {\r\n            alert(\"Content Window not found\");\r\n            return;\r\n          }\r\n          const contentWindow = stageFrame?.contentWindow;\r\n          let { API } = contentWindow;\r\n\r\n          // Find the activity title element\r\n          const activityTitleElement =\r\n            document.getElementById(\"activity-title\");\r\n          const activityTitle = activityTitleElement\r\n            ? activityTitleElement.textContent.trim().toLowerCase()\r\n            : null;\r\n\r\n          const videoElement =\r\n            stageFrame.contentDocument.getElementById(\"home_video_js\");\r\n\r\n          let duration = videoElement?.duration || null;\r\n          let currentTime = videoElement?.currentTime || null;\r\n\r\n          const isCompleted = API.Frame.isComplete();\r\n\r\n          const questionsFrame =\r\n            stageFrame?.contentDocument?.getElementById(\"iFramePreview\");\r\n          const isAVideo = questionsFrame?.style.display === \"none\";\r\n\r\n          console.log(\"isAVideo\", isAVideo);\r\n\r\n          if (!isCompleted) {\r\n            if (\r\n              activityTitle &&\r\n              [\r\n                \"instruction\",\r\n                \"warmup\",\r\n                \"summary\",\r\n                \"lecture\",\r\n                \"lablecture\",\r\n                \"directinstruction\",\r\n              ].includes(activityTitle)\r\n            ) {\r\n              if (isAVideo) {\r\n                if (duration - currentTime < 2 && duration != 0) {\r\n                  nextFrame(stageFrame.contentWindow.API);\r\n                  return;\r\n                } else {\r\n                  return;\r\n                }\r\n              }\r\n\r\n              const iframePreview = getIFramePreview();\r\n              // console.log(\"iframePreview\", iframePreview);\r\n              if (iframePreview) {\r\n                const questions =\r\n                  iframePreview.contentDocument?.querySelectorAll(\r\n                    \"div[fstack]\"\r\n                  );\r\n\r\n                console.log(\"Questions:\", questions);\r\n\r\n                questions.forEach((question) => {\r\n                  setTimeout(() => {\r\n                    let clickedAmount = 0;\r\n                    let input = question.querySelectorAll(\"input\");\r\n                    console.log(\"Input:\", input);\r\n                    if (input && input.length > 0) {\r\n                      Array.from(input).forEach((input) =>\r\n                        Math.random() > 0.5 ? input.click() : null\r\n                      ); // Click a random input\r\n                      clickedAmount++;\r\n                    }\r\n\r\n                    let select = question.querySelector(\"select\");\r\n                    // We don't need to do anything here, since edgenuity doesn't require you to select anything in these types of questions.\r\n                    if (select) clickedAmount++;\r\n\r\n                    let ifFW = question.querySelector(\"iframe\");\r\n                    let hintButton =\r\n                      ifFW?.contentDocument?.getElementById(\"onlyButton\");\r\n                    if (hintButton) {\r\n                      setInterval(() => {\r\n                        hintButton.click();\r\n                        clickedAmount++;\r\n                      }, 250);\r\n                    }\r\n\r\n                    const doneButton =\r\n                      question.querySelectorAll(\"div[title='done']\");\r\n                    if (\r\n                      doneButton &&\r\n                      doneButton.length > 0 &&\r\n                      clickedAmount > 0\r\n                    ) {\r\n                      Array.from(doneButton).forEach((button) =>\r\n                        button.click()\r\n                      );\r\n                      nextFrame(stageFrame);\r\n                    }\r\n                  }, 500);\r\n                });\r\n              }\r\n            }\r\n          } else {\r\n            //   console.log(\"Activity already completed\");\r\n            //   // Find the first incomplete frame and mark it as complete\r\n            //   const firstIncompleteIndex = API.FrameChain.framesStatus.findIndex(\r\n            //     (status) => status !== \"complete\"\r\n            //   );\r\n\r\n            //   if (firstIncompleteIndex !== -1) {\r\n            //     API.FrameChain.framesStatus[firstIncompleteIndex] = \"complete\";\r\n            //   }\r\n            //   console.log(\"Next Frame:\", API.FrameChain.nextFrame());\r\n            //   autoVideoButton.classList.remove(\"active\", \"writing\");\r\n            nextFrame(stageFrame);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error:\", error);\r\n          autoVideoButton.classList.remove(\"active\", \"writing\");\r\n        }\r\n      }, 1000);\r\n    });\r\n\r\n    // Make menu draggable\r\n    const header = menu.querySelector(\".menu-header\");\r\n    let isDragging = false;\r\n    let currentX;\r\n    let currentY;\r\n    let initialX;\r\n    let initialY;\r\n    let xOffset = 0;\r\n    let yOffset = 0;\r\n\r\n    header.addEventListener(\"mousedown\", (e) => {\r\n      initialX = e.clientX - xOffset;\r\n      initialY = e.clientY - yOffset;\r\n      isDragging = true;\r\n    });\r\n\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      if (isDragging) {\r\n        e.preventDefault();\r\n        currentX = e.clientX - initialX;\r\n        currentY = e.clientY - initialY;\r\n        xOffset = currentX;\r\n        yOffset = currentY;\r\n        menu.style.transform = `translate(${currentX}px, ${currentY}px)`;\r\n      }\r\n    });\r\n\r\n    document.addEventListener(\"mouseup\", () => {\r\n      isDragging = false;\r\n    });\r\n\r\n    // Add event listener for exam unlocker\r\n    const examUnlockerItem = document.getElementById(\"examUnlockerItem\");\r\n    const examUnlockerButton =\r\n      examUnlockerItem.querySelector(\".menu-item-button\");\r\n    const unlockIcon = examUnlockerItem.querySelector(\".unlock-icon\");\r\n    const examContent = examUnlockerItem.querySelector(\".menu-item-content\");\r\n\r\n    // Toggle menu content when clicking the unlock icon\r\n    unlockIcon.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      const isExpanded = examContent.style.display !== \"none\";\r\n      examContent.style.display = isExpanded ? \"none\" : \"block\";\r\n      examUnlockerButton.style.background = isExpanded ? \"#242526\" : \"#2a2b2c\";\r\n    });\r\n\r\n    // Handle main button click (excluding unlock icon)\r\n    examUnlockerButton.addEventListener(\"click\", (e) => {\r\n      if (e.target.closest(\".unlock-icon\")) {\r\n        return;\r\n      }\r\n\r\n      // Update exam configuration\r\n      const config = {\r\n        isActive: examUnlockerButton.classList.contains(\"active\"),\r\n        examInfo: document.querySelector(\"#examInfoBtn\").textContent.trim(),\r\n      };\r\n\r\n      // Call the callback with the configuration\r\n      if (typeof onExamCallback === \"function\") {\r\n        onExamCallback(config);\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error initializing draggable menu:\", error);\r\n  }\r\n}\r\n\r\n// Add this new function\r\nexport function displayLessonNumber(number) {\r\n  const lessonTitle = document.getElementById(\"lessonInfo\");\r\n  if (!lessonTitle) return;\r\n\r\n  // Get the width of the lesson title\r\n  const titleWidth = lessonTitle.offsetWidth;\r\n  console.log(\"Title Width\", titleWidth);\r\n\r\n  // Add styles if they don't exist\r\n  if (!document.getElementById(\"lesson-number-style\")) {\r\n    const style = document.createElement(\"style\");\r\n    style.id = \"lesson-number-style\";\r\n    style.textContent = `\r\n      .lesson-number-container {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        text-align: center;\r\n        z-index: 999999;\r\n        animation: fadeIn 0.3s ease-out;\r\n        height: 120px;\r\n        width: ${titleWidth}px;\r\n        margin: 0 auto;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n      }\r\n\r\n      .lesson-number {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: flex-start;\r\n        width: 100%;\r\n        font-size: 15px;\r\n        font-weight: 600;\r\n        padding: 8px 12px;\r\n        background: #141517;\r\n        border: 1px solid rgba(0, 108, 255, 0.1);\r\n        border-radius: 12px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\r\n        box-sizing: border-box;\r\n        height: 80px;\r\n        position: relative;\r\n      }\r\n\r\n      .progress-bar {\r\n        position: relative;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: #242526;\r\n        border-radius: 10px;\r\n      }\r\n\r\n      .progress-text {\r\n        margin-top: 8px;\r\n        font-size: 13px;\r\n        opacity: 0.9;\r\n      }\r\n\r\n      @keyframes fadeIn {\r\n        from {\r\n          opacity: 0;\r\n          transform: translateY(10px);\r\n        }\r\n        to {\r\n          opacity: 1;\r\n          transform: translateY(0);\r\n        }\r\n      }\r\n\r\n      .progress-bar::before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        height: 10px;\r\n        width: 100%;\r\n        background: #242526;\r\n        border-radius: 10px;\r\n      }\r\n\r\n      .progress-bar::after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 0;\r\n        transform: translateY(-50%);\r\n        height: 10px;\r\n        width: 0%;\r\n        background: #006cff;\r\n        animation: fillBar 1s ease-out forwards;\r\n        border-radius: 10px;\r\n        box-shadow: 0 0 10px rgba(0, 108, 255, 0.3);\r\n      }\r\n\r\n      @keyframes fillBar {\r\n        from {\r\n          width: 0%;\r\n        }\r\n        to {\r\n          width: calc(100% * var(--progress) / 100);\r\n        }\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // Create or update the number element\r\n  let container = document.querySelector(\".lesson-number-container\");\r\n  if (!container) {\r\n    container = document.createElement(\"div\");\r\n    container.className = \"lesson-number-container\";\r\n    container.style.width = `${titleWidth}px`; // Set width dynamically\r\n\r\n    const numberElement = document.createElement(\"span\");\r\n    numberElement.className = \"lesson-number\";\r\n\r\n    const progressBar = document.createElement(\"div\");\r\n    progressBar.className = \"progress-bar\";\r\n\r\n    const progressText = document.createElement(\"div\");\r\n    progressText.className = \"progress-text\";\r\n\r\n    numberElement.appendChild(progressBar);\r\n    numberElement.appendChild(progressText);\r\n    container.appendChild(numberElement);\r\n\r\n    document.body.appendChild(container);\r\n  } else {\r\n    // Update container width if lesson title width changes\r\n    container.style.width = `${titleWidth}px`;\r\n  }\r\n\r\n  // Create ResizeObserver to watch lessonInfo element width changes\r\n  const lessonInfo = document.getElementById(\"lessonInfo\");\r\n  if (lessonInfo) {\r\n    const resizeObserver = new ResizeObserver((entries) => {\r\n      for (const entry of entries) {\r\n        const lessonInfoWidth = entry.contentRect.width;\r\n        container.style.width = `${lessonInfoWidth}px`;\r\n      }\r\n    });\r\n    resizeObserver.observe(lessonInfo);\r\n  }\r\n\r\n  // Update the number with animation\r\n  const numberElement = container.querySelector(\".lesson-number\");\r\n  const progressText = numberElement.querySelector(\".progress-text\");\r\n\r\n  numberElement.style.animation = \"none\";\r\n  numberElement.offsetHeight; // Trigger reflow\r\n  numberElement.style.animation = \"fadeIn 0.3s ease-out\";\r\n\r\n  // Set the progress percentage as a CSS variable\r\n  numberElement.style.setProperty(\"--progress\", `${number}`);\r\n\r\n  // Update progress text\r\n  progressText.textContent = `You are ${number}% completed`;\r\n}\r\n\r\n// Add this function to handle button states\r\nexport function updateAutoWritingState(state) {\r\n  const autoWritingButton = document.querySelector(\r\n    \"#autoWritingItem .menu-item-button\"\r\n  );\r\n  if (!autoWritingButton) return;\r\n\r\n  // Remove all states first\r\n  autoWritingButton.classList.remove(\"active\", \"writing\");\r\n\r\n  switch (state) {\r\n    case \"idle\":\r\n      // Default state, no classes needed\r\n      break;\r\n    case \"active\":\r\n      autoWritingButton.classList.add(\"active\");\r\n      break;\r\n    case \"writing\":\r\n      autoWritingButton.classList.add(\"active\", \"writing\");\r\n      break;\r\n  }\r\n}\r\n\r\n// Update the createTypingAnimation function\r\nexport function createTypingAnimation(editor, text, config, onComplete) {\r\n  // Update button state to writing\r\n  updateAutoWritingState(\"writing\");\r\n\r\n  // Add writing animation class to the editor\r\n  const editorElement = editor.container.querySelector(\".cke_editable\");\r\n  editorElement.classList.add(\"writing-active\");\r\n\r\n  // Original typing animation code...\r\n  const words = text.split(\" \");\r\n  editor.setData(\"\");\r\n\r\n  // When typing is complete\r\n  const originalOnComplete = onComplete;\r\n  onComplete = () => {\r\n    editorElement.classList.remove(\"writing-active\");\r\n    // Keep button in active state but remove writing animation\r\n    updateAutoWritingState(\"active\");\r\n    if (originalOnComplete) {\r\n      originalOnComplete();\r\n    }\r\n  };\r\n\r\n  // Rest of the existing typing animation code...\r\n}\r\n\r\n// Update the displayExamPanel function with working pagination and scrollable content\r\nexport function displayExamPanel(questions = []) {\r\n  console.log(\"Displaying exam panel\");\r\n\r\n  // Remove existing panel if it exists\r\n  const existingPanel = document.querySelector(\"#examInfoPanel\");\r\n  if (existingPanel) {\r\n    existingPanel.remove();\r\n  }\r\n\r\n  // Update the style to include scrollable content\r\n  if (!document.querySelector(\"#exam-panel-style\")) {\r\n    const style = document.createElement(\"style\");\r\n    style.id = \"exam-panel-style\";\r\n    style.textContent = `\r\n      #examInfoPanel {\r\n        position: fixed;\r\n        top: 100px;\r\n        transform: translate(0, 0); /* Initial position */\r\n        width: 300px;\r\n        background: #141517;\r\n        border-radius: 12px;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        color: white;\r\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\r\n        z-index: 999998;\r\n        display: flex;\r\n        flex-direction: column;\r\n        max-height: 80vh;\r\n      }\r\n\r\n      .exam-panel-header {\r\n        background: #222324;\r\n        padding: 15px;\r\n        border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n        flex-shrink: 0;\r\n      }\r\n\r\n      .exam-panel-title {\r\n        font-size: 18px;\r\n        font-weight: 600;\r\n        color: white;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 8px;\r\n      }\r\n\r\n      .exam-questions-container {\r\n        padding: 15px;\r\n        overflow-y: auto;\r\n        flex-grow: 1;\r\n        height: 400px;\r\n      }\r\n\r\n      /* Scrollbar styling */\r\n      .exam-questions-container::-webkit-scrollbar {\r\n        width: 4px;\r\n      }\r\n\r\n      .exam-questions-container::-webkit-scrollbar-track {\r\n        background: #1a1b1c;\r\n        border-radius: 4px;\r\n      }\r\n\r\n      .exam-questions-container::-webkit-scrollbar-thumb {\r\n        background: #2a2b2c;\r\n        border-radius: 4px;\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .exam-questions-container::-webkit-scrollbar-thumb:hover {\r\n        background: #006cff;\r\n      }\r\n\r\n      .exam-question-card {\r\n        background: #1a1b1c;\r\n        border-radius: 8px;\r\n        padding: 12px;\r\n        margin-bottom: 10px;\r\n        border: 1px solid rgba(255, 255, 255, 0.1);\r\n        transition: all 0.3s ease;\r\n      }\r\n\r\n      .exam-question-card:hover {\r\n        border-color: rgba(0, 108, 255, 0.5);\r\n        box-shadow: 0 0 0 1px rgba(0, 108, 255, 0.2);\r\n        transform: translateX(-4px);\r\n      }\r\n\r\n      .question-id {\r\n        color: #006cff;\r\n        font-weight: 600;\r\n        font-size: 14px;\r\n        margin-bottom: 4px;\r\n      }\r\n\r\n      .question-status {\r\n        font-size: 12px;\r\n        padding: 4px 8px;\r\n        border-radius: 4px;\r\n        display: inline-block;\r\n        margin-top: 4px;\r\n      }\r\n\r\n      .status-pending {\r\n        background: rgba(255, 170, 0, 0.2);\r\n        color: #ffaa00;\r\n      }\r\n\r\n      .status-completed {\r\n        background: rgba(0, 200, 83, 0.2);\r\n        color: #00c853;\r\n      }\r\n\r\n      .exam-pagination {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        padding: 15px;\r\n        border-top: 1px solid rgba(255, 255, 255, 0.1);\r\n        flex-shrink: 0;\r\n      }\r\n\r\n      .page-info {\r\n        font-size: 14px;\r\n        color: rgba(255, 255, 255, 0.7);\r\n      }\r\n\r\n      .page-buttons {\r\n        display: flex;\r\n        gap: 8px;\r\n      }\r\n\r\n      .page-button {\r\n        background: #242526;\r\n        border: none;\r\n        border-radius: 4px;\r\n        color: white;\r\n        font-family: 'Poppins', system-ui, -apple-system, sans-serif;\r\n        font-size: 14px;\r\n        font-weight: 600;\r\n        padding: 6px 12px;\r\n        cursor: pointer;\r\n        transition: all 0.2s ease;\r\n        min-width: 32px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n\r\n      .page-button:hover:not(:disabled) {\r\n        background: #2a2b2c;\r\n        transform: translateY(-1px);\r\n      }\r\n\r\n      .page-button:active:not(:disabled) {\r\n        transform: translateY(0);\r\n      }\r\n\r\n      .page-button.active {\r\n        background: #006cff;\r\n      }\r\n\r\n      .page-button:disabled {\r\n        opacity: 0.5;\r\n        cursor: not-allowed;\r\n      }\r\n\r\n      .question-details {\r\n        font-size: 13px;\r\n        color: rgba(255, 255, 255, 0.7);\r\n        margin-top: 4px;\r\n      }\r\n\r\n      .question-type {\r\n        display: inline-block;\r\n        padding: 2px 6px;\r\n        background: rgba(0, 108, 255, 0.1);\r\n        color: #006cff;\r\n        border-radius: 4px;\r\n        font-size: 11px;\r\n        margin-right: 8px;\r\n      }\r\n\r\n      .time-remaining {\r\n        font-size: 12px;\r\n        color: rgba(255, 255, 255, 0.6);\r\n        margin-top: 4px;\r\n        display: flex;\r\n        align-items: center;\r\n        gap: 4px;\r\n      }\r\n\r\n      .time-remaining svg {\r\n        color: #006cff;\r\n      }\r\n    `;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // Create the panel\r\n  const panel = document.createElement(\"div\");\r\n  panel.id = \"examInfoPanel\";\r\n\r\n  // Initialize state\r\n  let currentPage = 1;\r\n  const questionsPerPage = 5;\r\n  const totalPages = Math.ceil(questions.length / questionsPerPage);\r\n\r\n  let isDragging = false;\r\n  let startX = 0;\r\n  let startY = 0;\r\n  let offsetX = 0;\r\n  let offsetY = 0;\r\n\r\n  function handleDragStart(e) {\r\n    const header = e.target.closest(\".exam-panel-header\");\r\n    if (!header) return;\r\n\r\n    e.preventDefault();\r\n    isDragging = true;\r\n\r\n    // Get current panel position\r\n    const transform = window.getComputedStyle(panel).transform;\r\n    const matrix = new DOMMatrixReadOnly(transform);\r\n    offsetX = matrix.m41;\r\n    offsetY = matrix.m42;\r\n\r\n    // Get start position\r\n    startX = e.clientX - offsetX;\r\n    startY = e.clientY - offsetY;\r\n\r\n    // Add temporary event listeners\r\n    document.addEventListener(\"mousemove\", handleDrag);\r\n    document.addEventListener(\"mouseup\", handleDragEnd);\r\n  }\r\n\r\n  function handleDrag(e) {\r\n    if (!isDragging) return;\r\n\r\n    e.preventDefault();\r\n\r\n    // Calculate new position\r\n    let newX = e.clientX - startX;\r\n    let newY = e.clientY - startY;\r\n\r\n    // Get viewport and panel dimensions\r\n    const viewportWidth = window.innerWidth;\r\n    const viewportHeight = window.innerHeight;\r\n    const panelRect = panel.getBoundingClientRect();\r\n\r\n    // Constrain to viewport bounds\r\n    newX = Math.min(Math.max(newX, 0), viewportWidth - panelRect.width);\r\n    newY = Math.min(Math.max(newY, 0), viewportHeight - panelRect.height);\r\n\r\n    // Update panel position\r\n    panel.style.transform = `translate(${newX}px, ${newY}px)`;\r\n  }\r\n\r\n  function handleDragEnd() {\r\n    isDragging = false;\r\n    document.removeEventListener(\"mousemove\", handleDrag);\r\n    document.removeEventListener(\"mouseup\", handleDragEnd);\r\n  }\r\n\r\n  // Add main drag event listener\r\n  panel.addEventListener(\"mousedown\", handleDragStart);\r\n\r\n  // Handle window resize to keep panel in bounds\r\n  function handleResize() {\r\n    const rect = panel.getBoundingClientRect();\r\n    const viewportWidth = window.innerWidth;\r\n    const viewportHeight = window.innerHeight;\r\n\r\n    // Get current transform values\r\n    const transform = window.getComputedStyle(panel).transform;\r\n    const matrix = new DOMMatrixReadOnly(transform);\r\n    let currentX = matrix.m41;\r\n    let currentY = matrix.m42;\r\n\r\n    // Adjust position if outside viewport\r\n    if (rect.right > viewportWidth) {\r\n      currentX = viewportWidth - rect.width;\r\n    }\r\n    if (rect.bottom > viewportHeight) {\r\n      currentY = viewportHeight - rect.height;\r\n    }\r\n\r\n    panel.style.transform = `translate(${currentX}px, ${currentY}px)`;\r\n  }\r\n\r\n  window.addEventListener(\"resize\", handleResize);\r\n\r\n  // Add cleanup function to remove event listeners\r\n  panel.cleanup = () => {\r\n    panel.removeEventListener(\"mousedown\", handleDragStart);\r\n    window.removeEventListener(\"resize\", handleResize);\r\n  };\r\n\r\n  function renderPanel() {\r\n    const startIdx = (currentPage - 1) * questionsPerPage;\r\n    const endIdx = startIdx + questionsPerPage;\r\n    const currentQuestions = questions.slice(startIdx, endIdx);\r\n\r\n    // Store the old transform value\r\n    const oldTransform = panel.style.transform;\r\n\r\n    panel.innerHTML = `\r\n      <div class=\"exam-panel-header\">\r\n        <div class=\"exam-panel-title\">\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n            <rect x=\"3\" y=\"11\" width=\"18\" height=\"11\" rx=\"2\" ry=\"2\"></rect>\r\n            <path d=\"M7 11V7a5 5 0 0 1 10 0v4\"></path>\r\n          </svg>\r\n          Exam Questions (${questions.length})\r\n        </div>\r\n      </div>\r\n      <div class=\"exam-questions-container\">\r\n        ${currentQuestions\r\n          .map(\r\n            (q) => `\r\n          <div class=\"exam-question-card\">\r\n            <div class=\"question-id\">${q}</div>\r\n            <div class=\"question-details\">\r\n              <span class=\"question-type\">Assessment Question</span>\r\n            </div>\r\n            <div class=\"question-status status-pending\">\r\n              Pending\r\n            </div>\r\n            <div class=\"time-remaining\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n                <circle cx=\"12\" cy=\"12\" r=\"10\"></circle>\r\n                <polyline points=\"12 6 12 12 16 14\"></polyline>\r\n              </svg>\r\n              Time remaining\r\n            </div>\r\n          </div>\r\n        `\r\n          )\r\n          .join(\"\")}\r\n      </div>\r\n      <div class=\"exam-pagination\">\r\n        <div class=\"page-info\">\r\n          ${totalPages ? `Page ${currentPage} of ${totalPages}` : \"\"}\r\n        </div>\r\n        <div class=\"page-buttons\">\r\n          <button class=\"page-button\" ${\r\n            !totalPages || currentPage === 1 ? \"disabled\" : \"\"\r\n          } id=\"prevPage\">\r\n            ←\r\n          </button>\r\n          <button class=\"page-button\" ${\r\n            !totalPages || currentPage === totalPages ? \"disabled\" : \"\"\r\n          } id=\"nextPage\">\r\n            →\r\n          </button>\r\n        </div>\r\n      </div>\r\n    `;\r\n\r\n    // Restore the transform value\r\n    panel.style.transform = oldTransform;\r\n\r\n    // Add pagination button listeners\r\n    const prevButton = panel.querySelector(\"#prevPage\");\r\n    const nextButton = panel.querySelector(\"#nextPage\");\r\n\r\n    if (prevButton) {\r\n      prevButton.addEventListener(\"click\", () => {\r\n        if (currentPage > 1) {\r\n          currentPage--;\r\n          renderPanel();\r\n        }\r\n      });\r\n    }\r\n\r\n    if (nextButton) {\r\n      nextButton.addEventListener(\"click\", () => {\r\n        if (currentPage < totalPages) {\r\n          currentPage++;\r\n          renderPanel();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Initial render\r\n  renderPanel();\r\n  document.body.appendChild(panel);\r\n\r\n  return panel;\r\n}\r\n\r\nconst setExampleQuestions = (questions) => {\r\n  exampleQuestions = questions;\r\n  // Update the questions array\r\n  exampleQuestions = questions;\r\n\r\n  // Re-render the exam panel if it exists\r\n  const existingPanel = document.querySelector(\"#examInfoPanel\");\r\n  if (existingPanel) {\r\n    displayExamPanel(questions);\r\n  }\r\n};\r\n\r\nexport { setExampleQuestions };\r\n\r\n// Add this function to create and handle the auto advance modal\r\nasync function createAutoAdvanceModal(courses = []) {\r\n  console.log(\"createAutoAdvanceModal\");\r\n  // Remove all elements with id autoAdvanceModal\r\n  const autoAdvanceModals = document.querySelectorAll(\"#autoAdvanceModal\");\r\n  autoAdvanceModals.forEach((modal) => modal.remove());\r\n\r\n  console.log(\"courses\", courses);\r\n  const modalHtml = `\r\n    <div id=\"autoAdvanceModal\" class=\"modal\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"container1\">\r\n          <h1 style=\"font-size: 32px; margin-top: 30px;\">Get <span class=\"title\">school</span> done now</h1>\r\n          <p class=\"info1\">Select a class to get started with Revolt</p>\r\n          <div class=\"typing-dropdown\" style=\"margin-top: 10px;\">\r\n            <button class=\"dropdown-btn\" id=\"placeholderBtn\" style=\"height: 40px;\">Select a class</button>\r\n            <div class=\"dropdown-content1\">\r\n              ${courses\r\n                .map(\r\n                  (course) =>\r\n                    `<div class=\"dropdown-option\" data-value=\"${course.id}\">\r\n                      <div style=\"display: flex; flex-direction: column; gap: 4px;\">\r\n                        <div style=\"font-size: 18px; font-weight: 500; color: #fff; margin-bottom: 4px;\">${\r\n                          course.subject\r\n                        }</div>\r\n                        <div style=\"display: flex; flex-direction: row; justify-content: space-between; font-size: 14px; font-weight: 350; color: #fff;\">\r\n                          <div>${course.name}</div>\r\n                          <div>\r\n                            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                              <circle cx=\"12\" cy=\"12\" r=\"11\" stroke=\"white\" stroke-width=\"2\"/>\r\n                              <path d=\"M10 7L16 12L10 17\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n                            </svg>\r\n                          </div>\r\n                        </div>\r\n                        <div class=\"progress-bar\" style=\"width: 100%; height: 3px; margin-top: 4px;\">\r\n                          <div style=\"width: ${\r\n                            course.progress\r\n                              ? course.progress.percentComplete\r\n                              : 0\r\n                          }%; height: 100%; background: #006CFF; border-radius: 10px; transition: width 0.3s ease;\"></div>\r\n                        </div>\r\n                        ${\r\n                          course.progress\r\n                            ? `<div style=\"font-size: 12px; color: #9b9d9f;\">You are ${course.progress.percentComplete}% complete and Ahead</div>`\r\n                            : \"\"\r\n                        }\r\n                      </div>\r\n                    </div>`\r\n                )\r\n                .join(\"\")}\r\n            </div>\r\n          </div>\r\n          <p class=\"info\" id=\"cancelModalBtn\" style=\"cursor: pointer;\">Cancel</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `;\r\n\r\n  // Update the modal styles to include animation\r\n  const modalStyle = `\r\n    .modal {\r\n      display: none;\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(0, 0, 0, 0.7);\r\n      font-family: Arial, sans-serif;\r\n      opacity: 0;\r\n      transition: opacity 0.5s ease-in-out;\r\n    }\r\n\r\n    .modal.show {\r\n      opacity: 1;\r\n      z-index: 1000000;\r\n    }\r\n\r\n    .modal-content {\r\n      position: absolute;\r\n      top: 30%;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%) scale(0.7);\r\n      width: 540px;\r\n      border-radius: 12px;\r\n      background: #12141a;\r\n      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n      opacity: 0;\r\n      transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);\r\n    }\r\n\r\n    .modal.show .modal-content {\r\n      transform: translate(-50%, -50%) scale(1);\r\n      opacity: 1;\r\n    }\r\n\r\n    @keyframes modalPop {\r\n      0% {\r\n        transform: translate(-50%, -50%) scale(0.7);\r\n        opacity: 0;\r\n      }\r\n      100% {\r\n        transform: translate(-50%, -50%) scale(1);\r\n        opacity: 1;\r\n      }\r\n    }\r\n\r\n\r\n    .container1 {\r\n      text-align: center;\r\n      padding: 30px;\r\n      border-radius: 12px;\r\n      height: 300px;\r\n      transition: height 0.5s ease-in-out;\r\n      margin-bottom: 30px;\r\n      overflow-y: hidden;\r\n      scrollbar-width: none;\r\n    }\r\n\r\n    .h-400 {\r\n      height: 600px !important;\r\n      overflow-y: scroll;\r\n    }\r\n\r\n    .dropdown-content1 {\r\n      position: absolute;\r\n      top: 100%;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 0px;\r\n      background: #242526;\r\n      border-radius: 4px;\r\n      z-index: 1;\r\n      margin-top: 4px;\r\n      overflow-y: scroll;\r\n      scrollbar-width: none;\r\n      transition: height 0.4s ease-in-out;\r\n    }\r\n\r\n    h1 {\r\n      font-size: 24px;\r\n      font-weight: bold;\r\n      color: white;\r\n      margin: 0;\r\n    }\r\n\r\n    .emoji {\r\n      font-size: 24px;\r\n      vertical-align: middle;\r\n    }\r\n\r\n    .dropdown {\r\n      background: #23252b;\r\n      color: white;\r\n      border: none;\r\n      padding: 10px;\r\n      width: 100%;\r\n      border-radius: 6px;\r\n      font-size: 16px;\r\n      margin-top: 5px;\r\n    }\r\n\r\n    .info {\r\n      margin-top: 50px;\r\n      font-size: 14px;\r\n      background: rgba(255, 255, 255, 0.1);\r\n      display: inline-block;\r\n      padding: 6px 12px;\r\n      border-radius: 8px;\r\n      color: white;\r\n    }\r\n\r\n    .info1 {\r\n      display: flex !important;\r\n      justify-content: flex-start;\r\n      margin-top: 40px;\r\n      margin-bottom: 5px !important;\r\n      font-size: 14px;\r\n      color: white;\r\n    }\r\n\r\n    .title {\r\n      margin-bottom: 0 !important;\r\n      color: #006cff;\r\n    }\r\n  `;\r\n\r\n  // Add styles to document\r\n  if (!document.querySelector(\"#autoAdvanceModalStyle\")) {\r\n    const style = document.createElement(\"style\");\r\n    style.id = \"autoAdvanceModalStyle\";\r\n    style.textContent = modalStyle;\r\n    document.head.appendChild(style);\r\n  }\r\n\r\n  // Add modal to document\r\n  document.body.insertAdjacentHTML(\"beforeend\", modalHtml);\r\n\r\n  // Get modal elements\r\n  const modal = document.getElementById(\"autoAdvanceModal\");\r\n  // Add dropdown functionality\r\n  const dropdown = modal.querySelector(\".typing-dropdown\");\r\n  console.log(\"dropdowns\", dropdown);\r\n  const btn = dropdown.querySelector(\".dropdown-btn\");\r\n  const options = dropdown.querySelectorAll(\".dropdown-option\");\r\n  const container1 = modal.querySelector(\".container1\");\r\n\r\n  btn.addEventListener(\"click\", (e) => {\r\n    e.stopPropagation();\r\n    // Increase container1 height to 400px\r\n    container1.classList.toggle(\"h-400\");\r\n    dropdown.classList.toggle(\"active\");\r\n  });\r\n\r\n  options.forEach((option) => {\r\n    option.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      container1.classList.remove(\"h-400\");\r\n      const selectedValue = option.getAttribute(\"data-value\");\r\n\r\n      // Redirect to current path + course id\r\n      const currentPath = window.location.href;\r\n      console.log(\r\n        \"path:\",\r\n        `${currentPath}enrollment/${selectedValue}/coursemap#`\r\n      );\r\n      window.location.href = `${currentPath}enrollment/${selectedValue}/coursemap#`;\r\n      // Show loading spinner overlaid on original content\r\n      const dropdownContent = dropdown.querySelector(\".dropdown-content1\");\r\n      const spinnerHtml = `\r\n        <div style=\"position: absolute; top: 0; left: 0; right: 0; bottom: 0; background: rgba(0,0,0,0.7); display: flex; justify-content: center; align-items: center; z-index: 100;\">\r\n          <div class=\"loading-spinner\" style=\"width: 30px; height: 30px; border: 3px solid rgba(255,255,255,0.1); border-radius: 50%; border-top-color: #006cff; animation: spin 1s ease-in-out infinite;\"></div>\r\n        </div>\r\n      `;\r\n      dropdownContent.style.position = \"relative\";\r\n      dropdownContent.insertAdjacentHTML(\"beforeend\", spinnerHtml);\r\n    });\r\n  });\r\n\r\n  // Close modal when clicking outside\r\n  window.addEventListener(\"click\", (e) => {\r\n    const modalContent = modal.querySelector(\".modal-content\");\r\n    if (\r\n      !document.getElementById(\"autoAdvanceItem\").contains(e.target) &&\r\n      e.target !== modalContent\r\n    ) {\r\n      hideModal();\r\n    }\r\n  });\r\n\r\n  const cancelModalBtn = document.getElementById(\"cancelModalBtn\");\r\n  cancelModalBtn.addEventListener(\"click\", () => {\r\n    hideModal();\r\n  });\r\n\r\n  modal.addEventListener(\"click\", (e) => {\r\n    e.stopPropagation();\r\n    console.log(\"modal clicked\");\r\n    dropdown.classList.remove(\"active\");\r\n    container1.classList.remove(\"h-400\");\r\n    if (!modal.querySelector(\".modal-content\").contains(e.target)) {\r\n      hideModal();\r\n    }\r\n  });\r\n\r\n  // Show modal with animation\r\n  function showModal() {\r\n    modal.style.display = \"block\";\r\n    // Trigger reflow\r\n    modal.offsetHeight;\r\n    modal.classList.add(\"show\");\r\n  }\r\n\r\n  // Hide modal with animation\r\n  function hideModal() {\r\n    modal.classList.remove(\"show\");\r\n    setTimeout(() => {\r\n      modal.style.display = \"none\";\r\n    }, 300); // Match the transition duration\r\n  }\r\n\r\n  // Update the display logic when opening the modal\r\n  return {\r\n    show: showModal,\r\n    hide: hideModal,\r\n    element: modal,\r\n  };\r\n}\r\n\r\n// Function to handle redirection to current activity\r\nfunction redirectToCurrentActivity() {\r\n  // Check if we're on the student.edgenuity.com domain\r\n  console.log(\"Checking for current activity tile...\");\r\n\r\n  // Set up a function to check for the element\r\n  const checkForCurrentActivity = () => {\r\n    // Find the element with the current activity status\r\n    const currentActivityElement = document.querySelector(\r\n      \".ActivityTile-status-current\"\r\n    );\r\n\r\n    if (currentActivityElement) {\r\n      // Find the closest parent that has an href (likely an <a> tag)\r\n      let parent = currentActivityElement;\r\n      while (parent && !parent.href) {\r\n        parent = parent.parentElement;\r\n      }\r\n\r\n      // If we found an element with href, redirect to it\r\n      if (parent && parent.href) {\r\n        console.log(\"Found current activity, redirecting to:\", parent.href);\r\n        // Set tamper value advanceClick as false\r\n        window.location.href = parent.href;\r\n        console.log(\"Redirecting to:\", parent.href);\r\n      } else {\r\n        console.log(\"Current activity found but no href attribute available\");\r\n      }\r\n      return true; // Element found\r\n    } else {\r\n      console.log(\"No current activity tile found yet, waiting...\");\r\n      return false; // Element not found\r\n    }\r\n  };\r\n\r\n  // Try immediately first\r\n  if (!checkForCurrentActivity()) {\r\n    // If not found, set up an interval to keep checking\r\n    const intervalId = setInterval(() => {\r\n      if (checkForCurrentActivity()) {\r\n        clearInterval(intervalId); // Stop checking once found\r\n      }\r\n    }, 1000); // Check every second\r\n\r\n    // Stop checking after 30 seconds to prevent infinite loops\r\n    setTimeout(() => {\r\n      clearInterval(intervalId);\r\n      console.log(\"Gave up waiting for current activity element\");\r\n    }, 30000);\r\n  }\r\n}\r\n\r\nlet checkForStageFrameInterval;\r\nfunction validateFunction() {\r\n  console.log(\"Checking for current activity tile...\");\r\n\r\n  // Try immediately first\r\n  if (!checkForStageFrame()) {\r\n    // If not found, set up an interval to keep checking\r\n    checkForStageFrameInterval = setInterval(() => {\r\n      console.log(\"checkforstageframe called\");\r\n      checkForStageFrame();\r\n    }, 1000); // Check every second\r\n    console.log(\r\n      \"checkForStageFrameInterval ##############\",\r\n      checkForStageFrameInterval\r\n    );\r\n  }\r\n}\r\n\r\nlet currentFrame = null;\r\nlet videoCheckInterval = null;\r\n\r\nfunction checkForStageFrame() {\r\n  const stageFrame = getStageFrame();\r\n\r\n  if (stageFrame && JSON.stringify(stageFrame) !== \"{}\") {\r\n    console.log(\"Stage frame found, proceeding with validation\");\r\n    return processStageFrame(stageFrame);\r\n  } else {\r\n    console.log(\"Stage frame not found yet, waiting...\");\r\n    return false; // stageFrame not found\r\n  }\r\n}\r\n\r\nfunction processStageFrame(stageFrame) {\r\n  const contentWindow = stageFrame?.contentWindow;\r\n  const autoAdvanceItem = document.getElementById(\"autoAdvanceItem\");\r\n  const autoAdvanceButton = autoAdvanceItem?.querySelector(\".menu-item-button\");\r\n\r\n  let { API } = contentWindow;\r\n  if (\r\n    !API ||\r\n    API?.FrameChain?.currentFrame === currentFrame ||\r\n    (API.FrameChain.currentFrame === 1 && !API?.Video?.wrapper)\r\n  ) {\r\n    console.log(\"API is not available\");\r\n    return false;\r\n  }\r\n  // console.log(\"Current frame Updated\", API?.FrameChain?.currentFrame);\r\n  // currentFrame = API?.FrameChain?.currentFrame;\r\n  console.log(\"checkForStageFrameInterval\", checkForStageFrameInterval);\r\n  clearInterval(checkForStageFrameInterval);\r\n  clearInterval(videoCheckInterval);\r\n  // autoAdvanceButton.classList.add(\"active\", \"writing\");\r\n  // const isCompleted = API.Frame.isComplete();\r\n\r\n  // // Log API information for debugging\r\n  // logAPIInfo(API);\r\n\r\n  // // Determine if content is a video or not\r\n  // const isAVideo = checkIfVideo(API);\r\n  // console.log(\"isAVideo\", isAVideo);\r\n\r\n  // if (isAVideo) {\r\n  //   handleVideoContent(stageFrame, isCompleted, API, autoAdvanceButton);\r\n  // } else {\r\n  //   handleNonVideoContent(stageFrame, isCompleted, API, autoAdvanceButton);\r\n  // }\r\n\r\n  try {\r\n    // Find the activity title element\r\n    const activityTitleElement = document.getElementById(\"activity-title\");\r\n    const activityTitle = activityTitleElement\r\n      ? activityTitleElement.textContent.trim().toLowerCase()\r\n      : null;\r\n\r\n    autoAdvanceButton.classList.add(\"active\", \"writing\");\r\n\r\n    const videoElement =\r\n      stageFrame.contentDocument.getElementById(\"home_video_js\");\r\n\r\n    let duration = videoElement?.duration || null;\r\n    let currentTime = videoElement?.currentTime || null;\r\n\r\n    const isCompleted = API.Frame.isComplete();\r\n\r\n    const questionsFrame =\r\n      stageFrame?.contentDocument?.getElementById(\"iFramePreview\");\r\n    const isAVideo = questionsFrame?.style.display === \"none\";\r\n\r\n    console.log(\"isAVideo\", isAVideo);\r\n\r\n    if (!isCompleted) {\r\n      if (isAVideo) {\r\n        console.log(\"Video is playing\");\r\n        if (videoCheckInterval) {\r\n          clearInterval(videoCheckInterval);\r\n        }\r\n        videoCheckInterval = setInterval(() => {\r\n          currentTime = videoElement?.currentTime || 0;\r\n          console.log(\"currentTime\", currentTime);\r\n          if (duration - currentTime < 2 && duration != 0) {\r\n            clearInterval(videoCheckInterval);\r\n            nextFrame(API);\r\n            setTimeout(() => {\r\n              checkForStageFrame();\r\n              return;\r\n            }, 5000);\r\n          } else {\r\n            return;\r\n          }\r\n        }, 1000);\r\n        return;\r\n      } else if (activityTitle === \"instruction\") {\r\n        console.log(\"Instruction is playing\");\r\n        const iframePreview = getIFramePreview();\r\n        // console.log(\"iframePreview\", iframePreview);\r\n        if (iframePreview) {\r\n          const questions =\r\n            iframePreview.contentDocument?.querySelectorAll(\"div[fstack]\");\r\n\r\n          console.log(\"Questions:\", questions);\r\n\r\n          questions.forEach((question) => {\r\n            setTimeout(() => {\r\n              let clickedAmount = 0;\r\n              let input = question.querySelectorAll(\"input\");\r\n              console.log(\"Input:\", input);\r\n              if (input && input.length > 0) {\r\n                Array.from(input).forEach((input) =>\r\n                  Math.random() > 0.5 ? input.click() : null\r\n                ); // Click a random input\r\n                clickedAmount++;\r\n              }\r\n\r\n              let textArea = question.querySelectorAll(\"textarea\");\r\n              console.log(\"textArea:\", textArea);\r\n              if (textArea && textArea.length > 0) {\r\n                Array.from(textArea).forEach((textArea) =>\r\n                  Math.random() > 0.5 ? textArea.click() : null\r\n                ); // Click a random input\r\n                clickedAmount++;\r\n              }\r\n\r\n              let select = question.querySelector(\"select\");\r\n              console.log(\"select\", select);\r\n              // We don't need to do anything here, since edgenuity doesn't require you to select anything in these types of questions.\r\n              if (select) clickedAmount++;\r\n\r\n              let ifFW = question.querySelector(\"iframe\");\r\n              let hintButton =\r\n                ifFW?.contentDocument?.getElementById(\"onlyButton\");\r\n              if (hintButton) {\r\n                setInterval(() => {\r\n                  hintButton.click();\r\n                  clickedAmount++;\r\n                }, 250);\r\n              }\r\n\r\n              const doneButton = question.querySelectorAll(\"div[title='done']\");\r\n              console.log(\"doneButton\", doneButton);\r\n              console.log(\"clickedAmount\", clickedAmount);\r\n              if (doneButton && doneButton.length > 0 && clickedAmount > 0) {\r\n                Array.from(doneButton).forEach((button) => button.click());\r\n                nextFrame(API);\r\n                setTimeout(() => {\r\n                  // checkForStageFrame();\r\n                  validateFunction();\r\n                  return;\r\n                }, 5000);\r\n              }\r\n            }, 500);\r\n          });\r\n        }\r\n        nextFrame(API);\r\n        setTimeout(() => {\r\n          checkForStageFrame();\r\n          return;\r\n        }, 5000);\r\n      } else {\r\n        console.log(\"Instruction is not playing\");\r\n      }\r\n    } else {\r\n      //   console.log(\"Activity already completed\");\r\n      //   // Find the first incomplete frame and mark it as complete\r\n      //   const firstIncompleteIndex = API.FrameChain.framesStatus.findIndex(\r\n      //     (status) => status !== \"complete\"\r\n      //   );\r\n\r\n      //   if (firstIncompleteIndex !== -1) {\r\n      //     API.FrameChain.framesStatus[firstIncompleteIndex] = \"complete\";\r\n      //   }\r\n      //   console.log(\"Next Frame:\", API.FrameChain.nextFrame());\r\n      //   autoVideoButton.classList.remove(\"active\", \"writing\");\r\n      nextFrame(API);\r\n      setTimeout(() => {\r\n        checkForStageFrame();\r\n        return;\r\n      }, 5000);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    autoAdvanceButton.classList.remove(\"active\", \"writing\");\r\n  }\r\n}\r\n\r\nfunction nextFrame(API) {\r\n  // Check if all frames except the current one are complete\r\n  if (API?.FrameChain?.framesStatus) {\r\n    // Check if all frames except the current one are complete\r\n    const currentPosition = API.FrameChain.currentPosition;\r\n    const allOtherFramesComplete = API.FrameChain.framesStatus.every(\r\n      (status, index) => index === currentPosition || status === \"complete\"\r\n    );\r\n\r\n    console.log(\"Frame statuses:\", API.FrameChain.framesStatus);\r\n    console.log(\"All other frames complete:\", allOtherFramesComplete);\r\n\r\n    if (!allOtherFramesComplete) {\r\n      console.log(\r\n        \"************* Not all frames are complete. Some frames may need attention. *************\"\r\n      );\r\n    } else {\r\n      console.log(\r\n        \"************* All frames are complete. Proceeding to next frame. *************\"\r\n      );\r\n      const advanceType = GM_getValue(\"advanceType\");\r\n      if (advanceType === \"Unlocked Advance\") {\r\n        const backUrl = GM_getValue(\"backUrl\");\r\n        console.log(\"backUrl\", backUrl);\r\n        GM_setValue(\"advanceClick\", 1);\r\n        window.location.href = backUrl;\r\n      } else {\r\n        console.log(\"All frames except current are complete.\");\r\n        let buttonCheckInterval;\r\n        try {\r\n          // Set up a function to check the button status\r\n          const checkAndClickNextButton = () => {\r\n            const nextActivityButton = document.querySelector(\r\n              'a.footnav.goRight[data-bind*=\"getNextActivity\"]'\r\n            );\r\n\r\n            // Check if the Next Activity button is disabled\r\n            const isDisabled =\r\n              nextActivityButton &&\r\n              nextActivityButton.classList.contains(\"disabled\");\r\n\r\n            console.log(\"Next Activity button disabled:\", isDisabled);\r\n\r\n            // Only proceed if the button exists and is not disabled\r\n            if (nextActivityButton && !isDisabled) {\r\n              console.log(\r\n                \"############# Found Next Activity button, clicking it ##############\"\r\n              );\r\n              nextActivityButton.click();\r\n              setTimeout(() => {\r\n                checkForStageFrame();\r\n                return;\r\n              }, 3000);\r\n\r\n              // Clear the interval once we've clicked the button\r\n              clearInterval(buttonCheckInterval);\r\n            } else if (!nextActivityButton) {\r\n              console.log(\"Next Activity button not found\");\r\n            } else {\r\n              console.log(\"Next Activity button is disabled, waiting...\");\r\n            }\r\n          };\r\n\r\n          // Check for the button every 500ms\r\n          buttonCheckInterval = setInterval(checkAndClickNextButton, 500);\r\n\r\n          // Clear the interval after 30 seconds to prevent it from running indefinitely\r\n          setTimeout(() => {\r\n            clearInterval(buttonCheckInterval);\r\n            console.log(\r\n              \"Stopped checking for Next Activity button after timeout\"\r\n            );\r\n          }, 30000);\r\n        } catch (error) {\r\n          console.error(\r\n            \"Error finding or clicking Next Activity button:\",\r\n            error\r\n          );\r\n        }\r\n      }\r\n    }\r\n    API.FrameChain.nextFrame();\r\n  }\r\n}\r\n\r\n// Wait for DOM to be fully loaded before checking for the current activity\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n  console.log(\"DOM fully loaded, executing redirect to current activity\");\r\n  if (window.location.hostname === \"student.edgenuity.com\") {\r\n    if (GM_getValue(\"advanceClick\") === 1) {\r\n      GM_setValue(\"advanceClick\", 2);\r\n      const selectedType = GM_getValue(\"advanceType\");\r\n      if (selectedType === \"Unlocked Advance\") {\r\n        console.log(\r\n          \"Unlocked Advance\",\r\n          window.location.href.split(\"coursemap\")[0] + \"coursemap\"\r\n        );\r\n        GM_setValue(\r\n          \"backUrl\",\r\n          window.location.href.split(\"coursemap\")[0] + \"coursemap\"\r\n        );\r\n      }\r\n      redirectToCurrentActivity();\r\n    }\r\n  } else if (\r\n    window.location.hostname.match(/^r\\d+\\.core\\.learn\\.edgenuity\\.com$/)\r\n  ) {\r\n    if (GM_getValue(\"advanceClick\") === 2) {\r\n      GM_setValue(\"advanceClick\", 0);\r\n      validateFunction();\r\n    }\r\n  }\r\n});\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.js\");\n",""],"names":[],"sourceRoot":""}
>>>>>>> 64bbd674875e621f43400063674736f1b0dcf67e
